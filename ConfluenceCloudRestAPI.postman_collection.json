{
	"info": {
		"_postman_id": "0030c28e-3747-4687-a0be-97bc9eec6cbb",
		"name": "The Confluence Cloud REST API",
		"description": "This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "audit",
			"item": [
				{
					"name": "Get audit records",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{startDate}}",
									"description": "Filters the results to the records on or after the `startDate`. \nThe `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "{{endDate}}",
									"description": "Filters the results to the records on or before the `endDate`. \nThe `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "{{searchString}}",
									"description": "Filters the results to records that have string property values \nmatching the `searchString`.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned records.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of records to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns all records in the audit log, optionally for a certain date range. \nThis contains information about events like space exports, group membership \nchanges, app installations, etc. For more information, see \n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) \nin the Confluence administrator's guide.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				},
				{
					"name": "Create audit record",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit"
							]
						},
						"description": "Creates a record in the audit log. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				},
				{
					"name": "Export audit records",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/zip, text/csv",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit/export?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit",
								"export"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{startDate}}",
									"description": "Filters the exported results to the records on or after the `startDate`. \nThe `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "{{endDate}}",
									"description": "Filters the exported results to the records on or before the `endDate`. \nThe `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "{{searchString}}",
									"description": "Filters the exported results to records that have string property values \nmatching the `searchString`.",
									"disabled": true
								},
								{
									"key": "format",
									"value": "{{format}}",
									"description": "The format of the export file for the audit records.",
									"disabled": true
								}
							]
						},
						"description": "Exports audit records as a CSV file or ZIP file.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				},
				{
					"name": "Get retention period",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit/retention",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit",
								"retention"
							]
						},
						"description": "Returns the retention period for records in the audit log. The retention \nperiod is how long an audit record is kept for, from creation date until \nit is deleted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				},
				{
					"name": "Set retention period",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit/retention",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit",
								"retention"
							]
						},
						"description": "Sets the retention period for records in the audit log. The retention period \ncan be set to a maximum of 20 years.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				},
				{
					"name": "Get audit records for time period",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/audit/since?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"audit",
								"since"
							],
							"query": [
								{
									"key": "number",
									"value": "{{number}}",
									"description": "The number of units for the time period.",
									"disabled": true
								},
								{
									"key": "units",
									"value": "{{units}}",
									"description": "The unit of time that the time period is measured in.",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "{{searchString}}",
									"description": "Filters the results to records that have string property values \nmatching the `searchString`.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned records.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of records to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns records from the audit log, for a time period back from the current \ndate. For example, you can use this method to get the last 3 months of records.\n\nThis contains information about events like space exports, group membership \nchanges, app installations, etc. For more information, see \n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) \nin the Confluence administrator's guide.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission."
					},
					"response": []
				}
			],
			"description": "Folder for audit"
		},
		{
			"name": "content",
			"item": [
				{
					"name": "Get content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content"
							],
							"query": [
								{
									"key": "type",
									"value": "{{type}}",
									"description": "The type of content to return.",
									"disabled": true
								},
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its content.",
									"disabled": true
								},
								{
									"key": "title",
									"value": "{{title}}",
									"description": "The title of the page to be returned. Required for page type.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Filter the results to a set of content based on their status. If set to `any`, \ncontent with any status is returned. Note, the `historical` status is currently \nnot supported.",
									"disabled": true
								},
								{
									"key": "postingDay",
									"value": "{{postingDay}}",
									"description": "The posting date of the blog post to be returned. Required for\nblogpost type. Format: yyyy-mm-dd.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to expand.\nBy default, the following objects are expanded: `space`, `history`, `version`.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "trigger",
									"value": "{{trigger}}",
									"description": "If set to `viewed`, the request will trigger a 'viewed' event for the content. \nWhen this event is triggered, the page/blogpost will appear on the 'Recently visited' \ntab of the user's Confluence dashboard.",
									"disabled": true
								},
								{
									"key": "orderby",
									"value": "{{orderby}}",
									"description": "Orders the content by a particular field. Specify the field and sort direction for \nthis parameter, as follows: 'fieldpath asc/desc'. For example, 'history.createdDate desc'.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content objects to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns all content in a Confluence instance.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission). \nOnly content that the user has permission to view will be returned."
					},
					"response": []
				},
				{
					"name": "Create content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Filter the returned content by status.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content to expand. \nBy default, the following objects are expanded: `space`, `history`, `version`.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								}
							]
						},
						"description": "Creates a new piece of content or publishes an existing draft. \n\nTo publish a draft, add the `id` and `status` properties to the body of the request. \nSet the `id` to the ID of the draft and set the `status` to 'current'. When the \nrequest is sent, a new piece of content will be created and the metadata from the \ndraft will be transferred into it.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the \nspace that the content will be created in, and permission to view the draft if publishing a draft."
					},
					"response": []
				},
				{
					"name": "Publish legacy draft",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/blueprint/instance/:draftId?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								"blueprint",
								"instance",
								":draftId"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "The status of the content to be updated, i.e. the draft. This is set \nto 'draft' by default, so you shouldn't need to specify it.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content \nto expand when returned. By default, the following objects are expanded: \n`body.storage`,`history`,`space`,`version`,`ancestors`\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "draftId",
									"value": "{{draftId}}",
									"description": "The ID of the draft page that was created from a blueprint. \nYou can find the `draftId` in the Confluence application by \nopening the draft page and checking the page URL."
								}
							]
						},
						"description": "Publishes a legacy draft of a page created from a blueprint. Legacy drafts \nwill eventually be removed in favor of shared drafts. For now, this method\nworks the same as [Publish shared draft](#api-content-blueprint-instance-draftId-put).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the draft and 'Add' permission for the space that \nthe content will be created in."
					},
					"response": []
				},
				{
					"name": "Publish shared draft",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/blueprint/instance/:draftId?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								"blueprint",
								"instance",
								":draftId"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "The status of the content to be updated, i.e. the draft. This is set \nto 'draft' by default, so you shouldn't need to specify it.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content \nto expand when returned. By default, the following objects are expanded: \n`body.storage`,`history`,`space`,`version`,`ancestors`\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "draftId",
									"value": "{{draftId}}",
									"description": "The ID of the draft page that was created from a blueprint. \nYou can find the `draftId` in the Confluence application by \nopening the draft page and checking the page URL."
								}
							]
						},
						"description": "Publishes a shared draft of a page created from a blueprint.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the draft and 'Add' permission for the space that \nthe content will be created in."
					},
					"response": []
				},
				{
					"name": "Search content by CQL",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/search?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								"search"
							],
							"query": [
								{
									"key": "cql",
									"value": "{{cql}}",
									"description": "The CQL string that is used to find the requested content.",
									"disabled": true
								},
								{
									"key": "cqlcontext",
									"value": "{{cqlcontext}}",
									"description": "The space, content, and content status to execute the search against. \nSpecify this as an object with the following properties:\n\n- `spaceKey` Key of the space to search against. Optional.\n- `contentId` ID of the content to search against. Optional. Must \nbe in the space spacified by `spaceKey`.\n- `contentStatuses` Content statuses to search against. Optional.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to expand.\n\n- `childTypes.all` returns whether the content has attachments, comments, \nor child pages. Use this if you only need to check whether the content \nhas children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same \nas the information returned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in \nrelation to the content, like when they last viewed it, modified it, \ncontributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set \nvia the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used \nwhen setting permissions.\n- `children.page` returns pages that are descendants at the level \nimmediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have \npermission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have \npermission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have \npermission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have \npermission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update \nof the content, including who updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to \nthe current content update.\n- `history.contributors` returns all of the users who have contributed to \nthe content.\n- `history.nextVersion` returns information about the update after to the \ncurrent content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the \neditor format, view format, and export format.\n- `version` returns information about the most recent update of the content, \nincluding who updated it and when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the \ncontent.\n- `descendants.attachment` returns all attachments for the content, same as \n`children.attachment`.\n- `descendants.comment` returns all comments on the content, same as \n`children.comment`.\n- `space` returns the space that the content is in. This is the same as the \ninformation returned by [Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content objects to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns the list of content that matches a Confluence Query Language \n(CQL) query. For information on CQL, see: \n[Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission). \nOnly content that the user has permission to view will be returned."
					},
					"response": []
				},
				{
					"name": "Get content by ID",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Filter the results to a set of content based on their status. \nIf set to `any`, content with any status is returned. Note, the \n`historical` status is currently not supported.",
									"disabled": true
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "The version number of the content to be returned.",
									"disabled": true
								},
								{
									"key": "embeddedContentRender",
									"value": "{{embeddedContentRender}}",
									"description": "The version of embedded content (e.g. attachments) to render. \n\n- current renders the latest version of the embedded content.\n- version-at-save renders the version of the embedded content \nat the time of save.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to expand.\nBy default, the following objects are expanded: `space`, `history`, `version`.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, view format, \nand export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "trigger",
									"value": "{{trigger}}",
									"description": "If set to `viewed`, the request will trigger a 'viewed' event for the content. \nWhen this event is triggered, the page/blogpost will appear on the 'Recently visited' \ntab of the user's Confluence dashboard.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be returned. If you don't know the content ID, \nuse [Get content](#api-content-get) and filter the results."
								}
							]
						},
						"description": "Returns a single piece of content, like a page or a blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content. If the content is a blog post, 'View' permission \nfor the space is required."
					},
					"response": []
				},
				{
					"name": "Update content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "The updated status of the content. Use this parameter to change the \nstatus of a piece of content without passing the entire request body.",
									"disabled": true
								},
								{
									"key": "conflictPolicy",
									"value": "{{conflictPolicy}}",
									"description": "The action that should be taken when conflicts are discovered. \nOnly used when publishing a draft page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be updated."
								}
							]
						},
						"description": "Updates a piece of content. Use this method to update the title or body \nof a piece of content, change the status, change the parent page, and more.\n\nNote, updating draft content is currently not supported.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Delete content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Set this to `trashed`, if the content's status is `trashed` and you want to purge it.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be deleted."
								}
							]
						},
						"description": "Moves a piece of content to the space's trash or purges it from the trash, \ndepending on the content's type and status:\n\n- If the content's type is `page` or `blogpost` and its status is `current`, \nit will be trashed.\n- If the content's type is `page` or `blogpost` and its status is `trashed`, \nthe content will be purged from the trash and deleted permanently. Note, \nyou must also set the `status` query parameter to `trashed` in your request.\n- If the content's type is `comment` or `attachment`, it will be deleted \npermanently without being trashed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Delete' permission for the space that the content is in, and permission to edit the content."
					},
					"response": []
				},
				{
					"name": "Get content children",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the children to expand, where:\n\n- `attachment` returns all attachments for the content.\n- `comments` returns all comments for the content.\n- `page` returns all child pages of the content.",
									"disabled": true
								},
								{
									"key": "parentVersion",
									"value": "{{parentVersion}}",
									"description": "The version of the parent content to retrieve children for.\nCurrently, this only works for the latest version.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its children."
								}
							]
						},
						"description": "Returns a map of the direct children of a piece of content. A piece of content \nhas different types of child content, depending on its type. These are \nthe default parent-child content type relationships:\n\n- `page`: child content is `page`, `comment`, `attachment`\n- `blogpost`: child content is `comment`, `attachment`\n- `attachment`: child content is `comment`\n- `comment`: child content is `attachment`\n\nApps can override these default relationships. Apps can also introduce \nnew content types that create new parent-child content relationships.\n\nNote, the map will always include all child content types that are valid \nfor the content. However, if the content has no instances of a child content \ntype, the map will contain an empty array for that child content type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, \nand permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Get attachments",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/attachment?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"attachment"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the \nattachments to expand. By default, the following objects are expanded: \n`metadata`.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned attachments.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of attachments to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "filename",
									"value": "{{filename}}",
									"description": "Filter the results to attachments that match the filename.",
									"disabled": true
								},
								{
									"key": "mediaType",
									"value": "{{mediaType}}",
									"description": "Filter the results to attachments that match the media type.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its attachments."
								}
							]
						},
						"description": "Returns the attachments for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content. If the content is a blog post, 'View' permission \nfor the space is required."
					},
					"response": []
				},
				{
					"name": "Create attachment",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "multipart/form-data",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/attachment?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"attachment"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "The status of the content that the attachment is being added to.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to add the attachment to."
								}
							]
						},
						"description": "Adds an attachment to a piece of content. This method only adds a new \nattachment. If you want to update an existing attachment, use \n[Create or update attachments](#api-content-id-child-attachment-put).\n\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request \nfor this method, otherwise it will be blocked. This protects against XSRF \nattacks, which is necessary as this method accepts multipart/form-data.\n\nThe media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt). \nMost client libraries have classes that make it easier to implement \nmultipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html) \nJava class provided by Apache HTTP Components.\n\nExample: This curl command attaches a file ('example.txt') to a container \n(id='123') with a comment and `minorEdits`=true.\n\n``` bash\ncurl -D- \\\n  -u admin:admin \\\n  -X POST \\\n  -H \"X-Atlassian-Token: nocheck\" \\\n  -F \"file=@example.txt\" \\\n  -F \"minorEdit=true\" \\\n  -F \"comment=Example attachment comment\" \\\n  http://myhost/rest/api/content/123/child/attachment\n```\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Create or update attachment",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "multipart/form-data",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/attachment?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"attachment"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}",
									"description": "The status of the content that the attachment is being added to. \nThis should always be set to 'current'.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to add the attachment to."
								}
							]
						},
						"description": "Adds an attachment to a piece of content. If the attachment already exists \nfor the content, then the attachment is updated (i.e. a new version of the \nattachment is created).\n\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request \nfor this method, otherwise it will be blocked. This protects against XSRF \nattacks, which is necessary as this method accepts multipart/form-data.\n\nThe media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt). \nMost client libraries have classes that make it easier to implement \nmultipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html) \nJava class provided by Apache HTTP Components.\n\nExample: This curl command attaches a file ('example.txt') to a piece of \ncontent (id='123') with a comment and `minorEdits`=true. If the 'example.txt' \nfile already exists, it will update it with a new version of the attachment.\n\n``` bash\ncurl -D- \\\n  -u admin:admin \\\n  -X PUT \\\n  -H \"X-Atlassian-Token: nocheck\" \\\n  -F \"file=@example.txt\" \\\n  -F \"minorEdit=true\" \\\n  -F \"comment=Example attachment comment\" \\\n  http://myhost/rest/api/content/123/child/attachment\n```\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Update attachment properties",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/attachment/:attachmentId",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"attachment",
								":attachmentId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the attachment is attached to."
								},
								{
									"key": "attachmentId",
									"value": "{{attachmentId}}",
									"description": "The ID of the attachment to update."
								}
							]
						},
						"description": "Updates the attachment properties, i.e. the non-binary data of an attachment \nlike the filename, media-type, comment, and parent container.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Update attachment data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "multipart/form-data",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/attachment/:attachmentId/data",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"attachment",
								":attachmentId",
								"data"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the attachment is attached to."
								},
								{
									"key": "attachmentId",
									"value": "{{attachmentId}}",
									"description": "The ID of the attachment to update."
								}
							]
						},
						"description": "Updates the binary data of an attachment, given the attachment ID, and \noptionally the comment and the minor edit field.\n\nThis method is essentially the same as [Create or update attachments](#api-content-id-child-attachment-put), \nexcept that it matches the attachment ID rather than the name.\n\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request \nfor this method, otherwise it will be blocked. This protects against XSRF \nattacks, which is necessary as this method accepts multipart/form-data.\n\nThe media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt). \nMost client libraries have classes that make it easier to implement \nmultipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html) \nJava class provided by Apache HTTP Components.\n\nExample: This curl command updates an attachment (id='att456') that is attached  \nto a piece of content (id='123') with a comment and `minorEdits`=true. \n\n``` bash\ncurl -D- \\\n  -u admin:admin \\\n  -X POST \\\n  -H \"X-Atlassian-Token: nocheck\" \\\n  -F \"file=@example.txt\" \\\n  -F \"minorEdit=true\" \\\n  -F \"comment=Example attachment comment\" \\\n  http://myhost/rest/api/content/123/child/attachment/att456/data\n```\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Get content comments",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/comment?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								"comment"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the \nattachments to expand.\n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).\n\nIn addition, the following comment-specific expansions can be used:\n\n- `extensions.inlineProperties` returns inline comment-specific properties.\n- `extensions.resolution` returns the resolution status of each comment.",
									"disabled": true
								},
								{
									"key": "parentVersion",
									"value": "{{parentVersion}}",
									"description": "The version of the parent content to retrieve children for.\nCurrently, this only works for the latest version.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned comments.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of comments to return per page. Note,\nthis may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "location",
									"value": "{{location}}",
									"description": "The location of the comments in the page. Multiple locations can be specified. \nIf no location is specified, comments from all locations are returned.",
									"disabled": true
								},
								{
									"key": "depth",
									"value": "{{depth}}",
									"description": "Currently, this parameter is not used. \nComments are returned at the root level only.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its comments."
								}
							]
						},
						"description": "Returns the comments on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, \nand permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Get content children by type",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/child/:type?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"child",
								":type"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content to expand. \n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "parentVersion",
									"value": "{{parentVersion}}",
									"description": "The version of the parent content to retrieve children for.\nCurrently, this only works for the latest version.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content to return per page. Note,\nthis may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its children."
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "The type of children to return."
								}
							]
						},
						"description": "Returns all children of a given type, for a piece of content. \nA piece of content has different types of child content, depending on its type:\n\n- `page`: child content is `page`, `comment`, `attachment`\n- `blogpost`: child content is `comment`, `attachment`\n- `attachment`: child content is `comment`\n- `comment`: child content is `attachment`\n\nCustom content types that are provided by apps can also be returned.\n\nNote, this method only returns direct children. To return children at all \nlevels, use [Get descendants by type](#api-content-id-descendant-type-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, \nand permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Get content descendants",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/descendant?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"descendant"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the children to \nexpand, where:\n\n- `attachment` returns all attachments for the content.\n- `comments` returns all comments for the content.\n- `page` returns all child pages of the content.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its descendants."
								}
							]
						},
						"description": "Returns a map of the descendants of a piece of content. This is similar \nto [Get content children](#api-content-id-child-get), except that this \nmethod returns child pages at all levels, rather than just the direct \nchild pages.\n\nA piece of content has different types of descendants, depending on its type:\n\n- `page`: descendant is `page`, `comment`, `attachment`\n- `blogpost`: descendant is `comment`, `attachment`\n- `attachment`: descendant is `comment`\n- `comment`: descendant is `attachment`\n\nThe map will always include all descendant types that are valid for the content. \nHowever, if the content has no instances of a descendant type, the map will \ncontain an empty array for that descendant type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'View' permission for the space, and permission to view the content if it \nis a page."
					},
					"response": []
				},
				{
					"name": "Get content descendants by type",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/descendant/:type?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"descendant",
								":type"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content to expand. \n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content to return per page. Note,\nthis may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its descendants."
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "The type of descendants to return."
								}
							]
						},
						"description": "Returns all descendants of a given type, for a piece of content. This is \nsimilar to [Get content children by type](#api-content-id-child-type-get), \nexcept that this method returns child pages at all levels, rather than just \nthe direct child pages.\n\nA piece of content has different types of descendants, depending on its type:\n\n- `page`: descendant is `page`, `comment`, `attachment`\n- `blogpost`: descendant is `comment`, `attachment`\n- `attachment`: descendant is `comment`\n- `comment`: descendant is `attachment`\n\nCustom content types that are provided by apps can also be returned.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'View' permission for the space, and permission to view the content if it \nis a page."
					},
					"response": []
				},
				{
					"name": "Get history for content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/history?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"history"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content history to expand.\n\n- `lastUpdated` returns information about the most recent update of the content, \nincluding who updated it and when it was updated.\n- `previousVersion` returns information about the update prior to the current content \nupdate. For this method, it contains the same information as `lastUpdated`.\n- `contributors` returns all of the users who have contributed to the content.\n- `nextVersion` This parameter is not used for this method.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its history."
								}
							]
						},
						"description": "Returns the most recent update for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content."
					},
					"response": []
				},
				{
					"name": "Get macro body by macro ID",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/history/:version/macro/id/:macroId",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"history",
								":version",
								"macro",
								"id",
								":macroId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID for the content that contains the macro."
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "The version of the content that contains the macro."
								},
								{
									"key": "macroId",
									"value": "{{macroId}}",
									"description": "The ID of the macro. This is usually passed by the app that the\nmacro is in. Otherwise, find the macro ID by querying the desired \ncontent and version, then expanding the body in storage format. \nFor example, '/content/196611/version/7?expand=content.body.storage'."
								}
							]
						},
						"description": "Returns the body of a macro in storage format, for the given macro ID. \nThis includes information like the name of the macro, the body of the macro, \nand any macro parameters. This method is mainly used by Cloud apps.\n\nAbout the macro ID: When a macro is created in a new version of content, \nConfluence will generate a random ID for it, unless an ID is specified \n(by an app). The macro ID will look similar to this: '50884bd9-0cb8-41d5-98be-f80943c14f96'. \nThe ID is then persisted as new versions of content are created, and is \nonly modified by Confluence if there are conflicting IDs.\n\nNote, to preserve backwards compatibility this resource will also match on \nthe hash of the macro body, even if a macro ID is found. This check will \neventually become redundant, as macro IDs are generated for pages and \ntransparently propagate out to all instances.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content that the macro is in."
					},
					"response": []
				},
				{
					"name": "Get labels for content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/label?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"label"
							],
							"query": [
								{
									"key": "prefix",
									"value": "{{prefix}}",
									"description": "Filters the results to labels with the specified prefix. If this parameter  \nis not specified, then labels with any prefix will be returned.\n\n- `global` prefix is used by default when a user adds a label \nvia the UI.\n- `my` prefix can be explicitly added by a user when adding a label \nvia the UI, e.g. 'my:example-label'. Also, when a page is selected as \na favourite, the 'my:favourite' label is automatically added.\n- `team` can used when adding labels via [Add labels to content](#api-content-id-label-post) \nbut is not used in the UI. ",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned labels.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of labels to return per page. Note,\nthis may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its labels."
								}
							]
						},
						"description": "Returns the labels on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'View' permission for the space and permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Add labels to content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/label",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"label"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that will have labels added to it."
								}
							]
						},
						"description": "Adds labels to a piece of content. Does not modify the existing labels.\n\nNotes:\n\n- Labels can also be added when creating content ([Create content](#api-content-post)).\n- Labels can be updated when updating content ([Update content](#api-content-id-put)). \nThis will delete the existing labels and replace them with the labels in \nthe request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Remove label from content using query parameter",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/label?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"label"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}",
									"description": "The name of the label to be removed.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the label will be removed from."
								}
							]
						},
						"description": "Removes a label from a piece of content. This is similar to \n[Remove label from content](#api-content-id-label-label-delete) \nexcept that the label name is specified via a query parameter. \n\nUse this method if the label name has \"/\" characters, as \n[Remove label from content using query parameter](#api-content-id-label-delete) \ndoes not accept \"/\" characters for the label name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Remove label from content",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/label/:label",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"label",
								":label"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the label will be removed from."
								},
								{
									"key": "label",
									"value": "{{label}}",
									"description": "The name of the label to be removed."
								}
							]
						},
						"description": "Removes a label from a piece of content. This is similar to \n[Remove label from content using query parameter](#api-content-id-label-delete) \nexcept that the label name is specified via a path parameter. \n\nUse this method if the label name does not have \"/\" characters, as the path \nparameter does not accept \"/\" characters for security reasons. Otherwise, \nuse [Remove label from content using query parameter](#api-content-id-label-delete).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Get watches for page",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/notification/child-created?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"notification",
								"child-created"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned watches.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of watches to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its watches."
								}
							]
						},
						"description": "Returns the watches for a page. A user that watches a page will receive \nreceive notifications when the page is updated.\n\nIf you want to manage watches for a page, use the following `user` methods:\n\n- [Get content watch status for user](#api-user-watch-content-contentId-get)\n- [Add content watch](#api-user-watch-content-contentId-post)\n- [Remove content watch](#api-user-watch-content-contentId-delete)\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get watches for space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/notification/created?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"notification",
								"created"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned watches.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of watches to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its watches."
								}
							]
						},
						"description": "Returns all space watches for the space that the content is in. A user that \nwatches a space will receive receive notifications when any content in the \nspace is updated.\n\nIf you want to manage watches for a space, use the following `user` methods:\n\n- [Get space watch status for user](#api-user-watch-space-spaceKey-get)\n- [Add space watch](#api-user-watch-space-spaceKey-post)\n- [Remove space watch](#api-user-watch-space-spaceKey-delete)\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Copy page hierarchy",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json;charset=UTF-8",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/pagehierarchy/copy",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"pagehierarchy",
								"copy"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Copy page hierarchy allows the copying of an entire hierarchy of pages and their associated properties, permissions and attachments.\n The id path parameter refers to the content id of the page to copy, and the new parent of this copied page is defined using the destinationPageId in the request body.\n The titleOptions object defines the rules of renaming page titles during the copy;\n for example, search and replace can be used in conjunction to rewrite the copied page titles.\n\n Response example:\n <pre><code>\n {\n      \"id\" : \"1180606\",\n      \"links\" : {\n           \"status\" : \"/rest/api/longtask/1180606\"\n      }\n }\n </code></pre>\n Use the /longtask/<taskId> REST API to get the copy task status."
					},
					"response": []
				},
				{
					"name": "Get content properties",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to \nexpand. By default, the `version` object is expanded.\n\n- `content` returns the content that the property is stored against.\n- `version` returns information about the version of the property, such \nas the version number, when it was created, etc.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned properties.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of properties to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its properties."
								}
							]
						},
						"description": "Returns the properties for a piece of content. For more information \nabout content properties, see [Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'View' permission for the space, and permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Create content property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to add the property to."
								}
							]
						},
						"description": "Creates a property for an existing piece of content. For more information \nabout content properties, see [Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\nThis is the same as [Create content property for key](#api-content-id-property-key-post) \nexcept that the key is specified in the request body instead of as a \npath parameter.\n\nContent properties can also be added when creating a new piece of content \nby including them in the `metadata.properties` of the request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Get content property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property/:key?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property",
								":key"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to \nexpand. By default, the `version` object is expanded.\n\n- `content` returns the content that the property is stored against.\n- `version` returns information about the version of the property, such \nas the version number, when it was created, etc.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for the property."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the content property."
								}
							]
						},
						"description": "Returns a content property for a piece of content. For more information, see \n[Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'View' permission for the space, and permission to view the content if it is a page."
					},
					"response": []
				},
				{
					"name": "Create content property for key",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to add the property to."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the content property. Required."
								}
							]
						},
						"description": "Creates a property for an existing piece of content. For more information \nabout content properties, see [Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\nThis is the same as [Create content property](#api-content-id-property-post) \nexcept that the key is specified as a path parameter instead of in the \nrequest body.\n\nContent properties can also be added when creating a new piece of content \nby including them in the `metadata.properties` of the request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Update content property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the property belongs to."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the property."
								}
							]
						},
						"description": "Updates an existing content property. This method will also create a new \nproperty for a piece of content, if the property key does not exist and \nthe property version is 1. For more information about content properties, see \n[Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Delete content property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the property belongs to."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the property."
								}
							]
						},
						"description": "Deletes a content property. For more information about content properties, see \n[Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Get restrictions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions to expand. By default, the following objects are expanded: \n`restrictions.user`, `restrictions.group`.\n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to.\n- `content` returns the piece of content that the restrictions are \napplied to.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the users and groups in the returned restrictions.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of users and the maximum number of groups, in the \nreturned restrictions, to return per page. Note, this may be restricted \nby fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its restrictions."
								}
							]
						},
						"description": "Returns the restrictions on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content."
					},
					"response": []
				},
				{
					"name": "Add restrictions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions (returned in response) to expand. \n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are \napplied to.            ",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to add restrictions to."
								}
							]
						},
						"description": "Adds restrictions to a piece of content. Note, this does not change any \nexisting restrictions on the content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Update restrictions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions (returned in response) to expand. \n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are \napplied to.            ",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to update restrictions for."
								}
							]
						},
						"description": "Updates restrictions for a piece of content. This removes the existing \nrestrictions and replaces them with the restrictions in the request.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Delete restrictions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions (returned in response) to expand. \n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are \napplied to.            ",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to remove restrictions from."
								}
							]
						},
						"description": "Removes all restrictions (read and update) on a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Get restrictions by operation",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions to expand. \n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are \napplied to.            ",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its restrictions."
								}
							]
						},
						"description": "Returns restrictions on a piece of content by operation. This method is \nsimilar to [Get restrictions](#api-content-id-restriction-get) except that \nthe operations are properties of the return object, rather than items in \na results array. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content."
					},
					"response": []
				},
				{
					"name": "Get restrictions for operation",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content \nrestrictions to expand. \n\n- `restrictions.user` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `restrictions.group` returns the piece of content that the restrictions are \napplied to. Expanded by default.\n- `content` returns the piece of content that the restrictions are \napplied to.            ",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the users and groups in the returned restrictions.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of users and the maximum number of groups, in the \nreturned restrictions, to return per page. Note, this may be restricted \nby fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its restrictions."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation type of the restrictions to be returned."
								}
							]
						},
						"description": "Returns the restictions on a piece of content for a given operation (read \nor update).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content."
					},
					"response": []
				},
				{
					"name": "Get content restriction status for group",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/group/:groupName",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"group",
								":groupName"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that the restriction applies to."
								},
								{
									"key": "groupName",
									"value": "{{groupName}}",
									"description": "The name of the group to be queried for whether the content restriction \napplies to it."
								}
							]
						},
						"description": "Returns whether the specified content restriction applies to a group. \nFor example, if the 'admins' group has permission to read a page with an \nID of 123, then the following request will return true:\n\n`https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/group/admins`\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content."
					},
					"response": []
				},
				{
					"name": "Add group to content restriction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/group/:groupName",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"group",
								":groupName"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that the restriction applies to."
								},
								{
									"key": "groupName",
									"value": "{{groupName}}",
									"description": "The name of the group to add to the content restriction."
								}
							]
						},
						"description": "Adds a group to a content restriction. That is, grant read or update \npermission to the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Remove group from content restriction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/group/:groupName",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"group",
								":groupName"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that the restriction applies to."
								},
								{
									"key": "groupName",
									"value": "{{groupName}}",
									"description": "The name of the group to remove from the content restriction."
								}
							]
						},
						"description": "Removes a group from a content restriction. That is, remove read or update \npermission for the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Get content restriction status for user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/user?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"user"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe key of the user to be queried for whether the content restriction applies to it.\nRequired, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "{{userName}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe username of the user to be queried for whether the content restriction applies to it.\nRequired, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The account ID of the user to be queried for whether the content restriction applies to it. The accountId\nuniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that is restricted."
								}
							]
						},
						"description": "Returns whether the specified content restriction applies to a user. \nFor example, if the user 'admin' has permission to read a page with an \nID of 123, then the following request will return true:\n\n`https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/user?username=admin`\n\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content."
					},
					"response": []
				},
				{
					"name": "Add user to content restriction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/user?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"user"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe key of the user to add to the content restriction. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "{{userName}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe username of the user to add to the content restriction. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The account ID of the user to add to the content restriction. The accountId uniquely identifies the user across\nall Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that the restriction applies to."
								}
							]
						},
						"description": "Adds a user to a content restriction. That is, grant read or update \npermission to the user for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Remove user from content restriction",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/restriction/byOperation/:operationKey/user?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"restriction",
								"byOperation",
								":operationKey",
								"user"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe key of the user to remove from the content restriction. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "userName",
									"value": "{{userName}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe username of the user to remove from the content restriction. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The account ID of the user to remove from the content restriction. The accountId uniquely identifies the user\nacross all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the restriction applies to."
								},
								{
									"key": "operationKey",
									"value": "{{operationKey}}",
									"description": "The operation that the restriction applies to."
								}
							]
						},
						"description": "Removes a group from a content restriction. That is, remove read or update \npermission for the group for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to edit the content."
					},
					"response": []
				},
				{
					"name": "Get content versions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/version?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"version"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned versions.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of versions to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to expand.\n\n- `collaborators` returns the users that collaborated on the version.\n- `content` returns the content for the version.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its versions."
								}
							]
						},
						"description": "Returns the versions for a piece of content in descending order.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content. If the content is a blog post, 'View' permission \nfor the space is required."
					},
					"response": []
				},
				{
					"name": "Restore content version",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/version?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"version"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the returned\ncontent to expand.\n\n- `collaborators` returns the users that collaborated on the version.\n- `content` returns the content for the version.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content for which the history will be restored."
								}
							]
						},
						"description": "Restores a historical version to be the latest version. That is, a new version \nis created with the content of the historical version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				},
				{
					"name": "Get content version",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/version/:versionNumber?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"version",
								":versionNumber"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content to \nexpand. By default, the `content` object is expanded.\n\n- `collaborators` returns the users that collaborated on the version.\n- `content` returns the content for the version.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content to be queried for its version."
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}",
									"description": "The number of the version to be retrieved."
								}
							]
						},
						"description": "Returns a version for a piece of content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the content. If the content is a blog post, 'View' permission \nfor the space is required."
					},
					"response": []
				},
				{
					"name": "Delete content version",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/content/:id/version/:versionNumber",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"content",
								":id",
								"version",
								":versionNumber"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the content that the version will be deleted from."
								},
								{
									"key": "versionNumber",
									"value": "{{versionNumber}}",
									"description": "The number of the version to be deleted. The version number starts \nfrom 1 up to current version."
								}
							]
						},
						"description": "Delete a historical version. This does not delete the changes made to the \ncontent in that version, rather the changes for the deleted version are \nrolled up into the next version. Note, you cannot delete the current version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to update the content."
					},
					"response": []
				}
			],
			"description": "Folder for content"
		},
		{
			"name": "contentbody",
			"item": [
				{
					"name": "Convert content body",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/contentbody/convert/:to?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"contentbody",
								"convert",
								":to"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the new content to expand. \n\n- `childTypes.all` returns whether the content has attachments, comments, or child pages. \nUse this if you only need to check whether the content has children of a particular type.\n- `childTypes.attachment` returns whether the content has attachments.\n- `childTypes.comment` returns whether the content has comments.\n- `childTypes.page` returns whether the content has child pages.\n- `container` returns the space that the content is in. This is the same as the information \nreturned by [Get space](#api-space-spaceKey-get).\n- `metadata.currentuser` returns information about the current user in relation to the content, \nlike when they last viewed it, modified it, contributed to it, or added it as a favourite.\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\n- `metadata.labels` returns the labels that have been added to the content.\n- `metadata.frontend` (this property is only used by Atlassian)\n- `operations` returns the operations for the content, which are used when setting permissions.\n- `children.page` returns pages that are descendants at the level immediately below the content.\n- `children.attachment` returns all attachments for the content.\n- `children.comment` returns all comments on the content.\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n- `history` returns the history of the content, including the date it was created.\n- `history.lastUpdated` returns information about the most recent update of the content, including \nwho updated it and when it was updated.\n- `history.previousVersion` returns information about the update prior to the current content update.\n- `history.contributors` returns all of the users who have contributed to the content.\n- `history.nextVersion` returns information about the update after to the current content update.\n- `ancestors` returns the parent page, if the content is a page.\n- `body` returns the body of the content in different formats, including the editor format, \nview format, and export format.\n- `version` returns information about the most recent update of the content, including who updated it \nand when it was updated.\n- `descendants.page` returns pages that are descendants at any level below the content.\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\n- `space` returns the space that the content is in. This is the same as the information returned by \n[Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "spaceKeyContext",
									"value": "{{spaceKeyContext}}",
									"description": "The space key used for resolving embedded content (page includes, \nfiles, and links) in the content body. For example, if the source content \ncontains the link `` \nand the `spaceKeyContext=TEST` parameter is provided, then the link \nwill be converted to a link to the \"Example page\" page in the \"TEST\" space.",
									"disabled": true
								},
								{
									"key": "contentIdContext",
									"value": "{{contentIdContext}}",
									"description": "The content ID used to find the space for resolving embedded content \n(page includes, files, and links) in the content body. For example, \nif the source content contains the link `` \nand the `contentIdContext=123` parameter is provided, then the link \nwill be converted to a link to the \"Example page\" page in the same space \nthat has the content with ID=123. Note, `spaceKeyContext` will be ignored \nif this parameter is provided.",
									"disabled": true
								},
								{
									"key": "embeddedContentRender",
									"value": "{{embeddedContentRender}}",
									"description": "Mode used for rendering embedded content, like attachments.\n\n- `current` renders the embedded content using the latest version.\n- `version-at-save` renders the embedded content using the version at \nthe time of save.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "to",
									"value": "{{to}}",
									"description": "The name of the target format for the content body."
								}
							]
						},
						"description": "Converts a content body from one format to another format.\n\nSupported conversions:\n\n- storage: view, export_view, styled_view, editor\n- editor: storage\n- view: none\n- export_view: none\n- styled_view: none\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nIf request specifies 'contentIdContext', 'View' permission for the space, and permission to view the content."
					},
					"response": []
				}
			],
			"description": "Folder for contentbody"
		},
		{
			"name": "group",
			"item": [
				{
					"name": "Get groups",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/group?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"group"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned groups.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of groups to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns all user groups. The returned groups are ordered alphabetically in\nascending order by group name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get group",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/group/:groupName",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"group",
								":groupName"
							],
							"variable": [
								{
									"key": "groupName",
									"value": "{{groupName}}",
									"description": "The name of the group. This is the same as the group name shown in \nthe Confluence administration console."
								}
							]
						},
						"description": "Returns a user group for a given group name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get group members",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/group/:groupName/member?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"group",
								":groupName",
								"member"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned users.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of users to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "groupName",
									"value": "{{groupName}}",
									"description": "The name of the group to be queried for its members."
								}
							]
						},
						"description": "Returns the users that are members of a group.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				}
			],
			"description": "Folder for group"
		},
		{
			"name": "longtask",
			"item": [
				{
					"name": "Get long-running tasks",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/longtask?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"longtask"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned tasks.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of tasks to return per page. Note, this may be\nrestricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns information about all active long-running tasks (e.g. space export), \nsuch as how long each task has been running and the percentage of each task \nthat has completed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get long-running task",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/longtask/:id",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"longtask",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The ID of the task."
								}
							]
						},
						"description": "Returns information about an active long-running task (e.g. space export), \nsuch as how long it has been running and the percentage of the task that \nhas completed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				}
			],
			"description": "Folder for longtask"
		},
		{
			"name": "relation",
			"item": [
				{
					"name": "Find target entities related to a source entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"relation",
								":relationName",
								"from",
								":sourceType",
								":sourceKey",
								"to",
								":targetType"
							],
							"query": [
								{
									"key": "sourceStatus",
									"value": "{{sourceStatus}}",
									"description": "The status of the source. This parameter is only used when the\n`sourceType` is 'content'.",
									"disabled": true
								},
								{
									"key": "targetStatus",
									"value": "{{targetStatus}}",
									"description": "The status of the target. This parameter is only used when the\n`targetType` is 'content'.",
									"disabled": true
								},
								{
									"key": "sourceVersion",
									"value": "{{sourceVersion}}",
									"description": "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "targetVersion",
									"value": "{{targetVersion}}",
									"description": "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the response \nobject to expand.\n\n- `relationData` returns information about the relationship, such as \nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned relationships.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of relationships to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "relationName",
									"value": "{{relationName}}",
									"description": "The name of the relationship. This method supports relationships created via \n[Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put). \nNote, this method does not support 'favourite' relationships."
								},
								{
									"key": "sourceType",
									"value": "{{sourceType}}",
									"description": "The source entity type of the relationship."
								},
								{
									"key": "sourceKey",
									"value": "{{sourceKey}}",
									"description": "The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								},
								{
									"key": "targetType",
									"value": "{{targetType}}",
									"description": "The target entity type of the relationship."
								}
							]
						},
						"description": "Returns all target entities that have a particular relationship to the \nsource entity. Note, relationships are one way.\n\nFor example, the following method finds all content that the current user \nhas an 'ignore' relationship with:\n`GET https://your-domain.atlassian.net/wiki/rest/api/relation/ignore/from/user/current/to/content`\nNote, 'ignore' is an example custom relationship type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view both the target entity and source entity."
					},
					"response": []
				},
				{
					"name": "Find relationship from source to target",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"relation",
								":relationName",
								"from",
								":sourceType",
								":sourceKey",
								"to",
								":targetType",
								":targetKey"
							],
							"query": [
								{
									"key": "sourceStatus",
									"value": "{{sourceStatus}}",
									"description": "The status of the source. This parameter is only used when the\n`sourceType` is 'content'.",
									"disabled": true
								},
								{
									"key": "targetStatus",
									"value": "{{targetStatus}}",
									"description": "The status of the target. This parameter is only used when the\n`targetType` is 'content'.",
									"disabled": true
								},
								{
									"key": "sourceVersion",
									"value": "{{sourceVersion}}",
									"description": "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "targetVersion",
									"value": "{{targetVersion}}",
									"description": "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the response \nobject to expand.\n\n- `relationData` returns information about the relationship, such as \nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "relationName",
									"value": "{{relationName}}",
									"description": "The name of the relationship. This method supports the 'favourite' \n(i.e. 'save for later') relationship as well as any other relationship \ntypes created via [Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put)."
								},
								{
									"key": "sourceType",
									"value": "{{sourceType}}",
									"description": "The source entity type of the relationship. This must be 'user', if \nthe `relationName` is 'favourite'."
								},
								{
									"key": "sourceKey",
									"value": "{{sourceKey}}",
									"description": "- The identifier for the source entity:\n\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								},
								{
									"key": "targetType",
									"value": "{{targetType}}",
									"description": "The target entity type of the relationship. This must be 'space' or \n'content', if the `relationName` is 'favourite'."
								},
								{
									"key": "targetKey",
									"value": "{{targetKey}}",
									"description": "The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
								}
							]
						},
						"description": "Find whether a particular type of relationship exists from a source \nentity to a target entity. Note, relationships are one way.\n\nFor example, you can use this method to find whether the current user has \nselected a particular page as a favorite (i.e. 'save for later'):\n`GET https://your-domain.atlassian.net/wiki/rest/api/relation/favourite/from/user/current/to/content/123`\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view both the target entity and source entity."
					},
					"response": []
				},
				{
					"name": "Create relationship",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"relation",
								":relationName",
								"from",
								":sourceType",
								":sourceKey",
								"to",
								":targetType",
								":targetKey"
							],
							"query": [
								{
									"key": "sourceStatus",
									"value": "{{sourceStatus}}",
									"description": "The status of the source. This parameter is only used when the\n`sourceType` is 'content'.",
									"disabled": true
								},
								{
									"key": "targetStatus",
									"value": "{{targetStatus}}",
									"description": "The status of the target. This parameter is only used when the\n`targetType` is 'content'.",
									"disabled": true
								},
								{
									"key": "sourceVersion",
									"value": "{{sourceVersion}}",
									"description": "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "targetVersion",
									"value": "{{targetVersion}}",
									"description": "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "relationName",
									"value": "{{relationName}}",
									"description": "The name of the relationship. This method supports the 'favourite' \n(i.e. 'save for later') relationship. You can also specify any other \nvalue for this parameter to create a custom relationship type."
								},
								{
									"key": "sourceType",
									"value": "{{sourceType}}",
									"description": "The source entity type of the relationship. This must be 'user', if \nthe `relationName` is 'favourite'."
								},
								{
									"key": "sourceKey",
									"value": "{{sourceKey}}",
									"description": "- The identifier for the source entity:\n\n- If `sourceType` is 'user', then specify either 'current' (logged-in \n  user) or the user key.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								},
								{
									"key": "targetType",
									"value": "{{targetType}}",
									"description": "The target entity type of the relationship. This must be 'space' or \n'content', if the `relationName` is 'favourite'."
								},
								{
									"key": "targetKey",
									"value": "{{targetKey}}",
									"description": "- The identifier for the target entity:\n\n- If `sourceType` is 'user', then specify either 'current' (logged-in \n  user) or the user key.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								}
							]
						},
						"description": "Creates a relationship between two entities (user, space, content). The \n'favourite' relationship is supported by default, but you can use this method \nto create any type of relationship between two entities.\n\nFor example, the following method creates a 'sibling' relationship between \ntwo pieces of content:\n`GET https://your-domain.atlassian.net/wiki/rest/api/relation/sibling/from/content/123/to/content/456`\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"relation",
								":relationName",
								"from",
								":sourceType",
								":sourceKey",
								"to",
								":targetType",
								":targetKey"
							],
							"query": [
								{
									"key": "sourceStatus",
									"value": "{{sourceStatus}}",
									"description": "The status of the source. This parameter is only used when the\n`sourceType` is 'content'.",
									"disabled": true
								},
								{
									"key": "targetStatus",
									"value": "{{targetStatus}}",
									"description": "The status of the target. This parameter is only used when the\n`targetType` is 'content'.",
									"disabled": true
								},
								{
									"key": "sourceVersion",
									"value": "{{sourceVersion}}",
									"description": "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "targetVersion",
									"value": "{{targetVersion}}",
									"description": "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "relationName",
									"value": "{{relationName}}",
									"description": "The name of the relationship."
								},
								{
									"key": "sourceType",
									"value": "{{sourceType}}",
									"description": "The source entity type of the relationship. This must be 'user', if \nthe `relationName` is 'favourite'."
								},
								{
									"key": "sourceKey",
									"value": "{{sourceKey}}",
									"description": "- The identifier for the source entity:\n\n- If `sourceType` is 'user', then specify either 'current' (logged-in \n  user) or the user key.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								},
								{
									"key": "targetType",
									"value": "{{targetType}}",
									"description": "The target entity type of the relationship. This must be 'space' or \n'content', if the `relationName` is 'favourite'."
								},
								{
									"key": "targetKey",
									"value": "{{targetKey}}",
									"description": "- The identifier for the target entity:\n\n- If `sourceType` is 'user', then specify either 'current' (logged-in \n  user) or the user key.\n- If `sourceType` is 'content', then specify the content ID.\n- If `sourceType` is 'space', then specify the space key."
								}
							]
						},
						"description": "Deletes a relationship between two entities (user, space, content).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission). \nFor favourite relationships, the current user can only delete their own \nfavourite relationships. A space administrator can delete favourite \nrelationships for any user."
					},
					"response": []
				},
				{
					"name": "Find target entities related to a source entity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/relation/:relationName/to/:targetType/:targetKey/from/:sourceType?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"relation",
								":relationName",
								"to",
								":targetType",
								":targetKey",
								"from",
								":sourceType"
							],
							"query": [
								{
									"key": "sourceStatus",
									"value": "{{sourceStatus}}",
									"description": "The status of the source. This parameter is only used when the\n`sourceType` is 'content'.",
									"disabled": true
								},
								{
									"key": "targetStatus",
									"value": "{{targetStatus}}",
									"description": "The status of the target. This parameter is only used when the\n`targetType` is 'content'.",
									"disabled": true
								},
								{
									"key": "sourceVersion",
									"value": "{{sourceVersion}}",
									"description": "The version of the source. This parameter is only used when the\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "targetVersion",
									"value": "{{targetVersion}}",
									"description": "The version of the target. This parameter is only used when the\n`targetType` is 'content' and the `targetStatus` is 'historical'.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the response \nobject to expand.\n\n- `relationData` returns information about the relationship, such as \nwho created it and when it was created.\n- `source` returns the source entity.\n- `target` returns the target entity.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned relationships.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of relationships to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "relationName",
									"value": "{{relationName}}",
									"description": "The name of the relationship. This method supports relationships created via \n[Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put). \nNote, this method does not support 'favourite' relationships."
								},
								{
									"key": "sourceType",
									"value": "{{sourceType}}",
									"description": "The source entity type of the relationship."
								},
								{
									"key": "targetType",
									"value": "{{targetType}}",
									"description": "The target entity type of the relationship."
								},
								{
									"key": "targetKey",
									"value": "{{targetKey}}",
									"description": "The identifier for the target entity:\n\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- If `targetType` is 'content', then specify the content ID.\n- If `targetType` is 'space', then specify the space key."
								}
							]
						},
						"description": "Returns all target entities that have a particular relationship to the \nsource entity. Note, relationships are one way.\n\nFor example, the following method finds all users that have a 'collaborator' \nrelationship to a piece of content with an ID of '1234':\n`GET https://your-domain.atlassian.net/wiki/rest/api/relation/collaborator/to/content/1234/from/user`\nNote, 'collaborator' is an example custom relationship type.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view both the target entity and source entity."
					},
					"response": []
				}
			],
			"description": "Folder for relation"
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Search",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/search?cql={{cql}}",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"search"
							],
							"query": [
								{
									"key": "cql",
									"value": "{{cql}}",
									"description": "The CQL query to be used for the search. See \n[Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/) \nfor instructions on how to build a CQL query."
								},
								{
									"key": "cqlcontext",
									"value": "{{cqlcontext}}",
									"description": "The space, content, and content status to execute the search\nagainst. \n\n- `spaceKey` Key of the space to search against. Optional.\n- `contentId` ID of the content to search against. Optional. Must be \nin the space specified by `spaceKey`.\n- `contentStatuses` Content statuses to search against. Optional.\n\nSpecify these values in an object. For example, \n`cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content objects to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "includeArchivedSpaces",
									"value": "{{includeArchivedSpaces}}",
									"description": "Include content from archived spaces in the results.",
									"disabled": true
								}
							]
						},
						"description": "Searches for content using the \n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to view the entities. Note, only entities that the user has \npermission to view will be returned."
					},
					"response": []
				}
			],
			"description": "Folder for search"
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "Get look and feel settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/lookandfeel?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"lookandfeel"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space for which the look and feel settings will be\nreturned. If this is not set, only the global look and feel settings\nare returned.",
									"disabled": true
								}
							]
						},
						"description": "Returns the look and feel settings for the site or a single space. This \nincludes attributes such as the color scheme, padding, and border radius.\n\nThe look and feel settings for a space can be inherited from the global \nlook and feel settings or provided by a theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nNone"
					},
					"response": []
				},
				{
					"name": "Update look and feel settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/lookandfeel/custom?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"lookandfeel",
								"custom"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space for which the look and feel settings will be\nupdated. If this is not set, the global look and feel settings will \nbe updated.",
									"disabled": true
								}
							]
						},
						"description": "Updates the look and feel settings for the site or for a single space.\nIf custom settings exist, they are updated. If no custom settings exist, \nthen a set of custom settings is created.\n\nNote, if a theme is selected for a space, the space look and feel settings \nare provided by the theme and cannot be overridden.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Reset look and feel settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/lookandfeel/custom?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"lookandfeel",
								"custom"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space for which the look and feel settings will be\nreset. If this is not set, the global look and feel settings will \nbe reset.",
									"disabled": true
								}
							]
						},
						"description": "Resets the custom look and feel settings for the site or a single space.\nThis changes the values of the custom settings to be the same as the \ndefault settings. It does not change which settings (default or custom) \nare selected. Note, the default space settings are inherited from the \ncurrent global settings.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Set look and feel settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/lookandfeel/selected?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"lookandfeel",
								"selected"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space for which the look and feel settings will be\nset. If this is not set, the global look and feel settings will be \nset.",
									"disabled": true
								}
							]
						},
						"description": "Sets the look and feel settings to either the default settings or the\ncustom settings, for the site or a single space. Note, the default \nspace settings are inherited from the current global settings.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Get system info",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/systemInfo",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"systemInfo"
							]
						},
						"description": "Returns the system information for the Confluence Cloud tenant. This\ninformation is used by Atlassian.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get themes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/theme?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"theme"
							],
							"query": [
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned themes.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of themes to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns all themes, not including the default theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
					},
					"response": []
				},
				{
					"name": "Get global theme",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/theme/selected",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"theme",
								"selected"
							]
						},
						"description": "Returns the globally assigned theme.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
					},
					"response": []
				},
				{
					"name": "Get theme",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/settings/theme/:themeKey",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"settings",
								"theme",
								":themeKey"
							],
							"variable": [
								{
									"key": "themeKey",
									"value": "{{themeKey}}",
									"description": "The key of the theme to be returned."
								}
							]
						},
						"description": "Returns a theme. This includes information about the theme name,\ndescription, and icon.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None"
					},
					"response": []
				}
			],
			"description": "Folder for settings"
		},
		{
			"name": "space",
			"item": [
				{
					"name": "Get spaces",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be returned. To return multiple spaces,\nspecify this parameter multiple times with different values.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "Filter the results to spaces based on their type.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Filter the results to spaces based on their status.",
									"disabled": true
								},
								{
									"key": "label",
									"value": "{{label}}",
									"description": "Filter the results to spaces based on their label.",
									"disabled": true
								},
								{
									"key": "favourite",
									"value": "{{favourite}}",
									"description": "Filter the results to the favourite spaces of the user specified by\n`favouriteUserKey`. Note, 'favourite' spaces are also\nknown as 'saved for later' spaces.",
									"disabled": true
								},
								{
									"key": "favouriteUserKey",
									"value": "{{favouriteUserKey}}",
									"description": "The userKey of the user, whose favourite spaces are used to filter\nthe results when using the `favourite` parameter.\n\nLeave blank for the current user. Use [Get user](#api-user-get) to \nget the userKey for a user.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the spaces to\nexpand, where:\n\n  - `settings` returns the settings for the space, similar to [Get space settings](#api-space-spaceKey-settings-get).\n  - `metadata.labels` returns the space labels, which are used to categorize the space.\n  - `operations` returns the operations for a space, which are used when setting permissions.\n  - `lookAndFeel` returns information about the look and feel of the space, like the color scheme.\n  - `permissions` returns the permissions for the space.\n  - `icon` returns information about space icon.\n  - `description.plain` returns the description of the space.\n  - `description.view` returns the description of the space.\n  - `theme` returns information about the space theme.\n  - `homepage` returns information about the space homepage.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned spaces.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of spaces to return per page. Note, this may be\nrestricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns all spaces. The returned spaces are ordered alphabetically in\nascending order by space key.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nNote, the returned list will only contain spaces that the current user\nhas permission to view."
					},
					"response": []
				},
				{
					"name": "Create space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space"
							]
						},
						"description": "Creates a new space. Note, currently you cannot set space labels when\ncreating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Create Space(s)' global permission."
					},
					"response": []
				},
				{
					"name": "Create private space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/_private",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								"_private"
							]
						},
						"description": "Creates a new space that is only visible to the creator. This method is\nthe same as the [Create space](#api-space-post) method with permissions\nset to the current user only. Note, currently you cannot set space\nlabels when creating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Create Space(s)' global permission."
					},
					"response": []
				},
				{
					"name": "Get space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the space to\nexpand, where:\n\n  - `settings` returns the settings for the space, similar to [Get space settings](#api-space-spaceKey-settings-get).\n  - `metadata.labels` returns the space labels, which are used to categorize the space.\n  - `operations` returns the operations for a space, which are used when setting permissions.\n  - `lookAndFeel` returns information about the look and feel of the space, like the color scheme.\n  - `permissions` returns the permissions for the space.\n  - `icon` returns information about space icon.\n  - `description.plain` returns the description of the space.\n  - `description.view` returns the description of the space.\n  - `theme` returns information about the space theme.\n  - `homepage` returns information about the space homepage.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be returned."
								}
							]
						},
						"description": "Returns a space. This includes information like the name, description,\nand permissions, but not the content in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space."
					},
					"response": []
				},
				{
					"name": "Update space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to update."
								}
							]
						},
						"description": "Updates the name, description, or homepage of a space.\n\n-   For security reasons, permissions cannot be updated via the API and\nmust be changed via the user interface instead.\n-   Currently you cannot set space labels when updating a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Delete space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to delete."
								}
							]
						},
						"description": "Deletes a space. Note, the space will be deleted in a long running task.\nTherefore, the space may not be deleted yet when this method has\nreturned. Clients should poll the status link that is returned in the\nresponse until the task completes.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Get content for space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/content?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"content"
							],
							"query": [
								{
									"key": "depth",
									"value": "{{depth}}",
									"description": "Filter the results to content at the root level of the space or all content.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content\nto expand, where:\n\n  - `childTypes.all` returns whether the content has attachments, comments, or child pages. Use this if you only need to check whether the content has children of a particular type.\n  - `childTypes.attachment` returns whether the content has attachments.\n  - `childTypes.comment` returns whether the content has comments.\n  - `childTypes.page` returns whether the content has child pages.\n  - `container` returns the space that the content is in. This is the same as the information returned by [Get space](#api-space-spaceKey-get).\n  - `metadata.currentuser` returns information about the current user in relation to the content, like when they last viewed it, modified it, contributed to it, or added it as a favourite.\n  - `metadata.properties` returns content properties that have been set via the Confluence REST API.\n  - `metadata.labels` returns the labels that have been added to the content.\n  - `metadata.frontend` (this property is only used by Atlassian)\n  - `operations` returns the operations for the content, which are used when setting permissions.\n  - `children.page` returns pages that are descendants at the level immediately below the content.\n  - `children.attachment` returns all attachments for the content.\n  - `children.comment` returns all comments on the content.\n  - `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n  - `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n  - `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n  - `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n  - `history` returns the history of the content, including the date it was created.\n  - `history.lastUpdated` returns information about the most recent update of the content, including who updated it and when it was updated.\n  - `history.previousVersion` returns information about the update prior to the current content update.\n  - `history.contributors` returns all of the users who have contributed to the content.\n  - `history.nextVersion` returns information about the update after to the current content update.\n  - `ancestors` returns the parent page, if the content is a page.\n  - `body` returns the body of the content in different formats, including the editor format, view format, and export format.\n  - `version` returns information about the most recent update of the content, including who updated it and when it was updated.\n  - `descendants.page` returns pages that are descendants at any level below the content.\n  - `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n  - `descendants.comment` returns all comments on the content, same as `children.comment`.\n  - `space` returns the space that the content is in. This is the same as the information returned by [Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content objects to return per page. Note, this \nmay be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its content."
								}
							]
						},
						"description": "Returns all content in a space. The returned content is grouped by type\n(pages then blogposts), then ordered by content ID in ascending order.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space. Note, the returned list will only\ncontain content that the current user has permission to view."
					},
					"response": []
				},
				{
					"name": "Get content by type for space",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/content/:type?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"content",
								":type"
							],
							"query": [
								{
									"key": "depth",
									"value": "{{depth}}",
									"description": "Filter the results to content at the root level of the space or all\ncontent.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the content\nto expand, where:\n\n  - `childTypes.all` returns whether the content has attachments, comments, or child pages. Use this if you only need to check whether the content has children of a particular type.\n  - `childTypes.attachment` returns whether the content has attachments.\n  - `childTypes.comment` returns whether the content has comments.\n  - `childTypes.page` returns whether the content has child pages.\n  - `container` returns the space that the content is in. This is the same as the information returned by [Get space](#api-space-spaceKey-get).\n  - `metadata.currentuser` returns information about the current user in relation to the content, like when they last viewed it, modified it, contributed to it, or added it as a favourite.\n  - `metadata.properties` returns content properties that have been set via the Confluence REST API.\n  - `metadata.labels` returns the labels that have been added to the content.\n  - `metadata.frontend` (this property is only used by Atlassian)\n  - `operations` returns the operations for the content, which are used when setting permissions.\n  - `children.page` returns pages that are descendants at the level immediately below the content.\n  - `children.attachment` returns all attachments for the content.\n  - `children.comment` returns all comments on the content.\n  - `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n  - `restrictions.read.restrictions.group` returns the groups that have permission to read the content.\n  - `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n  - `restrictions.update.restrictions.group` returns the groups that have permission to update the content.\n  - `history` returns the history of the content, including the date it was created.\n  - `history.lastUpdated` returns information about the most recent update of the content, including who updated it and when it was updated.\n  - `history.previousVersion` returns information about the update prior to the current content update.\n  - `history.contributors` returns all of the users who have contributed to the content.\n  - `history.nextVersion` returns information about the update after to the current content update.\n  - `ancestors` returns the parent page, if the content is a page.\n  - `body` returns the body of the content in different formats, including the editor format, view format, and export format.\n  - `version` returns information about the most recent update of the content, including who updated it and when it was updated.\n  - `descendants.page` returns pages that are descendants at any level below the content.\n  - `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n  - `descendants.comment` returns all comments on the content, same as `children.comment`.\n  - `space` returns the space that the content is in. This is the same as the information returned by [Get space](#api-space-spaceKey-get).",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned content.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of content objects to return per page. Note, this \nmay be restricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its content."
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "The type of content to return."
								}
							]
						},
						"description": "Returns all content of a given type, in a space. The returned content is\nordered by content ID in ascending order.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space. Note, the returned list will only\ncontain content that the current user has permission to view."
					},
					"response": []
				},
				{
					"name": "Get space properties",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the space\nproperty to expand. By default, the `version` object is expanded.\n\n- `version` returns information about the version of the content.\n- `space` returns the space that the properties are in.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned objects.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of properties to return per page. Note, this may be\nrestricted by fixed system limits.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its properties."
								}
							]
						},
						"description": "Returns all properties for the given space. Space properties are a key-value storage associated with a space.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Create space property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space that the property will be created in."
								}
							]
						},
						"description": "Creates a new space property.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n‘Admin’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Get space property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property/:key?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property",
								":key"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the space\nproperty to expand. By default, the `version` object is expanded.\n\n- `version` returns information about the version of the content.\n- `space` returns the space that the properties are in.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space that the property is in."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the space property."
								}
							]
						},
						"description": "Returns a space property.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Create space property for key",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space that the property will be created in."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the property to be created."
								}
							]
						},
						"description": "Creates a new space property. This is the same as `POST\n/space/{spaceKey}/property` but the key for the property is passed as a\npath parameter, rather than in the request body.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n‘Admin’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Update space property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space that the property is in."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the property to be updated."
								}
							]
						},
						"description": "Updates a space property. Note, you cannot update the key of a space\nproperty, only the value.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n‘Admin’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Delete space property",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/property/:key",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"property",
								":key"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space that the property is in."
								},
								{
									"key": "key",
									"value": "{{key}}",
									"description": "The key of the property to be deleted."
								}
							]
						},
						"description": "Deletes a space property.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n‘Admin’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Get space settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"settings"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its settings."
								}
							]
						},
						"description": "Returns the settings of a space. Currently only the\n`routeOverrideEnabled` setting can be returned.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'View' permission for the space."
					},
					"response": []
				},
				{
					"name": "Update space settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/settings",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"settings"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space whose settings will be updated."
								}
							]
						},
						"description": "Updates the settings for a space. Currently only the\n`routeOverrideEnabled` setting can be updated.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Get space theme",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/theme",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"theme"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for its theme."
								}
							]
						},
						"description": "Returns the theme selected for a space, if one is set. If no space \ntheme is set, this means that the space is inheriting the global look \nand feel settings.\n\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space."
					},
					"response": []
				},
				{
					"name": "Set space theme",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/theme",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"theme"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to set the theme for."
								}
							]
						},
						"description": "Sets the theme for a space. Note, if you want to reset the space theme to \nthe default Confluence theme, use the 'Reset space theme' method instead \nof this method.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
					},
					"response": []
				},
				{
					"name": "Reset space theme",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/space/:spaceKey/theme",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"space",
								":spaceKey",
								"theme"
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to reset the theme for."
								}
							]
						},
						"description": "Resets the space theme. This means that the space will inherit the \nglobal look and feel settings\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Admin' permission for the space."
					},
					"response": []
				}
			],
			"description": "Folder for space"
		},
		{
			"name": "template",
			"item": [
				{
					"name": "Create content template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template"
							]
						},
						"description": "Creates a new content template. Note, blueprint templates cannot be created via the REST API.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space to create a space template or 'Confluence Administrator' \nglobal permission to create a global template."
					},
					"response": []
				},
				{
					"name": "Update content template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template"
							]
						},
						"description": "Updates a content template. Note, blueprint templates cannot be updated\nvia the REST API.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space to create a space template or 'Confluence Administrator' \nglobal permission to create a global template."
					},
					"response": []
				},
				{
					"name": "Get blueprint templates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template/blueprint?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template",
								"blueprint"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for templates. If the `spaceKey` \nis not specified, global blueprint templates will be returned.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned templates.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of templates to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the template\nto expand.\n\n- `body` returns the content of the template in storage format.",
									"disabled": true
								}
							]
						},
						"description": "Returns all templates provided by blueprints. Use this method to retrieve \nall global blueprint templates or all blueprint templates in a space.\n\nNote, all global blueprints are inherited by each space. Space blueprints \ncan be customised without affecting the global blueprints.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get content templates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template/page?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template",
								"page"
							],
							"query": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for templates. If the `spaceKey` \nis not specified, global templates will be returned.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned templates.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of templates to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the template\nto expand.\n\n- `body` returns the content of the template in storage format.",
									"disabled": true
								}
							]
						},
						"description": "Returns all content templates. Use this method to retrieve all global\ncontent templates or all content templates in a space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space to view space templates and 'Confluence \nAdministrator' global permission to view global templates."
					},
					"response": []
				},
				{
					"name": "Get content template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template/:contentTemplateId",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template",
								":contentTemplateId"
							],
							"variable": [
								{
									"key": "contentTemplateId",
									"value": "{{contentTemplateId}}",
									"description": "The ID of the content template to be returned."
								}
							]
						},
						"description": "Returns a content template. This includes information about template, \nlike the name, the space or blueprint that the template is in, the body \nof the template, and more.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Admin' permission for the space to view space templates and 'Confluence \nAdministrator' global permission to view global templates."
					},
					"response": []
				},
				{
					"name": "Remove template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/template/:contentTemplateId",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"template",
								":contentTemplateId"
							],
							"variable": [
								{
									"key": "contentTemplateId",
									"value": "{{contentTemplateId}}",
									"description": "The ID of the template to be deleted."
								}
							]
						},
						"description": "Deletes a template. This results in different actions depending on the \ntype of template:\n\n- If the template is a content template, it is deleted.\n- If the template is a modified space-level blueprint template, it reverts \nto the template inherited from the global-level blueprint template.\n- If the template is a modified global-level blueprint template, it reverts \nto the default global-level blueprint template.\n\n Note, unmodified blueprint templates cannot be deleted."
					},
					"response": []
				}
			],
			"description": "Folder for template"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Get user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe userKey of the user to be returned. Required, unless the \n`username` or `accountId` is specified. The `key` uniquely identifies \na user in a Confluence instance and does not change.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe username of the user to be returned. Required, unless the `key` \nor `accountId` is specified. The `username` uniquely identifies a \nuser in a Confluence instance but can change if the user is renamed.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `details.personal` returns the 'Personal' details in the user's profile, like the 'Email' and 'Phone'.\n  Note that these fields have been deprecated due to privacy changes. See the\n  [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n  for details.\n  - `details.business` returns the 'Company' details in the user's profile, like the 'Position' and 'Department'.\n  Note that these fields have been deprecated due to privacy changes. See the\n  [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n  for details.\n  - personalSpace returns the user's personal space, if it exists.",
									"disabled": true
								}
							]
						},
						"description": "Returns a user. This includes information about the user, like the\ndisplay name, userKey, account ID, profile picture, and more.\n\nThe `username`, `key`, or `accountId` parameter must be specified, in \norder to identify the user.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get anonymous user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/anonymous?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"anonymous"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.",
									"disabled": true
								}
							]
						},
						"description": "Returns information about how anonymous users are represented, like the\nprofile picture and display name.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get current user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/current?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"current"
							],
							"query": [
								{
									"key": "expand",
									"value": "{{expand}}",
									"description": "A multi-value parameter indicating which properties of the user to\nexpand.\n\n  - `operations` returns the operations that the user is allowed to do.\n  - `details.personal` returns the 'Personal' details in the user's profile, like the 'Email' and 'Phone'.\n  Note that these fields have been deprecated due to privacy changes. See the\n  [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n  for details.\n  - `details.business` returns the 'Company' details in the user's profile, like the 'Position' and 'Department'.\n  Note that these fields have been deprecated due to privacy changes. See the\n  [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n  for details.\n  - personalSpace returns the user's personal space, if it exists.",
									"disabled": true
								}
							]
						},
						"description": "Returns the currently logged-in user. This includes information about\nthe user, like the display name, userKey, account ID, profile picture,\nand more.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get group memberships for user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/memberof?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"memberof"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe userKey of the user. Required, unless the `username` or `accountId` is specified. The `key` uniquely identifies\na user in a Confluence instance and does not change.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe username of the user. Required, unless the `key` or `accountId` is specified. The `username` uniquely identifies a\nuser in a Confluence instance but can change if the user is renamed.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "{{start}}",
									"description": "The starting index of the returned groups.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "The maximum number of groups to return per page. \nNote, this may be restricted by fixed system limits.",
									"disabled": true
								}
							]
						},
						"description": "Returns the groups that a user is a member of.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \nPermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get content watch status",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/content/:contentId?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"content",
								":contentId"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be queried for whether they are watching the \ncontent. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The `username` of the user to be queried for whether they are watching \nthe content. Only one of `username`, `key`, `accountId` can be used to \nidentify the user in the request.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be queried for whether they are watching the content. The accountId uniquely\nidentifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contentId",
									"value": "{{contentId}}",
									"description": "The ID of the content to be queried for whether the specified user is \nwatching it."
								}
							]
						},
						"description": "Returns whether a user is watching a piece of content. Choose the user by \ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Add content watcher",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/content/:contentId?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"content",
								":contentId"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be added as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be added as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contentId",
									"value": "{{contentId}}",
									"description": "The ID of the content to add the watcher to."
								}
							]
						},
						"description": "Adds a user as a watcher to a piece of content. Choose the user by doing \none of the following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a \nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Remove content watcher",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/content/:contentId?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"content",
								":contentId"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be removed as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be removed as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contentId",
									"value": "{{contentId}}",
									"description": "The ID of the content to remove the watcher from."
								}
							]
						},
						"description": "Removes a user as a watcher from a piece of content. Choose the user by \ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get label watch status",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/label/:labelName?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"label",
								":labelName"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be queried for whether they are watching the label. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be queried for whether they are watching the label. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be queried for whether they are watching the label. The accountId uniquely identifies\nthe user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "labelName",
									"value": "{{labelName}}",
									"description": "The name of the label to be queried for whether the specified user is \nwatching it."
								}
							]
						},
						"description": "Returns whether a user is watching a label. Choose the user by doing one \nof the following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Add label watcher",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/label/:labelName?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"label",
								":labelName"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be added as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be added as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "labelName",
									"value": "{{labelName}}",
									"description": "The name of the label to add the watcher to."
								}
							]
						},
						"description": "Adds a user as a watcher to a label. Choose the user by doing one of the \nfollowing:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a \nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Remove label watcher",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/label/:labelName?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"label",
								":labelName"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be removed as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be removed as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all Atlassian products.\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "labelName",
									"value": "{{labelName}}",
									"description": "The name of the label to remove the watcher from."
								}
							]
						},
						"description": "Removes a user as a watcher from a label. Choose the user by doing one of \nthe following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Get space watch status",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/space/:spaceKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"space",
								":spaceKey"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be queried for whether they are watching the space. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be queried for whether they are watching the space. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be queried for whether they are watching the space. The accountId uniquely identifies\nthe user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to be queried for whether the specified user is \nwatching it."
								}
							]
						},
						"description": "Returns whether a user is watching a space. Choose the user by \ndoing one of the following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Add space watcher",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/space/:spaceKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"space",
								":spaceKey"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be added as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be added as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all\nAtlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to add the watcher to."
								}
							]
						},
						"description": "Adds a user as a watcher to a space. Choose the user by doing one of the \nfollowing:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\nNote, you must add the `X-Atlassian-Token: no-check` header when making a \nrequest, as this operation has XSRF protection.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				},
				{
					"name": "Remove space watch",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"value": "application/json",
								"key": "Accept"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{host}}/wiki/rest/api/user/watch/space/:spaceKey?",
							"protocol": "https",
							"host": [
								"{{host}}"
							],
							"path": [
								"wiki",
								"rest",
								"api",
								"user",
								"watch",
								"space",
								":spaceKey"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `key` of the user to be removed as a watcher. Required, unless the `username` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "username",
									"value": "{{username}}",
									"description": "This parameter has been deprecated due to privacy changes. Use `accountId` instead. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n\nThe `username` of the user to be removed as a watcher. Required, unless the `key` or `accountId` is specified.",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"description": "The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all\nAtlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\nRequired, unless `username` or `userKey` is specified.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "spaceKey",
									"value": "{{spaceKey}}",
									"description": "The key of the space to remove the watcher from."
								}
							]
						},
						"description": "Removes a user as a watcher from a space. Choose the user by doing one of \nthe following:\n\n- Specify a user via a query parameter: Use the `username`, `key`, or `accountId` to identify the user.\nNote that `username` and `key` have been deprecated in favor of `accountId`. See the\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\nfor details.\n- Do not specify a user: The currently logged-in user will be used.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: \n'Confluence Administrator' global permission if specifying a user, otherwise \npermission to access the Confluence site ('Can use' global permission)."
					},
					"response": []
				}
			],
			"description": "Folder for user"
		}
	]
}