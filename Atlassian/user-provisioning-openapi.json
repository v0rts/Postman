{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0",
        "title": "User provisioning",
        "description": "Rest APIs",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "https:\/\/api.atlassian.com\/"
    ],
    "paths": {
        "\/scim\/directory\/{directoryId}\/Groups\/{id}": {
            "get": {
                "summary": "Get a group by ID",
                "description": "Get a group from a directory by group ID.",
                "operationId": "Get",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "put": {
                "summary": "Update a group by ID",
                "description": "Update a group in a directory by group ID.",
                "operationId": "Put",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "delete": {
                "summary": "Delete a group by ID",
                "description": "Delete a group from a directory. An attempt to delete a non-existent group fails with a 404 (Resource Not found) error.\n",
                "operationId": "DeleteAGroup",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group Id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group has been deleted successfully."
                    }
                }
            },
            "patch": {
                "summary": "Update a group by ID (PATCH)",
                "description": "Update a group's information in a directory by `groupId` via `PATCH`.\nYou can use this API to manage group membership.\n\n**Note:** Renaming groups after they've synced to your Atlassian organization isn't supported in this \nrelease of the User Provisioning API. To rename a group, create a new group with the desired \nname, update membership, and then delete the old group.\n\n#### Example\n\nSome HTTP headers omitted and JSON payloads formatted for readability.\n\n```\n# Request\nPATCH \/scim\/directory\/2fb2",
                "operationId": "Patch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Groups": {
            "get": {
                "summary": "Get groups",
                "description": "Get groups from a directory. Filtering is supported with a single exact match (`eq`) against  the `displayName` attribute. Pagination is supported. Sorting is not supported.\n",
                "operationId": "GetAllGroupsFromAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter for `displayName`. Example: `displayName eq \"SCIM_GROUP\"`"
                    },
                    {
                        "name": "startIndex",
                        "in": "query",
                        "description": "A 1-based index of the first query result."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Desired maximum number of query results in the list response page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "post": {
                "summary": "Create a group",
                "description": "Create a group in a directory. An attempt to create a group with an existing  name fails with a 409 (Conflict) error.\n",
                "operationId": "CreateAGroupInActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Group has been created successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Schemas": {
            "get": {
                "summary": "Get all schemas",
                "description": "Get all SCIM features metadata. Filtering, pagination and sorting are  not supported.\n",
                "operationId": "GetSchemas",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/ResourceTypes": {
            "get": {
                "summary": "Get resource types",
                "description": "Get types of resources available on a SCIM service provider (e.g., Users and Groups). This  is used to get all resources of the SCIM provider. Filtering, pagination and sorting are  not supported.\n",
                "operationId": "GetResourceTypes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/ResourceTypes\/User": {
            "get": {
                "summary": "Get user resource types",
                "description": "Retrieve user resource types from the SCIM service provider. Filtering, pagination and  sorting are not supported.\n",
                "operationId": "GetUserResourceType",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/ResourceTypes\/Group": {
            "get": {
                "summary": "Get group resource types",
                "description": "Retrieve group resource type of this SCIM service provider. Filtering, pagination and sorting  are not supported.\n",
                "operationId": "GetGroupResourceType",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Schemas\/urn:ietf:params:scim:schemas:core:2.0:User": {
            "get": {
                "summary": "Get user schemas",
                "description": "Get the user schemas from the SCIM provider. Filtering, pagination and sorting  are not supported.\n",
                "operationId": "GetUserSchemas",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Schemas\/urn:ietf:params:scim:schemas:core:2.0:Group": {
            "get": {
                "summary": "Get group schemas",
                "description": "Get the group schemas from the SCIM provider. Filtering, pagination and sorting are not  supported.\n",
                "operationId": "GetGroupSchemas",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Schemas\/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
            "get": {
                "summary": "Get user enterprise extension schemas",
                "description": "Get the user enterprise extension schemas from the SCIM provider. Filtering, pagination and  sorting are not supported.\n",
                "operationId": "GetExtensionUserSchemas",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/ServiceProviderConfig": {
            "get": {
                "summary": "Get feature metadata",
                "description": "Get metadata about the supported SCIM features. This is a service provider configuration  endpoint providing supported SCIM features. Filtering, pagination and sorting are not  supported.\n",
                "operationId": "GetConfig",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Users\/{userId}": {
            "get": {
                "summary": "Get a user by ID",
                "description": "Get a user from a directory by `userId`. \n",
                "operationId": "GetAUserFromActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Resource attributes to be included in response. Mutually exclusive with `excludedAttributes`.  Example: `userName,emails.value`\n"
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "description": "Resource attributes to be excluded from response. Mutually exclusive with `attributes`.  Example: `timezone,emails.type,department`\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "put": {
                "summary": "Update user via user attributes",
                "description": "Updates a user's information in a directory by `userId` via user attributes. User information  is replaced attribute-by-attribute, with the exception of immutable and read-only  attributes. Existing values of unspecified attributes are cleaned.\n",
                "operationId": "UpdateUserInformationInAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Resource attributes to be included in response. Mutually exclusive with `excludedAttributes`.  Example: `userName,emails.value`\n"
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "description": "Resource attributes to be excluded from response. Mutually exclusive with `attributes`.  Example: `timezone,emails.type,department`\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "delete": {
                "summary": "Deactivate a user",
                "description": "Deactivate a user by `userId`. The user is not available for future requests until  activated again. Any future operation for the deactivated user returns the 404  (resource not found) error.\n",
                "operationId": "DeleteAUserFromAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group has been deleted successfully."
                    }
                }
            },
            "patch": {
                "summary": "Update user by ID (PATCH)",
                "description": "This operation updates a user's information in a directory by `userId` via `PATCH`. Refer to  `GET \/ServiceProviderConfig` for details on the supported operations.\n",
                "operationId": "PatchUserInformationInAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user ID"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Resource attributes to be included in response. Mutually exclusive with `excludedAttributes`.  Example: `userName,emails.value`\n"
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "description": "Resource attributes to be excluded from response. Mutually exclusive with `attributes`.  Example: `timezone,emails.type,department`\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            }
        },
        "\/scim\/directory\/{directoryId}\/Users": {
            "get": {
                "summary": "Get users",
                "description": "Get users from the specified directory. Filtering is supported with a single exact match  (`eq`) against the `userName` and `externalId` attributes. Pagination is supported. Sorting  is not supported.\n",
                "operationId": "GetUsersFromAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Resource attributes to be included in response. Mutually exclusive with `excludedAttributes`.  Example: `userName,emails.value`\n"
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "description": "Resource attributes to be excluded from response. Mutually exclusive with `attributes`.  Example: `timezone,emails.type,department`\n"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter for `displayName`. Example: `displayName eq \"SCIM_GROUP\"`"
                    },
                    {
                        "name": "startIndex",
                        "in": "query",
                        "description": "A 1-based index of the first query result."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Desired maximum number of query results in the list response page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group has been returned successfully."
                    }
                }
            },
            "post": {
                "summary": "Create a user",
                "description": "Create a user in a directory. An attempt to create an existing user fails with a 409 (Conflict) error. A user account can only be created if it has an email address on a verified domain. If a managed Atlassian account already exists on the Atlassian platform for the specified email address, the user in your identity provider is linked to the user in your Atlassian organization.",
                "operationId": "CreateAUserInAnActiveDirectory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "directoryId",
                        "in": "path",
                        "description": "Directory Id"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Resource attributes to be included in response. Mutually exclusive with `excludedAttributes`.  Example: `userName,emails.value`\n"
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "description": "Resource attributes to be excluded from response. Mutually exclusive with `attributes`.  Example: `timezone,emails.type,department`\n"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Group has been created successfully."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "#\/components\/schemas\/ScimGroup": {
                "type": "object"
            },
            "Failure": {
                "type": "object",
                "properties": {
                    "error": {
                        "description": "Human readable error message",
                        "type": "string"
                    },
                    "traceId": {
                        "description": "Trace ID that can be used to find log messages",
                        "type": "string"
                    }
                }
            },
            "ScimError": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "status": {
                        "description": "The HTTP status code.",
                        "type": "string"
                    },
                    "scimType": {
                        "description": "Keyword for SCIM detail error.",
                        "type": "string"
                    },
                    "detail": {
                        "description": "Detailed human-readable message.",
                        "type": "string"
                    }
                }
            },
            "schemas": {
                "type": "array"
            },
            "ScimGroup": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier defined by Atlassian SCIM Service. This field is read-only and case-sensitive.  It is ignored if specified in the payload during user creation or modification.\n",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "Identifier defined by provisioning client. CaseExact. Uniqueness is controlled by client. ",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "Group display name. This field is immutable, required, and read-only.",
                        "type": "string"
                    },
                    "members": {
                        "description": "Group members",
                        "type": "array"
                    },
                    "meta": {
                        "description": "Group metadata information.",
                        "type": ""
                    }
                }
            },
            "members": {
                "type": "array"
            },
            "ScimGroupMember": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "display": {
                        "description": "",
                        "type": "string"
                    },
                    "$ref": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ScimMetadata": {
                "type": "object",
                "properties": {
                    "resourceType": {
                        "description": "The name of the resource type of the resource. This field is read-only and  case-sensitive.\n",
                        "type": "string"
                    },
                    "location": {
                        "description": "The URI of the resource being returned. This field is read-only.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The most recent DateTime that the details of this resource were updated. This  field is read-only.\n",
                        "type": "string"
                    },
                    "created": {
                        "description": "The DateTime that the resource was added to Atlassian SCIM service. This field  is read-only.\n",
                        "type": "string"
                    }
                }
            },
            "EnterpriseUserExtension": {
                "type": "object",
                "properties": {
                    "organization": {
                        "description": "Organization the user belongs to.",
                        "type": "string"
                    },
                    "department": {
                        "description": "Department the user belongs to.",
                        "type": "string"
                    }
                }
            },
            "ExternalAtlassianScimExtension": {
                "type": "object",
                "properties": {
                    "atlassianAccountId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ScimGroupForUser": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "display": {
                        "description": "",
                        "type": "string"
                    },
                    "$ref": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ScimUserEmail": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "primary": {
                        "description": "Boolean value indicating whether this is the primary email address.",
                        "type": "boolean"
                    }
                }
            },
            "ScimUser": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "userName": {
                        "description": "Unique identifier defined by the provisioning client. Atlassian SCIM service will verify  the value and guarantee its uniqueness. This field is required during  user creation or modification.\n",
                        "type": "string"
                    },
                    "emails": {
                        "description": "Email addresses for the User. This field is required during user creation or modification.  One value must be marked as primary.\n",
                        "type": "array"
                    },
                    "id": {
                        "description": "Unique identifier defined by Atlassian SCIM Service. This field is read-only and case-sensitive.  It is ignored if specified in the payload during user creation or modification.\n",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "Identifier defined by provisioning client. CaseExact. Uniqueness is controlled by client. ",
                        "type": "string"
                    },
                    "name": {
                        "description": "The components of the user's name.",
                        "type": ""
                    },
                    "displayName": {
                        "description": "Group display name. This field is immutable, required, and read-only.",
                        "type": "string"
                    },
                    "nickName": {
                        "description": "User nickname.",
                        "type": "string"
                    },
                    "title": {
                        "description": "User title.",
                        "type": "string"
                    },
                    "preferredLanguage": {
                        "description": "User preferred language.",
                        "type": "string"
                    },
                    "department": {
                        "description": "Department the user belongs to.",
                        "type": "string"
                    },
                    "organization": {
                        "description": "Organization the user belongs to.",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "User timezone. e.g. America\/Los_Angeles .",
                        "type": "string"
                    },
                    "phoneNumbers": {
                        "description": "Phone numbers for the user.",
                        "type": "array"
                    },
                    "meta": {
                        "description": "Group metadata information.",
                        "type": ""
                    },
                    "groups": {
                        "description": "SCIM groups user belongs to.",
                        "type": "array"
                    },
                    "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
                        "description": "Enterprise user information",
                        "type": ""
                    },
                    "urn:scim:schemas:extension:atlassian-external:1.0": {
                        "description": "Atlassian specific SCIM Extension",
                        "type": ""
                    },
                    "active": {
                        "description": "A Boolean value indicating the user's administrative status.",
                        "type": "boolean"
                    }
                }
            },
            "emails": {
                "type": "array"
            },
            "phoneNumbers": {
                "type": "array"
            },
            "groups": {
                "type": "array"
            },
            "ScimUserName": {
                "type": "object",
                "properties": {
                    "formatted": {
                        "description": "The full name, including all middle names, titles, and suffixes as appropriate, formatted for display.",
                        "type": "string"
                    },
                    "familyName": {
                        "description": "The family name of the User.",
                        "type": "string"
                    },
                    "givenName": {
                        "description": "The given name of the User.",
                        "type": "string"
                    },
                    "middleName": {
                        "description": "The middle name(s) of the User.",
                        "type": "string"
                    },
                    "honorificPrefix": {
                        "description": "The honorific prefix(es) of the User, or title in most Western languages.",
                        "type": "string"
                    },
                    "honorificSuffix": {
                        "description": "The honorific suffix(es) of the User, or suffix in most Western languages.",
                        "type": "string"
                    }
                }
            },
            "ScimUserPhoneNumber": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "primary": {
                        "description": "Boolean value indicating whether this is the primary email address.",
                        "type": "boolean"
                    }
                }
            },
            "BadRequestException": {
                "type": "object",
                "properties": {
                    "cause": {
                        "description": "",
                        "type": ""
                    },
                    "stackTrace": {
                        "description": "",
                        "type": "array"
                    },
                    "responseStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "scimErrorType": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "localizedMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "suppressed": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "cause": {
                "type": "object"
            },
            "stackTrace": {
                "type": "array"
            },
            "suppressed": {
                "type": "array"
            },
            "StackTraceElement": {
                "type": "object",
                "properties": {
                    "methodName": {
                        "description": "",
                        "type": "string"
                    },
                    "fileName": {
                        "description": "",
                        "type": "string"
                    },
                    "lineNumber": {
                        "description": "",
                        "type": "integer"
                    },
                    "className": {
                        "description": "",
                        "type": "string"
                    },
                    "nativeMethod": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "Throwable": {
                "type": "object",
                "properties": {
                    "cause": {
                        "description": "",
                        "type": ""
                    },
                    "stackTrace": {
                        "description": "",
                        "type": "array"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "localizedMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "suppressed": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "JsonNode": {
                "type": "object",
                "properties": {
                    "array": {
                        "description": "",
                        "type": "boolean"
                    },
                    "null": {
                        "description": "",
                        "type": "boolean"
                    },
                    "valueNode": {
                        "description": "",
                        "type": "boolean"
                    },
                    "containerNode": {
                        "description": "",
                        "type": "boolean"
                    },
                    "missingNode": {
                        "description": "",
                        "type": "boolean"
                    },
                    "object": {
                        "description": "",
                        "type": "boolean"
                    },
                    "nodeType": {
                        "description": "",
                        "type": "string"
                    },
                    "pojo": {
                        "description": "",
                        "type": "boolean"
                    },
                    "number": {
                        "description": "",
                        "type": "boolean"
                    },
                    "integralNumber": {
                        "description": "",
                        "type": "boolean"
                    },
                    "floatingPointNumber": {
                        "description": "",
                        "type": "boolean"
                    },
                    "short": {
                        "description": "",
                        "type": "boolean"
                    },
                    "int": {
                        "description": "",
                        "type": "boolean"
                    },
                    "long": {
                        "description": "",
                        "type": "boolean"
                    },
                    "double": {
                        "description": "",
                        "type": "boolean"
                    },
                    "bigDecimal": {
                        "description": "",
                        "type": "boolean"
                    },
                    "bigInteger": {
                        "description": "",
                        "type": "boolean"
                    },
                    "textual": {
                        "description": "",
                        "type": "boolean"
                    },
                    "boolean": {
                        "description": "",
                        "type": "boolean"
                    },
                    "binary": {
                        "description": "",
                        "type": "boolean"
                    },
                    "float": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "OperationForAScimPatch": {
                "type": "object",
                "properties": {
                    "op": {
                        "description": "",
                        "type": "string"
                    },
                    "path": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "value": {
                "type": "object"
            },
            "RequestPayloadToPatch": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "operations": {
                        "description": "SCIM patch operations.",
                        "type": "array"
                    }
                }
            },
            "operations": {
                "type": "array"
            },
            "ScimGroupListResponse": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "totalResults": {
                        "description": "The total number of results returned by the query operation. The value may be larger than  the number of resources returned, such as when returning a single page of results from a  larger result set.\n",
                        "type": "integer"
                    },
                    "startIndex": {
                        "description": "The 1-based index of the first result in the current set of list results.",
                        "type": "integer"
                    },
                    "itemsPerPage": {
                        "description": "The number of resources returned in a list response page.",
                        "type": "integer"
                    },
                    "Resources": {
                        "description": "The list of resource objects.",
                        "type": "array"
                    }
                }
            },
            "Resources": {
                "type": "array"
            },
            "ScimUserListResponse": {
                "type": "object",
                "properties": {
                    "schemas": {
                        "description": "SCIM error schemas.",
                        "type": "array"
                    },
                    "totalResults": {
                        "description": "The total number of results returned by the query operation. The value may be larger than  the number of resources returned, such as when returning a single page of results from a  larger result set.\n",
                        "type": "integer"
                    },
                    "startIndex": {
                        "description": "The 1-based index of the first result in the current set of list results.",
                        "type": "integer"
                    },
                    "itemsPerPage": {
                        "description": "The number of resources returned in a list response page.",
                        "type": "integer"
                    },
                    "Resources": {
                        "description": "The list of resource objects.",
                        "type": "array"
                    }
                }
            }
        }
    }
}