{
  "info": {
    "_postman_id": "01e8e5c6-2376-4dea-8f11-65a08dd3c544",
    "name": "Jira",
    "description": "Jira Cloud REST API documentation",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "9a8ee45c-f417-4e48-bba9-a186df0ebfe5",
      "name": "api",
      "description": "Folder for api",
      "item": [
        {
          "_postman_id": "b6b27e45-018d-4b7c-9f34-c2b328590d20",
          "name": "Get application property",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/application-properties?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "application-properties"
              ],
              "query": [
                {
                  "description": "The key of the application property.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                },
                {
                  "description": "The permission level of all items being returned in the list.",
                  "key": "permissionLevel",
                  "value": "{{permissionLevel}}",
                  "disabled": true
                },
                {
                  "description": "\nWhen a key isn't provided, this filters the list of results by the\n                        application property key using a regular expression. For example, using\n                        jira.lf.* will return all application properties with keys that start with\n                        jira.lf..",
                  "key": "keyFilter",
                  "value": "{{keyFilter}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all application properties or a single application property.\n\n <p>\n If you specify a value for the <code>key</code> parameter, then a single application property is returned as\n an object (not in an array). Otherwise, an array of all editable application properties is returned. See\n <a href=\"#api-api-3-application-properties-id-put\">Set application property</a> for\n descriptions of editable properties.\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "65081ac8-80df-4111-8edd-b8c91ef6d060",
          "name": "Get advanced settings",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/application-properties/advanced-settings",
            "description": "Returns the application properties that are accessible on the <em>Advanced Settings</em> page. To navigate to the\n <em>Advanced Settings</em> page in Jira, choose the Jira icon > <b>Jira settings</b> > <b>System</b>,\n <b>General Configuration</b> and then click <b>Advanced Settings</b> (in the upper right).\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "9bc1ecec-844e-4836-a28e-ac892655d37e",
          "name": "Set application property",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"id\":\"jira.home\",\"value\":\"/var/jira/jira-home\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/application-properties/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "application-properties",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The key of the application property to update."
                }
              ]
            },
            "description": "Changes the value of an application property. For example, you can change the value of the\n <code>jira.clone.prefix</code> from its default value of <em>CLONE -</em> to <em>Clone -</em> if you prefer\n sentence case capitalization. Editable properties are described below along with their default values.\n\n\n <h4>Advanced settings</h4>\n\n <p>The advanced settings below are also accessible in <a href=\"https://confluence.atlassian.com/x/vYXKM\">Jira</a>.</p>\n\n <table>\n   <thead>\n       <tr>\n       <th>Key</th>\n        <th>Description</th>\n        <th>Default value</th>\n       </tr>\n   </thead>\n   <tbody>\n       <tr>\n         <td><code>jira.clone.prefix</code></td>\n         <td>A string of text that automatically precedes the title of a cloned issue.</td>\n         <td><code>CLONE -</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.date.picker.java.format</code></td>\n         <td>The date format for the Java (server-side) generated dates. This must be the same as the <code>jira.date.picker.javascript.format</code> format setting.</td>\n         <td><code>d/MMM/yy</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.date.picker.javascript.format</code></td>\n         <td>This date format is for the JavaScript (client-side) generated dates. This must be the same as the <code>jira.date.picker.java.format</code> format setting.</td>\n         <td><code>%e/%b/%y</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.date.time.picker.java.format</code></td>\n         <td>The date format for the Java (server-side) generated date times. This must be the same as the <code>jira.date.time.picker.javascript.format</code> format setting.</td>\n         <td><code>dd/MMM/yy h:mm a</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.date.time.picker.javascript.format</code></td>\n         <td>This date format is for the JavaScript (client-side) generated date times. This must be the same as the <code>jira.date.time.picker.java.format</code> format setting.</td>\n         <td><code>%e/%b/%y %I:%M %p</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.issue.actions.order</code></td>\n         <td>The default order of actions (such as <em>Comments</em> or <em>Change history</em>) displayed on the issue view.</td>\n         <td><code>asc</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.table.cols.subtasks</code></td>\n         <td>The columns to show while viewing sub-task issues in a table (for example, a list of sub-tasks on a particular issue).</td>\n         <td><code>issuetype, status, assignee, progress</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.view.issue.links.sort.order</code></td>\n         <td>The sort order of the list of issue links on the issue view.</td>\n         <td><code>type, status, priority</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.comment.collapsing.minimum.hidden</code></td>\n         <td>The minimum number of comments required for comment collapsing to occur. A value of <code>0</code> disables comment collapsing.</td>\n         <td><code>4</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.newsletter.tip.delay.days</code></td>\n         <td>The number of days before a prompt to sign up to the Jira Insiders newsletter is shown. A value of <code>-1</code> disables this functionality.</td>\n         <td><code>7</code></td>\n       </tr>\n   </tbody>\n </table>\n\n <h4>Look and feel</h4>\n\n <p>The settings listed below adjust the <a href=\"https://confluence.atlassian.com/x/VwCLLg\">look and feel</a>.</p>\n\n <table>\n   <thead>\n       <tr>\n       <th>Key</th>\n        <th>Description</th>\n        <th>Default value</th>\n       </tr>\n   </thead>\n   <tbody>\n       <tr>\n         <td><code>jira.lf.date.time</code></td>\n         <td>Look and feel of the <a href=\"https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html\">time format</a>.</td>\n         <td><code>h:mm a</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.date.day</code></td>\n         <td>Look and feel of the <a href=\"https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html\">day format</a>.</td>\n         <td><code>EEEE h:mm a</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.date.complete</code></td>\n         <td>Look and feel of the <a href=\"https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html\">date and time format</a>.</td>\n         <td><code>dd/MMM/yy h:mm a</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.date.dmy</code></td>\n         <td>Look and feel of the <a href=\"https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html\">date format</a>.</td>\n         <td><code>dd/MMM/yy</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.date.time.picker.use.iso8061</code></td>\n         <td>When enabled, sets Monday as the first day of the week in the date picker, as specified by the ISO8601 standard.</td>\n         <td><code>false</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.logo.url</code></td>\n         <td>The URL of the logo image file.</td>\n         <td><code>/images/icon-jira-logo.png</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.logo.show.application.title</code></td>\n         <td>Controls the visibility of the application title on the sidebar.</td>\n         <td><code>false</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.favicon.url</code></td>\n         <td>The URL of the favicon.</td>\n         <td><code>/favicon.ico</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.favicon.hires.url</code></td>\n         <td>The URL of the high resolution favicon.</td>\n         <td><code>/images/64jira.png</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.top.adg3.bgcolour</code></td>\n         <td>The background color of the sidebar.</td>\n         <td><code>#0747A6</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.top.adg3.textcolour</code></td>\n         <td>The color of the text and logo of the sidebar.</td>\n         <td><code>#DEEBFF</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.lf.hero.button.base.bg.colour</code></td>\n         <td></td>\n         <td><code>#3b7fc4</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.title</code></td>\n         <td>The text for the application title. The application title can also be set in <em>General settings</em>.</td>\n         <td><code>Jira</code></td>\n       </tr>\n       <tr>\n         <td><code>jira.option.globalsharing</code></td>\n         <td>boolean</td>\n         <td><code>true</code></td>\n       </tr>\n       <tr>\n         <td><code>xflow.product.suggestions.enabled</code></td>\n         <td>Indicate whether or not to expose product suggestions for other Atlassian products within Jira.</td>\n         <td><code>true</code></td>\n       </tr>\n   </tbody>\n </table>\n\n <h4>Other settings</h4>\n\n <table>\n   <thead>\n       <tr>\n       <th>Key</th>\n        <th>Description</th>\n        <th>Default value</th>\n       </tr>\n   </thead>\n   <tbody>\n       <tr>\n         <td><code>jira.issuenav.criteria.autoupdate</code></td>\n         <td>Supports instant updates to search criteria.</td>\n         <td><code>true</code></td>\n       </tr>\n   </tbody>\n </table>\n\n <p>\n <em>Note: Be careful when changing\n <a href=\"https://confluence.atlassian.com/x/vYXKM\">application properties and advanced settings</a>.</em>\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission>/a>. "
          },
          "response": []
        },
        {
          "_postman_id": "06288ecd-5709-4d3d-bc2c-cd2cdcca2211",
          "name": "Get all application roles",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/applicationrole",
            "description": "Returns all application roles. In Jira, application roles are managed using the\n <a href=\"https://confluence.atlassian.com/x/3YxjL\">Application access configuration</a> page.\n\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "f18d3751-5b81-42bf-9da2-ca4522e69dd6",
          "name": "Get application role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/applicationrole/:key",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "applicationrole",
                ":key"
              ],
              "variable": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "description": "\nThe key of the application role. Use the Get all application roles\n            method to get the key for each application role."
                }
              ]
            },
            "description": "Returns an application role.\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "d4e13f5f-50b7-4aa9-8d00-31d946be4981",
          "name": "Get global attachment settings",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/attachment/meta",
            "description": "Returns the global attachment settings, that is, whether attachments are enabled and the maximum attachment size\n allowed.\n <br><br>\n Note that there are also <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permissions</a> that restrict\n whether users can create and delete attachments or not.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None. "
          },
          "response": []
        },
        {
          "_postman_id": "aac2505a-b427-47b3-a650-47299b6a5caa",
          "name": "Get attachment metadata",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/attachment/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "attachment",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment."
                }
              ]
            },
            "description": "Returns the metadata for an attachment. Note that the attachment itself is not returned.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling user\n must have permission to view the issue that the attachment belongs to. "
          },
          "response": []
        },
        {
          "_postman_id": "d502f027-2ef1-4a14-910c-9013852750cc",
          "name": "Delete attachment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/attachment/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "attachment",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment."
                }
              ]
            },
            "description": "Deletes an attachment from an issue.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Any of the following permissions\n in the project that the issue is in:\n <ul>\n     <li><em>Delete own attachments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n     to delete an attachment created by the calling user.</li>\n     <li><em>Delete all attachments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n     to delete an attachment created by any user.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "b0e80f50-8e6d-475c-85a9-956f003b7936",
          "name": "Get all metadata for an expanded attachment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/attachment/:id/expand/human",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "attachment",
                ":id",
                "expand",
                "human"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment."
                }
              ]
            },
            "description": "Returns the metadata for the contents of an attachment, if it is an archive, and metadata for the attachment itself.\n For example, if the attachment is a ZIP archive, then information about the files in the archive is returned and\n metadata for the ZIP archive. Currently, only the ZIP archive format is supported.\n <br><br>\n Use this method to retrieve data that is presented in the UI, as this method returns the metadata for the attachment\n itself, such as the attachment's ID and name. Otherwise, use\n <a href=\"#api-api-3-attachment-id-expand-raw-get\">\n Get contents metadata for an expanded attachment</a>, which only returns the metadata for the attachment's contents.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling user\n must have permission to view the issue that the attachment belongs to. "
          },
          "response": []
        },
        {
          "_postman_id": "8256e2b6-4ab6-47fb-ba85-de8e6daf26af",
          "name": "Get contents metadata for an expanded attachment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/attachment/:id/expand/raw",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "attachment",
                ":id",
                "expand",
                "raw"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment."
                }
              ]
            },
            "description": "Returns the metadata for the contents of an attachment, if it is an archive. For example, if the attachment is a ZIP\n archive, then information about the files in the archive is returned. Currently, only the ZIP archive format is supported.\n <br><br>\n Use this method if you are processing the data without presenting it in the UI, as this method only returns the metadata\n for the contents of the attachment. Otherwise, to retrieve data to present in the UI, use\n <a href=\"#api-api-3-attachment-id-expand-human-get\">\n Get all metadata for an expanded attachment</a> which also returns the metadata for the attachment itself, such as\n the attachment's ID and name.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling user\n must have permission to view the issue that the attachment belongs to. "
          },
          "response": []
        },
        {
          "_postman_id": "2b815cf4-c88b-4910-aea4-494a01bf6992",
          "name": "Get audit records",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/auditing/record?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "auditing",
                "record"
              ],
              "query": [
                {
                  "description": "The number of records to skip before returning the first result.",
                  "key": "offset",
                  "value": "{{offset}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of results to return. The maximum is 1000.",
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true
                },
                {
                  "description": "The query string.",
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true
                },
                {
                  "description": "\nThe date and time on or after which returned audit records must have been created. If to\n               is provided from must be before to or the result set will be empty.",
                  "key": "from",
                  "value": "{{from}}",
                  "disabled": true
                },
                {
                  "description": "\nThe date and time on or before which returned audit results must have been created. If from\n               is provided to must be after from or the result set will be empty.",
                  "key": "to",
                  "value": "{{to}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of audit records. The list can be filtered to include items:\n  <ul>\n     <li>containing a string in at least one field. For example, providing <em>up</em> will return all audit records\n     where one or more fields contains words such as <em>update</em>.</li>\n     <li>created on or after a date and time.</li>\n     <li>created or or before a date and time.</li>\n     <li>created during a time period.</li>\n  </ul>\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "255b3575-74d3-4c97-8b1a-01891f0cbf2b",
          "name": "Get system avatars by type",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/avatar/:type/system",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "avatar",
                ":type",
                "system"
              ],
              "variable": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "description": "The avatar type."
                }
              ]
            },
            "description": "Returns a list of system avatar details by owner type, where the owner types are issue type, project, or user.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "d143a66e-e4d6-4f3b-bdfd-44c3cf7f681e",
          "name": "Get comments by IDs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"ids\":[1,2,5,10]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/comment/list?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "comment",
                "list"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about comments in the response. This parameter accepts multiple values separated by a comma:\n \n   renderedBody Returns the comment body rendered in HTML.\n   properties Returns the comment's properties.\n ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the comments for a list of comment IDs.\n <p>\n <b></b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse project</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for the project\n containing a requested issue. Issues in projects where the user doesn't have <em>browser project</em> permission are\n excluded from the returned list. Also, when the visibility of a comment is restricted to a role or group the user\n must be a member of that role or group for the comment to be included in the returned list. "
          },
          "response": []
        },
        {
          "_postman_id": "cd035c0d-69c0-4cf8-bd73-895ab2802a79",
          "name": "Get comment property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/comment/:commentId/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "comment",
                ":commentId",
                "properties"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "{{commentId}}",
                  "description": "The ID of the comment."
                }
              ]
            },
            "description": "Returns the keys of all the properties of a comment.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Edit All Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to get the keys of all the properties on any comment.</li>\n       <li><em>Edit Own Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to get the keys of all the properties on a comment created by the user.</li>\n  </ul>\n Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group. "
          },
          "response": []
        },
        {
          "_postman_id": "e9938810-f29e-44ca-b86e-1494b293c9da",
          "name": "Get comment property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/comment/:commentId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "comment",
                ":commentId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "{{commentId}}",
                  "description": "The ID of the comment."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property."
                }
              ]
            },
            "description": "Returns the value of a comment property.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Edit All Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to get the value of a property from any comment.</li>\n       <li><em>Edit Own Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to get the value of a property from a comment created by the user.</li>\n  </ul>\n Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group. "
          },
          "response": []
        },
        {
          "_postman_id": "bc15f845-0260-4e4e-9417-d444dae97b72",
          "name": "Set comment property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/comment/:commentId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "comment",
                ":commentId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "{{commentId}}",
                  "description": "The ID of the comment."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property. The maximum length is 255 characters."
                }
              ]
            },
            "description": "Creates or updates the value of a property for a comment. Use this resource to store custom data against a comment.\n <p>\n The value of the request body must be a <a href=\"http://tools.ietf.org/html/rfc4627\">valid</a>, non-empty JSON\n blob. The maximum length is 32768 bytes.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Edit All Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to create or update the value of a property on any comment.</li>\n       <li><em>Edit Own Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to create or update the value of a property on a comment created by the user.</li>\n  </ul>\n Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group. "
          },
          "response": []
        },
        {
          "_postman_id": "4248f236-8369-439e-a1c9-998c0ad9348e",
          "name": "Delete comment property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/comment/:commentId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "comment",
                ":commentId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "{{commentId}}",
                  "description": "The ID of the comment."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property."
                }
              ]
            },
            "description": "Deletes a comment property.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Edit All Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to delete a property from any comment.</li>\n       <li><em>Edit Own Comments</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n       to delete a property from a comment created by the user.</li>\n  </ul>\n Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group. "
          },
          "response": []
        },
        {
          "_postman_id": "df437daf-fcec-4c8c-991b-3c642bfc3339",
          "name": "Create component",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"leadUserName\":\"mia\",\"leadAccountId\":\"bd429c95-e27b-4423-a0bd-421cf3d69129\",\"assigneeType\":\"PROJECT_LEAD\",\"isAssigneeTypeValid\":false,\"project\":\"PROJECTKEY\",\"projectId\":10000}"
            },
            "url": "https://{{host}}/rest/api/3/component",
            "description": "Creates a component. Use components to provide containers for issues within a project.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required: Any of the following:</b>\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n     <li><em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "b934a4b2-8340-437e-ab8b-2488c413e780",
          "name": "Get component",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/component/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "component",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the component."
                }
              ]
            },
            "description": "Returns a component.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse projects</em>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "59d3678a-a4e1-4d70-9088-a68c8988eef6",
          "name": "Update component",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Component 1\",\"description\":\"This is a Jira component\",\"leadUserName\":\"mia\",\"leadAccountId\":\"bd429c95-e27b-4423-a0bd-421cf3d69129\",\"assigneeType\":\"PROJECT_LEAD\",\"isAssigneeTypeValid\":false,\"project\":\"PROJECTKEY\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/component/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "component",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}"
                }
              ]
            },
            "description": "Modifies a component. Any fields included in the request are overwritten. If <code>leadUserName</code>\n is an empty string (\"\") the component lead is removed.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required: Any of the following:</b>\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n     <li><em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "56ea28e4-4476-4900-9a35-2cb79276aa52",
          "name": "Delete component",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/component/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "component",
                ":id"
              ],
              "query": [
                {
                  "description": "The ID of the component to replace the deleted component. If this value is null no replacement is made.",
                  "key": "moveIssuesTo",
                  "value": "{{moveIssuesTo}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the component."
                }
              ]
            },
            "description": "Deletes a component.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required: Any of the following:</b>\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n     <li><em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "6bd74502-dc5f-4d48-a3b4-ca6aaaf06dd6",
          "name": "Get component issues count",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/component/:id/relatedIssueCounts",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "component",
                ":id",
                "relatedIssueCounts"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the component."
                }
              ]
            },
            "description": "Returns the counts of issues assigned to the component.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "01e7c1ae-169b-4a32-a6ee-ca53832ae061",
          "name": "Get global settings",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/configuration",
            "description": "Returns the <a href=\"https://confluence.atlassian.com/x/qYXKM\">global settings</a> in Jira. These settings\n determine whether optional features (for example, sub-tasks, time tracking, and others) are enabled.\n If time tracking is enabled, this method also returns the time tracking configuration.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to log in to Jira (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "17e9c9d4-c926-4f33-a3b7-9459009f876e",
          "name": "Get selected time tracking provider",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking",
            "description": "Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then\n a successful but empty response is returned.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "daa0cba5-5866-481c-abde-c9d2192937e5",
          "name": "Select time tracking provider",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"key\":\"Jira\"}"
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking",
            "description": "Selects a time tracking provider.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "c9db0a3e-b9a0-47fe-9429-c5311aea0d72",
          "name": "Disable time tracking",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking",
            "description": "Disables time tracking.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "44d47f52-58a0-4629-b65e-8dd3bccf3da8",
          "name": "Get all time tracking providers",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking/list",
            "description": "Returns all time tracking providers. By default, Jira only has one time tracking provider: <em>JIRA provided time tracking</em>.\n However, you can install other time tracking providers via apps from the Atlassian Marketplace.\n For more information on time tracking providers, see the documentation for the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/\">\n Time Tracking Provider</a> module.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "c71c4926-4311-47ed-b135-f4203ba22068",
          "name": "Get time tracking settings",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking/options",
            "description": "Returns the time tracking settings. This includes settings such as the time format, default time\n unit, and others. For more information, see\n <a href=\"https://confluence.atlassian.com/x/qoXKM\">Configuring time tracking</a>.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "d013d472-7e08-42e4-a2ca-826f6ce8d75d",
          "name": "Set time tracking settings",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"workingHoursPerDay\":7.6,\"workingDaysPerWeek\":5.5,\"timeFormat\":\"pretty\",\"defaultUnit\":\"hour\"}"
            },
            "url": "https://{{host}}/rest/api/3/configuration/timetracking/options",
            "description": "Sets the time tracking settings.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "73964c74-30f6-4b06-a791-53a1eea32221",
          "name": "Get custom field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/customFieldOption/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "customFieldOption",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom field option. To find this ID,  configure the custom field and edit its options in Jira. Click the option and its ID will\n           show in the URL as the selectedParentOptionId parameter."
                }
              ]
            },
            "description": "Returns a custom field option. For example, an option in a cascading select list.\n <br><br>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "649b8cf1-e659-4e39-93f9-3ca4a1f96220",
          "name": "Get all dashboards",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard"
              ],
              "query": [
                {
                  "description": "The filter applied to the list of dashboards. Valid values are:\n                        \n                           favourite Returns dashboards the user has marked as favorite.\n                           my Returns dashboards owned by the user.\n                        ",
                  "key": "filter",
                  "value": "{{filter}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of dashboards owned by or shared with the user. The list may be filtered to include only favorite or\n owned dashboards.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "9b795086-a9e4-4be6-b9d0-b3842f68927a",
          "name": "Get dashboard item property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard",
                ":dashboardId",
                "items",
                ":itemId",
                "properties"
              ],
              "variable": [
                {
                  "key": "dashboardId",
                  "value": "{{dashboardId}}",
                  "description": "The ID of the dashboard."
                },
                {
                  "key": "itemId",
                  "value": "{{itemId}}",
                  "description": "The ID of the dashboard item."
                }
              ]
            },
            "description": "Returns the keys of all properties for a dashboard item.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n However, to get the property keys the user must be the owner of the dashboard or be shared the dashboard.\n Note, users with the <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global\n permission</a> are considered owners of the System dashboard. The System dashboard is considered to be shared\n with all other users. "
          },
          "response": []
        },
        {
          "_postman_id": "93e4dd01-7837-45b0-ac0a-dc0575c0214e",
          "name": "Get dashboard item property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard",
                ":dashboardId",
                "items",
                ":itemId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "dashboardId",
                  "value": "{{dashboardId}}",
                  "description": "The ID of the dashboard."
                },
                {
                  "key": "itemId",
                  "value": "{{itemId}}",
                  "description": "The ID of the dashboard item."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the dashboard item property."
                }
              ]
            },
            "description": "Returns the key and value of a dashboard item property.\n <br><br>\n A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed\n to users as gadgets that users can add to their dashboards. For more information on how users do this, see\n <a href=\"https://confluence.atlassian.com/x/7AeiLQ\">Adding and customizing gadgets</a>.\n <br><br>\n When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires\n whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this\n resource to store the item's content or configuration details. For more information on working with dashboard items, see\n <a href=\"https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/\">\n Building a dashboard item for a JIRA Connect add-on</a> and the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/\">Dashboard Item</a> documentation.\n <br><br>\n There is no resource to set or get dashboard items.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n However, to get a dashboard item property the user must be the owner of the dashboard or be shared the dashboard.\n Note, users with the <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global\n permission</a> are considered owners of the System dashboard. The System dashboard is considered to be shared\n with all other users. "
          },
          "response": []
        },
        {
          "_postman_id": "60033ad1-b0c3-4f35-917b-876eb7d058d7",
          "name": "Set dashboard item property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard",
                ":dashboardId",
                "items",
                ":itemId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "dashboardId",
                  "value": "{{dashboardId}}",
                  "description": "The ID of the dashboard."
                },
                {
                  "key": "itemId",
                  "value": "{{itemId}}",
                  "description": "The ID of the dashboard item."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the dashboard item property. The maximum length of the key is 255 bytes."
                }
              ]
            },
            "description": "Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard\n item.\n <br><br>\n A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed\n to users as gadgets that users can add to their dashboards. For more information on how users do this, see\n <a href=\"https://confluence.atlassian.com/x/7AeiLQ\">Adding and customizing gadgets</a>.\n <br><br>\n When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires\n whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this\n resource to store the item's content or configuration details. For more information on working with dashboard items, see\n <a href=\"https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/\">\n Building a dashboard item for a JIRA Connect add-on</a> and the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/\">Dashboard Item</a> documentation.\n <br><br>\n There is no resource to set or get dashboard items.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n However, to set a dashboard item property the user must be the owner of the dashboard.\n Note, users with the <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global\n permission</a> are considered owners of the System dashboard.\n <br><br>\n The value of the request body must be a <a href=\"http://tools.ietf.org/html/rfc4627\">valid</a>, non-empty JSON\n blob. The maximum length is 32768 bytes. "
          },
          "response": []
        },
        {
          "_postman_id": "370a1832-1bf2-4545-af42-3910bd419266",
          "name": "Delete dashboard item property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard",
                ":dashboardId",
                "items",
                ":itemId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "dashboardId",
                  "value": "{{dashboardId}}",
                  "description": "The ID of the dashboard."
                },
                {
                  "key": "itemId",
                  "value": "{{itemId}}",
                  "description": "The ID of the dashboard item."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the dashboard item property."
                }
              ]
            },
            "description": "Deletes a dashboard item property.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n However, to delete a dashboard item property the user must be the owner of the dashboard.\n Note, users with the <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global\n permission</a> are considered owners of the System dashboard. "
          },
          "response": []
        },
        {
          "_postman_id": "7a95c326-ecc4-4566-b4e1-eb96f5714ec7",
          "name": "Get dashboard",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/dashboard/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "dashboard",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the dashboard."
                }
              ]
            },
            "description": "Returns a dashboard.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n However, to get a dashboard, the dashboard must be shared with the user or the user must own it.\n Note, users with the <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global\n permission</a> are considered owners of the System dashboard. The System dashboard is considered to be shared\n with all other users. "
          },
          "response": []
        },
        {
          "_postman_id": "9245cd9e-2ca2-4770-8c5c-2b9ef8944a58",
          "name": "Evaluate Jira expression",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work read:jira-user"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"expression\":\"issue.comments.map(c => [c.id, c.author.key, c.body.plainText.length < 110 ? c.body.plainText : c.body.plainText.slice(0, 100) + '...'])\",\"context\":{\"issue\":{\"key\":\"ACJIRA-1470\"},\"project\":{\"key\":\"ACJIRA\"},\"sprint\":10001,\"board\":10100}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/expression/eval?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "expression",
                "eval"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                   \n                      meta.complexity Returns information about the expression complexity\n                      (for example, the number of expensive operations used by the expression)\n                      and how close the expression is to reaching the complexity limit.\n                      Useful when designing and debugging your expressions.\n                   ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Evaluates a Jira expression and returns its value.\n\n <p> Jira expressions is the name of a domain-specific language for Jira\n that can be used to evaluate expressions in the context of Jira entities.\n\n <h4 id=\"jira-expressions-context\">Context variables</h4>\n <p> The following context variables are available:\n <ul>\n     <li>`user`: The current user. Equal to `null` if the request is anonymous.\n         <br/>&nbsp;Fields: `key`, `accountId`, `displayName`, `active`, `properties`.\n     </li>\n     <li>`app`: The <a href=\"https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect\"></a>Connect app</a> that made the request. Available only for authenticated requests made by Connect Apps (read more here: <a href=\"https://developer.atlassian.com/cloud/jira/platform/authentication-for-apps/\">Authentication for Connect apps</a>).\n         <br/>&nbsp;Fields: `key`, `properties`.\n     </li>\n     <li>`issue`: The current issue. Available only when the issue is provided in the request context object.\n         <br/>&nbsp;Fields: `id`, `key`, `summary`, `description`, `created`, `updated`, `dueDate`, `project`, `priority`,\n         `assignee`, `reporter`, `issueType`, `status`, `resolution`, `resolutionDate`, `comments`, `properties`.\n         <br/>&nbsp;Jira Software fields: `epic`, `sprint`, `closedSprints`, `flagged`.\n         <br/>&nbsp;Apart from these, all custom fields are available and can be referenced by one of the following:\n         <ul>\n             <li>ID: `issue.customfield_10010`</li>\n             <li>key: `issue['com.my.app.field-key']`</li>\n         </ul>\n         Custom fields are returned as JSON values, using exactly the same format as in the issue REST API.\n     </li>\n     <li>`project`: The current project. Available only when the project is provided in the request context object.\n         <br/>&nbsp;Fields: `id`, `key`, `name`, `projectTypeKey`, `properties`.\n     </li>\n     <li>`sprint`: The current sprint. Available only when the sprint is provided in the request context object.\n         <br/>&nbsp;Fields: `id`, `name`, `goal`, `state`, `startDate`, `endDate`, `completeDate`, `properties`.\n     </li>\n     <li>`board`: The current board. Available only when the board is provided in the request context object.\n         <br/>&nbsp;Fields: `id`, `activeSprints`, `closedSprints`, `futureSprints`,\n         `hasBacklog`, `hasSprints`, `canAdminister`, `properties`.\n     </li>\n </ul>\n\n <h4 id=\"jira-expressions-syntax-semantics\">Syntax and semantics</h4>\n <p>Jira expressions follow JavaScript syntax. The following constructs are supported (this list may not be exhaustive):\n<ul>\n<li><b>Static and computed member access</b>\n         <br/>&nbsp;\n         Static member access is used when you want to access an object's field\n         and know the field's name at the time of writing the expression. For example,\n         `issue.key` is an expression that accesses the `key` field from `issue`.\n         <br/>&nbsp;\n         Computed member access is used when you want to dynamically create the name of the field\n         you are accessing, or if the name contains special characters, in which case accessing the field\n         using the static member access will not be allowed by the syntax. It is especially useful\n         when accessing entity properties, which usually contain dots or dashes in their names,\n         for example `issue.properties['com.your.app.property-name']`.</li>\n<li><b>Indexed access</b>\n         <br/>&nbsp;\n         Individual members of lists can be accessed by index. For example, to get the first issue comment, write:\n         `issue.comments[0]`.</li>\n<li><b>Mathematical operators</b>\n         <br/>&nbsp;\n          Jira expressions allow all the usual kinds of mathematical operations.\n          You can add, subtract, multiply, or divide numbers. For example, to check if the number\n          of comments on an issue is even, write: `issue.comments.length % 2 == 0`.</li>\n<li><b>Boolean operators</b>\n         <br/>&nbsp;\n         The usual logical operators are available: conjunction (`&&`), disjunction (`||`) and negation (`!`).\n         If used with boolean values (`true` or `false`), their behavior follows the rules of classical boolean\n         algebra. Each of these operators can also be used with any type, following\n         the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators\">JavaScript semantics</a>\n         in this case.\n         <br/>&nbsp;\n         The latter is especially useful for defining default values.\n         For example, to get the value of the issue property `\"myProperty\"` while also providing\n         a default value in case it's not defined, write: `issue.properties[\"myProperty\"] || \"default value\"`.</li>\n<li><b>Comparisons</b>\n         <br/>&nbsp;\n         Values can be compared to each other in different ways, depending on the type. For example,\n         it's possible to check if one <i>number</i> is lesser or greater than another number, but <i>lists</i>\n         or <i>strings</i> can be tested only for equality. Only values of the same type can be compared\n         together.\n         <br/>&nbsp;\n         For example, to check if the issue has more than 0 comments, write: `issue.comments.length > 0`.</li>\n<li><b>Conditional expressions</b>\n         <br/>&nbsp;\n         Conditional expressions can be used when different results should be returned depending on a condition.\n         For example, to get the first comment's author, we would first need to check if there are comments at all:<br>\n          ```issue.comments.length > 0 ? issue.comments[0].author : null```.</li>\n<li><b>Arrow functions</b>\n         <br/>&nbsp;\n         Jira expressions by design do not support classical imperative loops.\n         Instead, they follow the modern paradigm of functional programming and provide\n         a set of built-in list processing methods, along with the syntax for arrow functions,\n         also knows as lambdas. These functions are written in the form of <i>x => y</i>, where\n         <i>x</i> is the name of the variable that can be used in the function's body, denoted here as <i>y</i>.\n         <br/>&nbsp;\n         For example, to return the number of comments with contents longer than 100 characters,\n         first map the comments to their texts, then filter them to leave only those long enough:\n         ```issue.comments.map(c => c.body.plainText).filter(text => text.length > 100).length```.\n         </li>\n<li><b>List literals</b>\n         <br/>&nbsp;\n         Lists can not only be obtained from context objects but also created manually.\n         For example, to check if the issue type is either a Bug or Task, create a list with these\n         two types and use the `includes()` method to test if the actual value is one of the two listed:\n         ```['Bug', 'Task'].includes(issue.issueType.name)```.</li>\n<li><b>Object literals</b>\n         <br/>&nbsp;\n         Jira expressions can return structured pieces of data with the use of object literals.\n         For example, to return only comments' authors and contents instead of the entire comments,\n         create an object containing these two fields for each comment:\n         ```issue.comments.map(c => { author: c.author, body: c.body.plainText })```.</li>\n</ul>\n\n <h4 id=\"jira-expressions-lists\">Lists</h4>\n The following methods and properties are available for lists.\n <ul>\n <li>`list.length`\n         <br/>&nbsp;\n         Returns the number of items stored in the list.\n         <br/>&nbsp;\n         For example, to get the comments count on the issue, write `issue.comments.length`.</li>\n\n <li>`list.map(Any => Any)`\n         <br/>&nbsp;\n         Maps all items in the list to the result of the provided function.\n         <br/>&nbsp;\n         For example, to transform a list of comments into a list of corresponding comment IDs,\n         use the `map()` method and provide a function that given a comment, returns its ID:\n         `issue.comments.map(comment => comment.id)`.</li>\n\n <li>`list.filter(Any => Boolean)`\n         <br/>&nbsp;\n         Leaves only items that do satisfy the given function, that is, for which the given function\n         returns `true`. If the function's result is not a boolean value, it will be converted to one, following\n         these rules:\n         <ul>\n             <li>Empty strings are `false`.</li>\n             <li>Null values are `false`.</li>\n             <li>Negative numbers, zero and NaN (Not a Number) are `false`.</li>\n             <li>Everything else is `true`.</li>\n         </ul>\n         For example, to get only comments written by the current user, execute: `issue.comments.filter(c => c.author.key == user.key)`.</li>\n\n <li>`list.includes(Any)`\n         <br/>&nbsp;\n         Checks if the given argument is stored in the list.\n         <br/>&nbsp;\n         For example, to check if the current user commented on the issue,\n         first map the comments to their authors using `map()` and then use the `includes()` method:\n         `issue.comments.map(c => c.author).includes(user)`.</li>\n\n <li>`list.indexOf(Any)`\n         <br/>&nbsp;\n         Returns the index of the first occurrence of the item in the list. If the item is not in the list, -1 is returned.\n         <br/>&nbsp;\n         For example, to check if the current user was the first commenter on the issue, write:\n         `issue.comments.map(c => c.author).indexOf(user) == 0`.</li>\n\n <li>`list.slice(Number, Number?)`\n         <br/>&nbsp;\n         Returns a portion of the list, with the index starting from the first argument (inclusive), and ending\n         with the second one (exclusive). The second argument is optional, if not provided, all\n         remaining elements will be returned. Negative numbers are allowed and mean indexes counted from the end of the list.\n         <br/>&nbsp;\n         For example, comments are returned from the oldest to newest. To get only 10 <i>newest</i> comments\n         (10 elements from the end of the list), write: `issue.comments.slice(-10)`.</li>\n\n <li>`list.flatten()`\n         <br/>&nbsp;\n         Flattens a multi-dimensional list. That is, the list is transformed into a single-dimensional list\n         with elements from the nested lists included in the resultant list.\n         <br/>&nbsp;\n         For example, the result of `[[1,2,3], 4, [5,6]].flatten()` will be `[1,2,3,4,5,6]`.\n\n <li>`list.flatMap(Any => Any)`\n         <br/>&nbsp;\n         Maps all items in the list and flattens the result.\n\n <li>`list.reduce(Any => Any, Any?)`\n         <br/>&nbsp;\n         Aggregates all elements of the list using the function provided in the first argument.\n         The operation starts from the first element of the list, unless the initial value is provided\n         in the optional second argument. If the list is empty and no initial value is given, an error will be returned.\n         <br/>&nbsp;\n         For example, to sum up the length of all comments, write:\n         `issue.comments.reduce((total, current) => total + current.body.plainText.length, 0)`\n </ul>\n\n <h4 id=\"jira-expressions-entity-properties\">Entity properties</h4>\n\n Using Jira expressions, it is possible to access entity properties of any entity that supports them,\n that is: issue, project, issue type, comment, user, board, sprint.\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-app-properties-a-app-properties\">App properties</a> are also available.\n To do this, get the `properties` field of the appropriate object (for example, `app.properties`).\n The field returns what can be thought of as a map of all properties, indexed by their keys.\n <p>There are a few ways to interact with this map. It is possible to:\n <ul>\n     <li>Get the value of a property using static member access, for example `issue.properties.myProperty`.</li>\n     <li>Get the value of a property using computed member access, for example `issue.properties['myProperty']`.</li>\n     <li>Get the value of a property using the `get()` method, for example `issue.properties.get('myProperty')`.</li>\n     <li>Get a list of keys of all available properties using the `keys()`, for example `issue.properties.keys()`.</li>\n </ul>\n\n <p>Accessing a property that is not defined will return `null`.\n\n <h4 id=\"jira-expressions-maps\">Maps</h4>\n\n <p>If the returned property value is a JSON object, it will be converted to a <em>Map</em>.\n Maps in Jira expressions are a special type with the following characteristics:\n\n <ul>\n     <li>Static or dynamic member access can be used to get their values indexed by keys. For example, `map.key` is the same as `map['key']`.</li>\n     <li>Values can also be accessed using the `get()` method. For example `map.get('key')`.</li>\n     <li>The above methods will return `null` if there is no mapping for the given key.</li>\n     <li>A list of entries can be obtained with the `entries()` method, which returns a list whose items are\n     two element lists where the first element is the entry key, and the second one is the entry value.\n     For example, to get all keys in the map, write `map.entries().map(entry -> entry[0])`,\n     to get all values: `map.entries().map(entry -> entry[1])`.</li>\n </ul>\n\n Object literals are also evaluated to the <em>Map</em> object.\n For example, `{ id: issue.id, summary: issue.summary }` will evaluate to a map with two keys: `id` and `summary`.\n\n <h4 id=\"jira-expressions-date-time\">Date and time</h4>\n\n Fields that contain timestamps, such as `issue.created` or `issue.resolutionDate`,\n are returned as objects of the <em>Date</em> type, which is based on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">JavaScript Date API</a>.\n\n <p>Fields that contain dates only, such as `issue.dueDate`,\n are returned as the timezone-agnostic <em>CalendarDate</em> type,\n which is like <em>Date</em>, but with a limited set of methods\n (methods related to time or timezones are not available).\n\n <p>A <em>Date</em> or <em>CalendarDate</em> object can be transformed into three different String formats:\n\n <ul>\n     <li><b>ISO format</b>. For example, <em>2018-06-29T12:16:37.471Z</em> (<em>Date</em> format) or <em>2018-06-29</em> (<em>CalendarDate</em> format).\n         <br/>&nbsp;\n         To transform a date to this format, call the `toISOString()` method.\n         This will return a string in the ISO 8601 extended format, for example, `issue.created.toISOString()`.</li>\n     <li><b>Jira REST API format</b>. For example, <em>2018-06-29T22:16:37.471+1000</em> (<em>Date</em> format) or <em>2018-06-29</em> (<em>CalendarDate</em> format).\n         <br/>&nbsp;\n         Returning dates from Jira expressions renders them in the Jira REST API format, for example, `issue.created`.</li>\n     <li><b>Human-readable format</b>. For example, <em>29/Jun/18 10:16 PM</em> (<em>Date</em> format) or <em>29/Jun/18</em> (<em>CalendarDate</em> format).\n         <br/>&nbsp;\n         To transform a date to this format, call the `toString()` method.\n         This will return a string in the human-readable format, according to the current user's locale and timezone, for example, `issue.created.toString()`.\n         The same format is also used if a date is concatenated with a string, for example, `'Due date: ' + issue.dueDate`.</li>\n </ul>\n\n <p>A `Date` object can also be converted to a `CalendarDate` object by using either `toCalendarDate()` or `toCalendarDateUTC()`.\n These methods remove the time information from the object, leaving only the calendar date, in the current user's timezone or the UTC timezone, respectively.\n\n <p><em>Date</em> objects of the same type can be compared using regular comparison operators.\n For example, to get comments that were added after the issue's due date, write:\n `issue.comments.filter(c => c.created.toCalendarDate() > issue.dueDate)`.\n\n <p>A date can be modified by adding or subtracting units of time. To do this, use the methods below.\n Each of these methods take a date and a number of units of time, then create a new modified date.\n <ul>\n     <li>`date.plusMonths(Number)`: Creates a new date that is the original date plus the specified number of months.\n     <li>`date.plusDays(Number)`: Creates a new date that is the original date plus the specified number of days.\n     <li>`date.plusHours(Number)`: Creates a new date that is the original date plus the specified number of hours.\n     <li>`date.plusMinutes(Number)`: Creates a new date that is the original date plus the specified number of minutes.\n </ul>\n\n (All methods above have a subtraction counterpart, for example, `date.minusMonths(Number)`.)\n\n <p>Date modification methods can be used to build expressions that assert when Jira events have occurred.\n To do this, get the current date and modify it, then compare the modified date to the date of the event.\n Here's an example of how to check if an issue has been updated in the last three days:\n\n <ol>\n  <li>Get the current date. To do this, create a new Date object (that is, `new Date()`).</li>\n  <li>Modify the date, as desired. For example, `new Date().minusDays(3)` is the current date minus three days.</li>\n  <li>Compare the modified date to the date of the `issue.updated` event. For example, `issue.updated > new Date().minusDays(3)`\n  will return true if the issue has been updated in the last three days.</li>\n </ol>\n\n <h4 id=\"jira-expressions-restrictions\">Restrictions</h4>\n <p> Some restrictions apply to the evaluation of expressions.\n While the limits are high enough not to interfere with any intended usage, it's important to realize that they do exist:\n <ul>\n     <li>Some lists are limited to 50 elements in the final result.\n          This is similar to <a href=\"#pagination\">pagination</a> and serves the same purpose.\n          For example, a list of issue comments will always be trimmed to at most 50 items.<br>\n          (Use the `slice()` method to control which portion of the list to return.)</li>\n     <li>The expression can execute at most 10 expensive operations\n     (expensive operations are those that load additional data, such as entity properties, comments, or custom fields).</li>\n     <li>The max number of results returned in the response is 10,000 primitive values or 1,000 Jira REST API beans.</li>\n     <li>The expression's length is limited to 1,000 characters or 100 syntactic elements.</li>\n </ul>\n\n Use the <em>meta.complexity</em> <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#expansion\">expand</a> parameter\n to see the complexity of your expression and how close it is to reaching the limits.\n\n\n <h4 id=\"jira-expressions-examples\">Examples</h4>\n <p> The following examples demonstrate how to use Jira expressions and what they can do.\n\n <p>Get contents of all comments in the current issue:<br>\n ```issue.comments.map(c => c.body)```\n\n <p>Check if the issue type is either a Bug or Task (using a regular expression):<br>\n ```issue.issueType.name.match('^(Bug|Task)$') != null```\n\n <p>Get only comments added by the current user:<br>\n ```issue.comments.filter(c => c.author.key == user.key)```\n\n <p>Check if the current user is the one stored in a project's entity property:<br>\n ```user.key == project.properties['special-user'].userKey```\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required</b>: None.\n However, an expression may return different results for different users depending on their permissions.\n For example, different users may see different comments on the same issue.<br>\n Permission to access Jira Software is required to access Jira Software context variables (`board` and `sprint`)\n or fields (for example, `issue.sprint`). "
          },
          "response": []
        },
        {
          "_postman_id": "52383c35-b6af-4aae-87c0-8c182e2c1726",
          "name": "Get fields",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/field",
            "description": "Returns all issue fields in Jira, both system and custom fields.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the following\n rules apply:\n <ul>\n     <li>Fields that cannot be added to the issue navigator are always returned.</li>\n     <li>Fields that cannot be placed on an issue screen are always returned.</li>\n     <li>Fields that depend on global Jira settings are only returned if the setting is enabled. That is,\n     timetracking fields, subtasks, votes, and watches.</li>\n     <li>For all other fields, this method only returns the fields that the current user has\n     permission to see (that is, the field can be used in at least one project that the user can see).</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "4bbff3b4-c5f6-4b0a-98af-7916edccd4f7",
          "name": "Create custom field",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"New custom field\",\"description\":\"Custom field for picking groups\",\"type\":\"com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\",\"searcherKey\":\"com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher\"}"
            },
            "url": "https://{{host}}/rest/api/3/field",
            "description": "Creates a custom field.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "7cd8d8cf-4240-48ee-95fc-9301327a7c4d",
          "name": "Get all issue field options",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option"
              ],
              "query": [
                {
                  "description": "\nThe starting index of the returned objects. For example, 1.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. For example, 20.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                }
              ]
            },
            "description": "Returns all options defined for a select list issue field. A select list issue field is a type of\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/\">issue field</a>\n that allows a user to select an value from a list of options.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "a4386676-01d7-4d94-8755-627f2e6fd815",
          "name": "Create issue field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option"
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}"
                }
              ]
            },
            "description": "Creates an option for a select list issue field.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "326e0270-4f90-406e-b4b3-9fcb873e560a",
          "name": "Get selectable issue field options",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/suggestions/edit?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                "suggestions",
                "edit"
              ],
              "query": [
                {
                  "description": "\nThe starting index of the returned objects. For example, 1.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. For example, 20.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "\nFilters the results to options that are only available in the specified project. For example, 10000.",
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                }
              ]
            },
            "description": "Returns options defined for a select list issue field that can be viewed and selected by the currently logged in user.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "139c7d0c-30e6-44e8-90b9-181bf310cacd",
          "name": "Get visible issue field options",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/suggestions/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                "suggestions",
                "search"
              ],
              "query": [
                {
                  "description": "\nThe starting index of the returned objects. For example, 1.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. For example, 20.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "\nFilters the results to options that are only available in the specified project. For example, 10000.",
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                }
              ]
            },
            "description": "Returns options defined for a select list issue field that can be viewed by the currently logged in user.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "7f177af0-c0b6-4e94-a0d5-cbb157e3d673",
          "name": "Get issue field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/:optionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                ":optionId"
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                },
                {
                  "key": "optionId",
                  "value": "{{optionId}}",
                  "description": "\nThe ID of the option to be returned. For example, 3."
                }
              ]
            },
            "description": "Returns an option from a select list issue field.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "95a844c5-0090-4b4c-b50a-f582e2bc8818",
          "name": "Update issue field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"id\":1,\"value\":\"Team 1\",\"properties\":{\"leader\":{\"name\":\"Leader Name\",\"email\":\"lname@example.com\"},\"members\":42,\"description\":\"The team's description\",\"founded\":\"2016-06-06\"},\"config\":{\"scope\":{\"projects\":[],\"projects2\":[{\"id\":1002,\"attributes\":[\"notSelectable\"]},{\"id\":1001,\"attributes\":[\"notSelectable\"]}],\"global\":{}},\"attributes\":[]}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/:optionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                ":optionId"
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                },
                {
                  "key": "optionId",
                  "value": "{{optionId}}",
                  "description": "\nThe ID of the option to be updated. For example, 3."
                }
              ]
            },
            "description": "Updates an option for a select list issue field. If the option does not exist, a new option is created.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "4487d2ab-dd58-49a0-9754-6d9ae784d2ea",
          "name": "Delete issue field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/:optionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                ":optionId"
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                },
                {
                  "key": "optionId",
                  "value": "{{optionId}}",
                  "description": "\nThe ID of the option to be deleted. For example, 3."
                }
              ]
            },
            "description": "Deletes an option from a select list issue field.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "c027857b-157f-432b-b950-9870a29614ed",
          "name": "Replace issue field option",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/field/:fieldKey/option/:optionId/issue?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "field",
                ":fieldKey",
                "option",
                ":optionId",
                "issue"
              ],
              "query": [
                {
                  "description": "\nThe ID of the option that will replace the currently selected option. For example, 2.",
                  "key": "replaceWith",
                  "value": "{{replaceWith}}",
                  "disabled": true
                },
                {
                  "description": "\nA JQL query that specifies the issues to be updated. For example, project=10000.",
                  "key": "jql",
                  "value": "{{jql}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "fieldKey",
                  "value": "{{fieldKey}}",
                  "description": "\nThe field key is specified in the following format: $(app-key)\\_\\_$(field-key).\n                  For example, example-add-on\\_\\_example-issue-field."
                },
                {
                  "key": "optionId",
                  "value": "{{optionId}}",
                  "description": "\nThe ID of the option to be deselected. For example, 3."
                }
              ]
            },
            "description": "Deselects a select list issue field option in all issues that it has been selected in. A different option can be\n selected to replace the deselected option. The update can also be limited to a smaller set of issues by using a JQL query.\n <p>\n This is an <a href=\"#async\">asynchronous method</a>. The response object will contain a link to the long-running\n task. For example, <i>https://your-domain.atlassian.net/rest/api/3/task/10127</i>.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. Jira permissions are not required for the app providing the field. "
          },
          "response": []
        },
        {
          "_postman_id": "95ecb822-6c5c-448d-8420-1ae0dc47adf8",
          "name": "Get filters",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n               \n               sharedUsers Returns the users that the filter has been shared with. This includes\n               users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n               then the sharedUsers object will still be returned but it won't have any users in it.\n               subscriptions Returns the users that have subscribed to the filter. If you don't\n               specify subscriptions, the subscriptions object will still be returned\n               but it won't have any subscriptions in it.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all filters. Deprecated, use <a href=\"#api-api-3-filter-search-get\">\n Search for filters</a> that supports search and pagination.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however only the following\n filters are returned:\n <ul>\n <li>Filters owned by the user.</li>\n <li>Filters shared with a group that the user is a member of.</li>\n <li>Filters shared with a private project that the user can browse.</li>\n <li>Filters shared with a public project, even if the user is anonymous.</li>\n <li>Filters shared with the public, even if the user is anonymous.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "7565df9a-23b4-4684-94c5-1ea7ba644166",
          "name": "Create filter",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"jql\":\"type = Bug and resolution is empty\",\"favourite\":true,\"favouritedCount\":0}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n               \n               sharedUsers Returns the users that the filter has been shared with. This includes\n               users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n               then the sharedUsers object will still be returned but it won't have any users in it.\n               subscriptions Returns the users that have subscribed to the filter. If you don't\n               specify subscriptions, the subscriptions object will still be returned\n               but it won't have any subscriptions in it.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Creates a new filter. The new filter is not shared and not selected as a favorite.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "9f213478-7d28-4a14-81dd-ed457790f3e0",
          "name": "Get default share scope",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/filter/defaultShareScope",
            "description": "Returns the default sharing settings for new filters and dashboards for a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "a58a9f79-a295-4bfb-b2c0-43e87b1fda31",
          "name": "Set default share scope",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"scope\":\"GLOBAL\"}"
            },
            "url": "https://{{host}}/rest/api/3/filter/defaultShareScope",
            "description": "Sets the default sharing for new filters and dashboards for a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "835d5603-2a31-4ce1-857f-5117d82a8993",
          "name": "Get favourite filters",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/favourite?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                "favourite"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n               \n               sharedUsers Returns the users that the filter has been shared with. This includes\n               users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n               then the sharedUsers object will still be returned but it won't have any users in it.\n               subscriptions Returns the users that have subscribed to the filter. If you don't\n               specify subscriptions, the subscriptions object will still be returned\n               but it won't have any subscriptions in it.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the favorite filters of the calling user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "a38226d0-c294-4856-a62e-034a0ddd8fed",
          "name": "Get my filters",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/my?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                "my"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n                          \n                          sharedUsers Returns the users that the filter has been shared with. This includes\n                          users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n                          then the sharedUsers object will still be returned but it won't have any users in it.\n                          subscriptions Returns the users that have subscribed to the filter. If you don't\n                          specify subscriptions, the subscriptions object will still be returned\n                          but it won't have any subscriptions in it.\n                          ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "Include the user's favorite filters in the response.",
                  "key": "includeFavourites",
                  "value": "{{includeFavourites}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the filters owned by the calling user. If <code>includeFavourites</code> is <code>true</code>, the user's\n favorite filters are also returned.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "b4a1dba7-90e7-4b1c-a128-fd1c582f875d",
          "name": "Search for filters",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                "search"
              ],
              "query": [
                {
                  "description": "\nReturns filters with a name that partially matches filterName.",
                  "key": "filterName",
                  "value": "{{filterName}}",
                  "disabled": true
                },
                {
                  "description": "\nReturns filters with an owner that exactly matches accountId of the owner. This parameter\n                   cannot be used with the owner parameter.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "\nReturns filters with an owner that exactly matches owner. This parameter\n                   cannot be used with the accountId parameter.",
                  "key": "owner",
                  "value": "{{owner}}",
                  "disabled": true
                },
                {
                  "description": "Returns filters that are shared with a group that has a name that exactly matches\n                   groupname.",
                  "key": "groupname",
                  "value": "{{groupname}}",
                  "disabled": true
                },
                {
                  "description": "Returns filters that are shared with a project that has an ID that exactly matches\n                   projectId.",
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                },
                {
                  "description": "Orders the results\n                   by a property of the filter. For example, name.\n                   \n                   id Orders by filter id.\n                   name Orders by filter name.\n                   description Orders by filter description.\n                   owner Orders by owner name.\n                   favourite_count Orders by favouritedCount.\n                   is_favourite Orders by favourite.\n                   ",
                  "key": "orderBy",
                  "value": "{{orderBy}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset). The base index is 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of items to return per page. Max is 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n                   \n                   sharedUsers Returns the users that the filter has been shared with. This includes\n                   users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n                   then the sharedUsers object will still be returned but it won't have any users in it.\n                   subscriptions Returns the users that have subscribed to the filter. If you don't\n                   specify subscriptions, the subscriptions object will still be returned\n                   but it won't have any subscriptions in it.\n                   ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Search for filters. This method is similar to\n <a href=\"#api-api-3-filter-get\">Get filters</a> except that\n you can refine the results to include filters that have specific attributes. For example, filters with a particular name.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however only the following\n filters are returned (if no search parameters are set):\n <ul>\n <li>Filters owned by the user.</li>\n <li>Filters shared with a group that the user is a member of.</li>\n <li>Filters shared with a private project that the user can browse.</li>\n <li>Filters shared with a public project, even if the user is anonymous.</li>\n <li>Filters shared with the public, even if the user is anonymous.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "7c916fa2-f8b0-4370-900d-8e3d353c3ac8",
          "name": "Get filter",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n                \n                  sharedUsers Returns the users that the filter has been shared with. This includes\n                  users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n                  then the sharedUsers object will still be returned but it won't have any users in it.\n                  subscriptions Returns the users that have subscribed to the filter. If you don't\n                  specify subscriptions, the subscriptions object will still be returned\n                  but it won't have any subscriptions in it.\n                ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter to return."
                }
              ]
            },
            "description": "Returns a filter.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling\n user must have permission view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "9e342ff1-f463-4eac-acce-b78928e5c663",
          "name": "Update filter",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"All Open Bugs\",\"description\":\"Lists all open bugs\",\"jql\":\"type = Bug and resolution is empty\",\"favourite\":true,\"favouritedCount\":0}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n                 \n                 sharedUsers Returns the users that the filter has been shared with. This includes\n                 users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n                 then the sharedUsers object will still be returned but it won't have any users in it.\n                 subscriptions Returns the users that have subscribed to the filter. If you don't\n                 specify subscriptions, the subscriptions object will still be returned\n                 but it won't have any subscriptions in it.\n                 ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter to update."
                }
              ]
            },
            "description": "Updates an existing filter. Use this method to update a filter's name, description, JQL, or sharing.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira,\n however the following rules govern what a user can update:\n <ul>\n <li>Private filters (i.e., not shared) can only be updated by the creator of the filter.</li>\n <li>Shared filters can only be updated by the creator of the filter or a Jira administrator.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "ee876099-7f31-4190-9d06-355c8ce772a8",
          "name": "Delete filter",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter to delete."
                }
              ]
            },
            "description": "Delete a filter.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira,\n however the following rules govern what a user can delete:\n <ul>\n <li>Private filters (i.e., not shared) can only be deleted by the creator of the filter.</li>\n <li>Shared filters can only be deleted by the creator of the filter or a Jira administrator.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "21308487-9e23-41c5-a924-910c835057c4",
          "name": "Get columns",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/columns",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "columns"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Returns the columns configured for a filter. The column configuration is used when the filter's results\n are viewed in <em>List View</em> with the <em>Columns</em> set to <em>Filter</em>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling\n user must have permission to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "08793b37-d113-4d4f-b877-b765d653d0d0",
          "name": "Set columns",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*, multipart/form-data"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/columns",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "columns"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Sets the columns for a filter. Only navigable fields can be set as columns. Use\n <a href=\"#api-api-3-field-get\">Get fields</a> to get the\n list fields in Jira. A navigable field has <code>navigable</code> set to <code>true</code>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>) and\n permission to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "93a45ac8-28bb-4310-9f12-68bb0fbac684",
          "name": "Reset columns",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/columns",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "columns"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Reset the user's column configuration for the filter to the default.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>) and\n permission to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "53b482d7-da5f-44e6-913c-b5ef2def0e57",
          "name": "Add filter as favorite",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/favourite?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "favourite"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n               \n               sharedUsers Returns the users that the filter has been shared with. This includes\n               users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n               then the sharedUsers object will still be returned but it won't have any users in it.\n               subscriptions Returns the users that have subscribed to the filter. If you don't\n               specify subscriptions, the subscriptions object will still be returned\n               but it won't have any subscriptions in it.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Add a filter as a favorite for the calling user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>) and permission\n to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "5263b325-8a3c-444f-a486-2d0aec3b8e50",
          "name": "Remove filter as favorite",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/favourite?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "favourite"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about filter in the response. This parameter accepts multiple values separated by a comma:\n               \n               sharedUsers Returns the users that the filter has been shared with. This includes\n               users that can browse projects that the filter has been shared with. If you don't specify sharedUsers,\n               then the sharedUsers object will still be returned but it won't have any users in it.\n               subscriptions Returns the users that have subscribed to the filter. If you don't\n               specify subscriptions, the subscriptions object will still be returned\n               but it won't have any subscriptions in it.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Removes a filter as a favorite for the calling user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>) and permission\n to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "cfcc914c-eb16-4455-b32e-9f57befcb19c",
          "name": "Get share permissions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/permission",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "permission"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or\n the public. Sharing with all logged-in users or the public is known as a global share permission.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling\n user must have permission to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "8ad9f63b-2fc9-44d6-8afb-3ffcd4342727",
          "name": "Add share permission",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"type\":\"group\",\"groupname\":\"jira-administrators\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/permission",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "permission"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                }
              ]
            },
            "description": "Add a share permissions to a filter. If you add a global share permission (i.e., all logged-in users or the public)\n it will overwrite all share permissions for the filter.\n <br>\n Be aware that this method uses different objects for updating share permissions compared to\n <a href=\"#api-api-3-filter-id-put\">Update filter</a>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Share dashboards and filters</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> and the calling user must own the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "b44b3edf-5943-48e9-9102-c6ba34e64326",
          "name": "Get share permission",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/permission/:permissionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "permission",
                ":permissionId"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                },
                {
                  "key": "permissionId",
                  "value": "{{permissionId}}",
                  "description": "The ID of the share permission."
                }
              ]
            },
            "description": "Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or\n the public. Sharing with all logged-in users or the public is known as a global share permission.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the calling\n user must have permission to view the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "f35a3ab0-d9c9-4a9f-bc67-2ec8f0a7b087",
          "name": "Delete share permission",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/filter/:id/permission/:permissionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "filter",
                ":id",
                "permission",
                ":permissionId"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the filter."
                },
                {
                  "key": "permissionId",
                  "value": "{{permissionId}}",
                  "description": "The ID of the share permission."
                }
              ]
            },
            "description": "Deletes a share permission from a filter.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (i.e., member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>) and\n the calling user must own the filter. "
          },
          "response": []
        },
        {
          "_postman_id": "24ced399-1a17-46a7-ae04-375340c1e807",
          "name": "Get group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/group?groupname={{groupname}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "group"
              ],
              "query": [
                {
                  "description": "The name of the group.",
                  "key": "groupname",
                  "value": "{{groupname}}"
                },
                {
                  "description": "List of fields to expand.",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "This resource is deprecated, use <a href=\"#api-api-3-group-member-get\"><code>group/member</code></a>.\n <p>\n Returns all users in a group.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "fa5e7917-aaeb-40bb-9f42-e365bbe6e796",
          "name": "Create group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/group",
            "description": "Creates a group.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "304de7a9-5a5a-47de-a190-478571e7c29a",
          "name": "Remove group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/group?groupname={{groupname}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "group"
              ],
              "query": [
                {
                  "description": "The name of the group.",
                  "key": "groupname",
                  "value": "{{groupname}}"
                },
                {
                  "description": "The group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs will be inaccessible after the deletion.",
                  "key": "swapGroup",
                  "value": "{{swapGroup}}",
                  "disabled": true
                }
              ]
            },
            "description": "Deletes a group.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "7d234872-05cf-4f86-ae4b-d77a04ec1143",
          "name": "Get users from group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/group/member?groupname={{groupname}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "group",
                "member"
              ],
              "query": [
                {
                  "description": "The name of the group.",
                  "key": "groupname",
                  "value": "{{groupname}}"
                },
                {
                  "description": "Include inactive users.",
                  "key": "includeInactiveUsers",
                  "value": "{{includeInactiveUsers}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first user to return.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of users to return per page.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all users in a group. Users are ordered by username.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "21ec54a7-3579-41ac-9b3c-52547b2cac3e",
          "name": "Add user to group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"charlie\",\"accountId\":\"123abc\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/group/user?groupname={{groupname}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "group",
                "user"
              ],
              "query": [
                {
                  "description": "The name of the group.",
                  "key": "groupname",
                  "value": "{{groupname}}"
                }
              ]
            },
            "description": "Adds a user to a group.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "5fa35873-453b-47a2-af97-8d889ebebcf2",
          "name": "Remove user from group",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/group/user?groupname={{groupname}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "group",
                "user"
              ],
              "query": [
                {
                  "description": "The name of the group.",
                  "key": "groupname",
                  "value": "{{groupname}}"
                },
                {
                  "description": "The username of the user to remove.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "The account id of the user to remove.",
                  "key": "accountid",
                  "value": "{{accountid}}",
                  "disabled": true
                }
              ]
            },
            "description": "Removes a user from a group.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "9672e133-cb92-4c6d-b1b1-43efa45056f5",
          "name": "Find groups",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/groups/picker?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "groups",
                "picker"
              ],
              "query": [
                {
                  "description": "Parameter not in use.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The string to find in group names.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "A list of groups to exclude from the result.",
                  "key": "exclude",
                  "value": "{{exclude}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of groups to return. The maximum number of groups that can be returned is\n                   limited by the system property jira.ajax.autocomplete.limit.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Parameter not in use.",
                  "key": "userName",
                  "value": "{{userName}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of groups whose names contain a query string and, optionally, a user. A list of group names can\n be provided to exclude groups from the results.\n <p>\n The primary use case for this resource is to populate a group picker suggestions list. To this end, the returned\n object includes the <code>html</code> field where the matched query term is highlighted in the group name with\n the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the\n picker, specifically <i>Showing X of Y matching groups</i>.\n <p>\n The list returns with the groups sorted. If no groups match the list criteria, an empty list is returned.\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse projects</em> <a https://confluence.atlassian.com/x/yodKLg\">project permission</a>. Users with permission\n to access Jira can call this method, but an empty list is returned. "
          },
          "response": []
        },
        {
          "_postman_id": "4b78910a-877e-4209-9987-92df315376b7",
          "name": "Find users and groups",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/groupuserpicker?query={{query}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "groupuserpicker"
              ],
              "query": [
                {
                  "description": "The search string.",
                  "key": "query",
                  "value": "{{query}}"
                },
                {
                  "description": "\nThe maximum number of items to return in each list. The maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Indicates whether the user avatar should be returned. If an invalid value is provided, the default value is used.",
                  "key": "showAvatar",
                  "value": "{{showAvatar}}",
                  "disabled": true
                },
                {
                  "description": "The custom field ID of the field this request is for.",
                  "key": "fieldId",
                  "value": "{{fieldId}}",
                  "disabled": true
                },
                {
                  "description": "The ID of a project that returned users and groups must have permission to view. To include multiple projects repeat this parameter, use of a comma separated list is not\n                            supported. This parameter is only used when fieldId is present.",
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                },
                {
                  "description": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue type IDs repeat this parameter, use of a comma separated list\n                            is not supported. Special values, such as -1 (all standard issue types)\n                            and -2 (all subtask issue types), are supported. This parameter is only\n                             used when fieldId is present.",
                  "key": "issueTypeId",
                  "value": "{{issueTypeId}}",
                  "disabled": true
                },
                {
                  "description": "The size of the avatar to return. If an invalid value is provided, the default value is used.",
                  "key": "avatarSize",
                  "value": "{{avatarSize}}",
                  "disabled": true
                },
                {
                  "description": "Indicates whether the search for groups should be case insensitive.",
                  "key": "caseInsensitive",
                  "value": "{{caseInsensitive}}",
                  "disabled": true
                },
                {
                  "description": "Indicates whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used.",
                  "key": "excludeConnectAddons",
                  "value": "{{excludeConnectAddons}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users and groups matching a string. The string is used:\n <ul>\n   <li>for users, to find a case insensitive match with username, name, and e-mail address.</li>\n   <li>for groups, to find a case-sensitive match with group name.</li>\n </ul>\n For example, if the string <em>tin</em> is used, records with the username ptindall, name Tina,\n email address sarah@tinplatetraining.com, and the group accounting would be returned.\n <p>\n Optionally, the search can be refined to:\n <ul>\n   <li>the projects and issue types associated with a custom field, such as a user picker. The search can then be\n   further refined to return only users and groups that have permission to view specific:\n   <ul>\n     <li>projects.</li>\n     <li>issue types.</li>\n   </ul>\n   <p>\n   If multiple projects or issue types are specified. they must be a subset of those enabled for the custom field\n   or no results will be returned. For example, if a field is enabled for projects A, B, and C then the search\n   could be limited to projects B and C. However, if an attempt was made to limit the search to projects B and D,\n   nothing would be returned.\n   </li>\n   <li>not return Connect app users and groups.</li>\n   <li>return groups that have a case insensitive match with the query.</li>\n </ul>\n <p>\n The primary use case for this resource is to populate a picker field suggestion list with users or groups. To\n this end, the returned object includes an <code>html</code> field for each list. This field highlights the matched\n query term in the item name with the HTML strong tag. Also, each list is wrapped in a response object that contains\n a header for use in a picker, specifically <i>Showing X of Y matching groups</i>.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse users and groups</em> <a https://confluence.atlassian.com/x/yodKLg\">global permission</a>. Users with permission\n to access Jira can call this method, but empty lists are returned. "
          },
          "response": []
        },
        {
          "_postman_id": "c8aa6b74-ef96-4f16-b147-b948dfdefbfb",
          "name": "Create issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"update\":{\"worklog\":[{\"add\":{\"started\":\"2011-07-05T11:05:00.000+0000\",\"timeSpent\":\"60m\"}}]},\"fields\":{\"project\":{\"id\":\"10000\"},\"summary\":\"something's wrong\",\"issuetype\":{\"id\":\"10000\"},\"assignee\":{\"name\":\"homer\"},\"reporter\":{\"name\":\"smithers\"},\"priority\":{\"id\":\"20000\"},\"labels\":[\"bugfix\",\"blitz_test\"],\"timetracking\":{\"originalEstimate\":\"10\",\"remainingEstimate\":\"5\"},\"security\":{\"id\":\"10000\"},\"versions\":[{\"id\":\"10000\"}],\"environment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"environment\"}]}]},\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"description\"}]}]},\"duedate\":\"2011-03-11\",\"fixVersions\":[{\"id\":\"10001\"}],\"components\":[{\"id\":\"10000\"}],\"customfield_30000\":[\"10000\",\"10002\"],\"customfield_80000\":{\"value\":\"red\"},\"customfield_20000\":\"06/Jul/11 3:25 PM\",\"customfield_40000\":\"this is a text field\",\"customfield_70000\":[\"jira-administrators\",\"jira-software-users\"],\"customfield_60000\":\"jira-software-users\",\"customfield_50000\":\"this is a text area. big text.\",\"customfield_10000\":\"09/Jun/81\"}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue"
              ],
              "query": [
                {
                  "description": "If set to true, then project an issue was created in is added to the current user's project history. Project history is shown under Projects menu in Jira. By default the project history is not updated.",
                  "key": "updateHistory",
                  "value": "{{updateHistory}}",
                  "disabled": true
                }
              ]
            },
            "description": "Creates an issue or a sub-task from a JSON representation.\n <p>\n You can provide two parameters in request's body: <code>update</code> or <code>fields</code>.\n The fields, that can be set on an issue create operation, can be determined using the <b>/rest/api/3/issue/createmeta</b> resource.\n If a particular field is not configured to appear on the issue's Create screen, then it will not be returned in the createmeta response.\n A field validation error will occur if such field is submitted in request.\n <p>\n Creating a sub-task is similar to creating an issue with the following differences:\n <ul class=\"with-bullet\">\n <li><code>issueType</code> field must be set to a sub-task issue type (use\n <code>/issue/createmeta</code> to find sub-task issue types), and</li>\n <li>You must provide a <code>parent</code> field with the ID or key of the parent issue.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "075b34ab-68e4-4493-b845-0d869b460e76",
          "name": "Create issues",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"issueUpdates\":[{\"update\":{\"worklog\":[{\"add\":{\"started\":\"2011-07-05T11:05:00.000+0000\",\"timeSpent\":\"60m\"}}]},\"fields\":{\"project\":{\"id\":\"10000\"},\"summary\":\"something's wrong\",\"issuetype\":{\"id\":\"10000\"},\"assignee\":{\"name\":\"homer\"},\"reporter\":{\"name\":\"smithers\"},\"priority\":{\"id\":\"20000\"},\"labels\":[\"bugfix\",\"blitz_test\"],\"timetracking\":{\"originalEstimate\":\"10\",\"remainingEstimate\":\"5\"},\"security\":{\"id\":\"10000\"},\"versions\":[{\"id\":\"10000\"}],\"environment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"environment\"}]}]},\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"description\"}]}]},\"duedate\":\"2011-03-11\",\"fixVersions\":[{\"id\":\"10001\"}],\"components\":[{\"id\":\"10000\"}],\"customfield_30000\":[\"10000\",\"10002\"],\"customfield_80000\":{\"value\":\"red\"},\"customfield_20000\":\"06/Jul/11 3:25 PM\",\"customfield_40000\":\"this is a text field\",\"customfield_70000\":[\"jira-administrators\",\"jira-software-users\"],\"customfield_60000\":\"jira-software-users\",\"customfield_50000\":\"this is a text area. big text.\",\"customfield_10000\":\"09/Jun/81\"}},{\"update\":{},\"fields\":{\"project\":{\"id\":\"1000\"},\"summary\":\"something's very wrong\",\"issuetype\":{\"id\":\"10000\"},\"assignee\":{\"name\":\"jerry\"},\"reporter\":{\"name\":\"kosecki\"},\"priority\":{\"id\":\"20000\"},\"labels\":[\"new_release\"],\"timetracking\":{\"originalEstimate\":\"15\",\"remainingEstimate\":\"5\"},\"security\":{\"id\":\"10000\"},\"versions\":[{\"id\":\"10000\"}],\"environment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"environment\"}]}]},\"description\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"description\"}]}]},\"duedate\":\"2011-04-16\",\"fixVersions\":[{\"id\":\"10001\"}],\"components\":[{\"id\":\"10000\"}],\"customfield_30000\":[\"10000\",\"10002\"],\"customfield_80000\":{\"value\":\"red\"},\"customfield_20000\":\"06/Jul/11 3:25 PM\",\"customfield_40000\":\"this is a text field\",\"customfield_70000\":[\"jira-administrators\",\"jira-software-users\"],\"customfield_60000\":\"jira-software-users\",\"customfield_50000\":\"this is a text area. big text.\",\"customfield_10000\":\"09/Jun/81\"}}]}"
            },
            "url": "https://{{host}}/rest/api/3/issue/bulk",
            "description": "Creates multiple issues or sub-tasks from a JSON representation, in a single bulk operation.\n <p/>\n Creating a sub-task is similar to creating an issue - check Create issue section for details:\n {@link IssueResource#createIssue(boolean, IssueUpdateBean)}} "
          },
          "response": []
        },
        {
          "_postman_id": "2e6997bb-3a1d-46b8-9c87-4cfd53248bd9",
          "name": "Get create issue meta",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/createmeta?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                "createmeta"
              ],
              "query": [
                {
                  "description": "Multi-value parameter defining project IDs to be used for the results filtering. If not specified, all projects are returned. This parameter can be specified multiple times on a request, and/or be a comma-separated list. Specifying a project, which does not exist, or the user cannot create issues in it, is not an error, but such project will not be returned in the results.\n                       You can combine this parameter with projectKeys.",
                  "key": "projectIds",
                  "value": "{{projectIds}}",
                  "disabled": true
                },
                {
                  "description": "Multi-value parameter defining project keys to be used for the results filtering. If not specified, all projects are returned. This parameter can be specified multiple times on a request, and/or be a comma-separated list. Specifying a project, which does not exist or the user cannot create issues in it, is not an error, but such project will not be returned in the results.\n                       You can combine this parameter with projectIds.",
                  "key": "projectKeys",
                  "value": "{{projectKeys}}",
                  "disabled": true
                },
                {
                  "description": "Multi-value parameter defining issue type IDs to be used for the results filtering. If not specified, all issue types are returned. This parameter can be specified multiple times, and/or be a comma-separated list. Specifying an issue type that does not exist is not an error.",
                  "key": "issuetypeIds",
                  "value": "{{issuetypeIds}}",
                  "disabled": true
                },
                {
                  "description": "Multi-value parameter defining issue type names to be used for the results filtering. If not specified, all issue types are returned. This parameter can be specified multiple times, but is NOT interpreted as a comma-separated list. Specifying an issue type that does not exist is not an error.\n                       You can combine this parameter with issuetypeIds.",
                  "key": "issuetypeNames",
                  "value": "{{issuetypeNames}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the metadata for creating issues. This includes the available projects, issue types, fields (with\n information whether those fields are required) and field types.\n Projects, in which the user does not have permission to create issues, will not be returned.\n <p/>\n The fields in the createmeta response correspond to the fields on the issue's Create screen for the specific project/issuetype.\n Fields hidden from the screen will not be returned in the createmeta response.\n <p/>\n Fields will only be returned if <code>expand=projects.issuetypes.fields</code> is set.\n <p/>\n The results can be filtered by project and/or issue type, controlled by the query parameters. "
          },
          "response": []
        },
        {
          "_postman_id": "0063ed72-ca43-443d-818f-527ae6703702",
          "name": "Get issue picker resource",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/picker?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                "picker"
              ],
              "query": [
                {
                  "description": "Query used to filter issue search results.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "JQL defining search context. Only issues matching this JQL query are included in the results.",
                  "key": "currentJQL",
                  "value": "{{currentJQL}}",
                  "disabled": true
                },
                {
                  "description": "Key of the issue defining search context. The issue defining a context is excluded from the search results.",
                  "key": "currentIssueKey",
                  "value": "{{currentIssueKey}}",
                  "disabled": true
                },
                {
                  "description": "ID of a project defining search context. Only issues belonging to a given project are suggested.",
                  "key": "currentProjectId",
                  "value": "{{currentProjectId}}",
                  "disabled": true
                },
                {
                  "description": "Set to false to exclude subtasks from the suggestions list.",
                  "key": "showSubTasks",
                  "value": "{{showSubTasks}}",
                  "disabled": true
                },
                {
                  "description": "Set to false to exclude parent issue from the suggestions list if search is performed in the context of a sub-task.",
                  "key": "showSubTaskParent",
                  "value": "{{showSubTaskParent}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of suggested issues matching the auto-completion query for the user executing this request. This REST\n method checks the user's history and browsing context to return issue suggestions. "
          },
          "response": []
        },
        {
          "_postman_id": "1ec5eb16-3b87-46c5-ad54-347f6a494746",
          "name": "Bulk set issue property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":{\"owner\":\"admin\",\"weight\":100},\"filter\":{\"entityIds\":[10100,100010],\"currentValue\":{\"owner\":\"admin\",\"weight\":50},\"hasProperty\":true}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property to update"
                }
              ]
            },
            "description": "Allows to set a property for all issues identified by a given filter.\n Only entities the user has permissions to edit will be updated.\n\n <p>\n  Currently the following filters are available:\n\n  <ul>\n     <li><b>entityIds</b> - A list of issues to update. Only issues with ids from this list will be considered for updating.\n     This is an optional filter, if not provided, then any editable issue that matches all other filters will be updated.</li>\n     <li><b>currentValue</b> - If provided, then only issues with the property currently set to that value will be updated.</li>\n     <li><b>hasProperty</b> -\n              If true, then only existing properties will be updated.\n              If false, then only issues that do not have any value associated with this property will be updated.\n              If omitted, the property will be set on all issues, regardless of whether it previously existed or not.</li>\n  </ul>\n\n  If more than one filter is given, then they are all joined with the logical \"and\", that is:\n  only issues that satisfy all filters are updated.\n  If no filters are provided at all, then the property will be updated on <em>all</em> issues editable by the caller\n  (i.e. issues in projects with the EDIT_ISSUES permission).\n </p>\n\n <p>\n  If an invalid combination of filters is provided, an error will be returned by the API.\n  For example, specifying the current value and \"hasProperty\" to \"false\" would never match any issues\n  (as it would mean: update this property if the current value is something, oh, but only if there is no value at all)\n  and is therefore not allowed.\n </p>\n\n <p>\n     This method is <a href=\"#async\">asynchronous</a>,\n     meaning that it will not return the results immediately,\n     instead creating a task to perform the requested update operation\n     (unless preliminary validation, e.g. of the provided filter, fails).\n </p>\n\n <p>\n     The operation is transactional: either all eligible issues\n     are updated, or none (if there are any errors).\n </p> "
          },
          "response": []
        },
        {
          "_postman_id": "5c41dc1f-d7da-4f99-be8d-6045badb47f0",
          "name": "Bulk delete issue property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"entityIds\":[10100,100010],\"currentValue\":\"deprecated value\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property to delete"
                }
              ]
            },
            "description": "Allows to delete a property from all issues identified by a given filter.\n Only entities the user has permissions to edit will be updated.\n\n See the <a href=\"#api-api-3-issue-properties-propertyKey-put\">issue property bulk set endpoint documentation</a> for more details. "
          },
          "response": []
        },
        {
          "_postman_id": "4e9e2497-cf5c-415d-b0c8-73d097bd3323",
          "name": "Get issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey"
              ],
              "query": [
                {
                  "description": "Multi-value parameter defining the fields returned for the issue. By default, all fields are returned. Allowed values: \n                      *all - return all fields.\n                      *navigable - return navigable fields only.\n                      summary,comment - return the summary and comments fields only.\n                      -comment - return all fields except comments.\n                      *all,-comment - same as above\n                      ",
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true
                },
                {
                  "description": "Multi-value parameter defining the additional issue attributes to be included in the response. These attributes are not returned by default. Allowed values: \n                      renderedFields - field values rendered in HTML format.\n                      names - display name of each field.\n                      schema - schema describing a field type.\n                      transitions - all possible transitions for the given issue.\n                      operations - all possibles operations available for the issue.\n                      editmeta - information about how each field may be edited.\n                      changelog - a list of recent updates of an issue, sorted by date, starting from the newest.\n                      versionedRepresentations - REST representations of all fields.\n                      Some fields may have multiple versions. REST representations are numbered.\n                      The greatest number always represents the most recent version. It is recommended to always use the most\n                      recent version.\n                      Once expand=versionedRepresentations parameter is provided in the request then\n                      \"fields\" field is excluded from the response.\n                      ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "\nMulti-value parameter defining the list of properties returned for the issue. Unlike fields,\n                      properties are not included in the response by default.\n                      Similarly to fields you can specify particular properties to be included in the response\n                      or exclude some of them using a \"-\" (minus) sign. Allowed values:\n                      \n                      *all - return all properties.\n                      *all,-prop1 - return all properties except prop1.\n                      prop1,prop1 - return prop1 and prop2 properties only.\n                      ",
                  "key": "properties",
                  "value": "{{properties}}",
                  "disabled": true
                },
                {
                  "description": "If true then issue fields are referenced by keys instead of IDs.",
                  "key": "fieldsByKeys",
                  "value": "{{fieldsByKeys}}",
                  "disabled": true
                },
                {
                  "description": "If set to true, adds the issue retrieved by this method to the current user's issue history.\n                      Issue history is shown under Issues menu item in Jira, and is also used by lastViewed JQL field in an issue search.\n                      By default the issue history is not updated.",
                  "key": "updateHistory",
                  "value": "{{updateHistory}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue, for example: JRACLOUD-1549. If exact match is not found then Jira will perform a case-insensitive search, and check for moved issues. In both scenarios the request will be processed as usual (a 302 or other redirect status\n                      will not be returned). The issue key returned in the response will indicate the current value of issue's key."
                }
              ]
            },
            "description": "Returns a full representation of the issue for the given issue key.\n <p>\n The issue JSON consists of the issue key and a collection of fields. Additional information like\n links to workflow transition sub-resources, or HTML rendered values of the fields supporting HTML rendering\n can be retrieved with <code>expand</code> request parameter specified.\n <p>\n The <code>fields</code> request parameter accepts a comma-separated list of fields\n to include in the response. It can be used to retrieve a subset of fields. By default all fields are returned in the response.\n A particular field can be excluded from the response if prefixed with a \"-\" (minus) sign.\n Parameter can be provided multiple times on a single request.\n <p>\n By default, all fields are returned in the response. Note: this is different\n from a JQL search - only navigable fields are returned by default (<code>*navigable</code>). "
          },
          "response": []
        },
        {
          "_postman_id": "e97aefbc-bcc3-4988-b299-00284cf5dede",
          "name": "Edit issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"update\":{\"summary\":[{\"set\":\"Bug in business logic\"}],\"components\":[{\"set\":\"\"}],\"timetracking\":[{\"edit\":{\"originalEstimate\":\"1w 1d\",\"remainingEstimate\":\"4d\"}}],\"labels\":[{\"add\":\"triaged\"},{\"remove\":\"blocker\"}]},\"fields\":{\"summary\":\"This is a shorthand for a set operation on the summary field\",\"customfield_10010\":1,\"customfield_10000\":\"This is a shorthand for a set operation on a text custom field\"},\"historyMetadata\":{\"type\":\"myplugin:type\",\"description\":\"text description\",\"descriptionKey\":\"plugin.changereason.i18.key\",\"activityDescription\":\"text description\",\"activityDescriptionKey\":\"plugin.activity.i18.key\",\"actor\":{\"id\":\"tony\",\"displayName\":\"Tony\",\"type\":\"mysystem-user\",\"avatarUrl\":\"http://mysystem/avatar/tony.jpg\",\"url\":\"http://mysystem/users/tony\"},\"generator\":{\"id\":\"mysystem-1\",\"type\":\"mysystem-application\"},\"cause\":{\"id\":\"myevent\",\"type\":\"mysystem-event\"},\"extraData\":{\"keyvalue\":\"extra data\",\"goes\":\"here\"}},\"properties\":[{\"key\":\"key1\",\"value\":\"can be set at issue create or update time\"},{\"key\":\"key2\",\"value\":\"and there can be multiple properties\"}]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey"
              ],
              "query": [
                {
                  "description": "Sends the notification email on issue update to all watchers. Admin or project admin permissions are required to disable the notification.",
                  "key": "notifyUsers",
                  "value": "{{notifyUsers}}",
                  "disabled": true
                },
                {
                  "description": "Allows update of the fields that are hidden from the issue's Edit screen. Only Connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideScreenSecurity",
                  "value": "{{overrideScreenSecurity}}",
                  "disabled": true
                },
                {
                  "description": "Updates the issue even if it is not editable (issue in status with jira.issue.editable set to false or missing). Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideEditableFlag",
                  "value": "{{overrideEditableFlag}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to be updated."
                }
              ]
            },
            "description": "Edits the issue from a JSON representation.\n <p/>\n The fields available for update can be determined using the <b>/rest/api/3/issue/{issueIdOrKey}/editmeta</b> resource.<br>\n If a field is hidden from the Edit screen then it will not be returned by the editmeta resource. A field\n validation error will occur if such field is submitted in an edit request. However connect add-on with admin scope may\n override a screen security configuration.\n <p/>\n If an issue cannot be edited in Jira because of its workflow status (for example the issue is closed), then you will not be able to edit it with this resource.\n <p/>\n Field to be updated should appear either in <code>fields</code> or <code>update</code> request's body parameter, but not in both. <br>\n To update a single sub-field of a complex field (e.g. timetracking) please use the <code>update</code> parameter of the edit operation.\n  Using a <code>\"field_id\": field_value</code> construction in the <code>fields</code> parameter is a shortcut of \"set\" operation in the <code>update</code> parameter. "
          },
          "response": []
        },
        {
          "_postman_id": "2010640c-a1c7-4a01-b3e0-e035028042fa",
          "name": "Delete issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey"
              ],
              "query": [
                {
                  "description": "\nA true or false value indicating if sub-tasks should be deleted.  If the\n                       issue has no sub-tasks this parameter is ignored.  If the issue has sub-tasks and parameter is either not specified or\n                       set to false then the issue will not be deleted, and an error will be returned.",
                  "key": "deleteSubtasks",
                  "value": "{{deleteSubtasks}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to be deleted."
                }
              ]
            },
            "description": "Deletes an individual issue.\n <p/>\n If the issue has sub-tasks you must set the <code>deleteSubtasks=true</code> parameter to delete the issue.\n You cannot delete an issue without deleting its sub-tasks. "
          },
          "response": []
        },
        {
          "_postman_id": "14a07e35-2d2e-4611-8643-1efd27ad5d58",
          "name": "Assign issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"harry\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/assignee",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "assignee"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "The ID or key of the issue to be assigned."
                }
              ]
            },
            "description": "Assigns an issue to a user. Use this operation when the calling user does not have the <em>Edit Issues</em> permission\n but has the <em>Assign issue</em> permission for the project that the issue is in.\n <p>\n Note that:\n <ul>\n     <li>Only the <code>name</code>  property needs to be set in the request object.</li>\n     <li>If <code>name</code> in the request object is set to <code>\"-1\"</code>, then issue is assigned to the default assignee for the project.</li>\n     <li>If <code>name</code> in the request object is set to <code>null</code>, then issue is set to unassigned.</li>\n </ul>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <ul>\n     <li><em>Browse Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for the project that the issue is in.</li>\n     <li><em>Assign Issues</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.</li>\n     <li>If implemented, permission to view the issue granted by <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue-level security</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "b3453b26-15cf-4202-8666-20ba50b5c15d",
          "name": "Add attachment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/attachments",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "attachments"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "The ID or key of the issue that attachments are added to."
                }
              ]
            },
            "description": "Adds one or more attachments to an issue. Attachments are posted as multipart/form-data (<a href=\"https://www.ietf.org/rfc/rfc1867.txt\">RFC 1867</a>).\n <p>\n Note that:\n <ul>\n     <li>The request must have a <code>X-Atlassian-Token: no-check</code> header, otherwise it will be blocked.\n     See <a href=\"#special-request-headers\">Special headers</a> for more information.</li>\n     <li>The name of the multipart/form-data parameter that contains the attachments must be <code>file</code>.</li>\n </ul>\n The following example uploads a file called <em>myfile.txt</em> to the issue <em>TEST-123</em>:\n <code>curl -D- -u admin:admin -X POST -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\"\n http://https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments</code>\n <p>\n Tip: Use a client library. Many client libraries have classes for handling multipart POST operations. For example,\n in Java, the Apache HTTP Components library provides a\n <a href=\"http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html\">MultiPartEntity</a>\n class for multipart POST operations.\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <ul>\n     <li><em>Browse Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for the project that the issue is in.</li>\n     <li><em>Assign Issues</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.</li>\n     <li>If implemented, permission to view the issue granted by <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue-level security</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "307e72d3-14ee-4c1f-9cdf-5158e77da588",
          "name": "Get change logs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/changelog?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "changelog"
              ],
              "query": [
                {
                  "description": "Page offset, ie. index of the first item returned in the page of results. Base index: 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "Maximum number of items to return per page. See Pagination section for more details.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue."
                }
              ]
            },
            "description": "Returns a <a href=\"#pagination\">paginated</a> list of all updates of an issue, sorted by date, starting from the oldest. "
          },
          "response": []
        },
        {
          "_postman_id": "26329666-598f-4692-b9ab-27581ba7ef8e",
          "name": "Get comments",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/comment?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "comment"
              ],
              "query": [
                {
                  "description": "the page offset, if not specified then defaults to 0",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "how many results on the page should be included. Defaults to 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "ordering of the results.",
                  "key": "orderBy",
                  "value": "{{orderBy}}",
                  "disabled": true
                },
                {
                  "description": "optional flags: renderedBody (provides body rendered in HTML)",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "to get comments for"
                }
              ]
            },
            "description": "Returns all comments for an issue.\n <p>\n Results can be ordered by the \"created\" field which means the date a comment was added.\n </p> "
          },
          "response": []
        },
        {
          "_postman_id": "b207dfe3-40c2-4423-96e6-e66f9e75599f",
          "name": "Add comment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/comment?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "comment"
              ],
              "query": [
                {
                  "description": "optional flags: renderedBody (provides body rendered in HTML)",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the comment will be added to"
                }
              ]
            },
            "description": "Adds a new comment to an issue. "
          },
          "response": []
        },
        {
          "_postman_id": "9dc32e6e-7710-4c49-b582-a9409b58161f",
          "name": "Get comment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/comment/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "comment",
                ":id"
              ],
              "query": [
                {
                  "description": "optional flags: renderedBody (provides body rendered in HTML)",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "of the issue the comment belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "the ID of the comment to request"
                }
              ]
            },
            "description": "Returns a single comment. "
          },
          "response": []
        },
        {
          "_postman_id": "2ac194c3-7ae5-458f-8d36-20e7153e5fe5",
          "name": "Update comment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/comment/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "comment",
                ":id"
              ],
              "query": [
                {
                  "description": "optional flags: renderedBody (provides body rendered in HTML)",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the comment belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "id of the comment to be updated"
                }
              ]
            },
            "description": "Updates an existing comment using its JSON representation. "
          },
          "response": []
        },
        {
          "_postman_id": "65932994-cef8-402a-bda9-6d49e323c521",
          "name": "Delete comment",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "comment",
                ":id"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the comment belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "id of the comment to be deleted"
                }
              ]
            },
            "description": "Deletes an existing comment . "
          },
          "response": []
        },
        {
          "_postman_id": "e9bbf0b7-7b6f-4830-9067-662d4fae13b8",
          "name": "Get edit issue meta",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/editmeta?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "editmeta"
              ],
              "query": [
                {
                  "description": "Allows retrieving edit metadata for the fields hidden on Edit screen. Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideScreenSecurity",
                  "value": "{{overrideScreenSecurity}}",
                  "disabled": true
                },
                {
                  "description": "Allows retrieving edit metadata for fields in non-editable status (jira.issue.editable flag set to false or missing). Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideEditableFlag",
                  "value": "{{overrideEditableFlag}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue."
                }
              ]
            },
            "description": "Returns the metadata for editing an issue.\n <p/>\n The fields returned by editmeta resource are the ones shown on the issue's Edit screen.\n Fields hidden from the screen will not be returned unless <code>overrideScreenSecurity</code> parameter is set to true.\n <p/>\n If an issue cannot be edited in Jira because of its workflow status (for example the issue is closed), then no fields will be returned,\n unless <code>overrideEditableFlag</code> is set to true. "
          },
          "response": []
        },
        {
          "_postman_id": "d7c10334-6c37-4c8b-a2b6-d5ffe50e2901",
          "name": "Send notification for issue",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"subject\":\"Duis eu justo eget augue iaculis fermentum.\",\"textBody\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\"htmlBody\":\"Lorem ipsum <strong>dolor</strong> sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\"to\":{\"reporter\":false,\"assignee\":false,\"watchers\":true,\"voters\":true,\"users\":[{\"name\":\"fred\",\"active\":false}],\"groups\":[{\"name\":\"notification-group\",\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/group?groupname=notification-group\"}]},\"restrict\":{\"groups\":[{\"name\":\"notification-group\",\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/group?groupname=notification-group\"}],\"permissions\":[{\"id\":\"10\",\"key\":\"BROWSE\"}]}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/notify",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "notify"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue that the notification is sent for."
                }
              ]
            },
            "description": "Creates an email notification for an issue and adds it to the mail queue.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <ul>\n     <li><em>Browse Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for the project that the issue is in.</li>\n     <li>If implemented, permission to view the issue granted by <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue-level security</a>.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "ae9949c0-4e26-46a5-8ca6-4e58d807b23b",
          "name": "Get issue property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "properties"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "the issue from which keys will be returned."
                }
              ]
            },
            "description": "Returns the keys of all properties for the issue identified by the key or by the id. "
          },
          "response": []
        },
        {
          "_postman_id": "8aac1780-d9ef-4c5e-b5ea-6fe82335711c",
          "name": "Get issue property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "the issue from which the property will be returned."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the property to return."
                }
              ]
            },
            "description": "Returns the value of the property with a given key from the issue identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the issue. "
          },
          "response": []
        },
        {
          "_postman_id": "36b368e4-0a15-440f-bd5d-2a1da3d474b9",
          "name": "Set issue property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "the issue on which the property will be set."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the issue's property. The maximum length of the key is 255 bytes."
                }
              ]
            },
            "description": "Sets the value of the specified issue's property.\n <p>\n You can use this resource to store a custom data against the issue identified by the key or by the id. The user\n who stores the data is required to have permissions to edit the issue.\n </p> "
          },
          "response": []
        },
        {
          "_postman_id": "afa170bc-34aa-4afa-a0c5-4608995d188a",
          "name": "Delete issue property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "the issue from which the property will be removed."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the property to remove."
                }
              ]
            },
            "description": "Removes the property from the issue identified by the key or by the id. Ths user removing the property is required\n to have permissions to edit the issue. "
          },
          "response": []
        },
        {
          "_postman_id": "711bb9a3-d7ba-46cf-8463-e061f55b5749",
          "name": "Get remote issue links",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink"
              ],
              "query": [
                {
                  "description": "ID of the remote issue link to be returned. If null (not provided) all remote links for the issue are returned.\n                     For more details on Remote Issue Links fields refer to\n                     https://developer.atlassian.com/display/JIRADEV/Fields+in+Remote+Issue+Links",
                  "key": "globalId",
                  "value": "{{globalId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to retrieve remote links for."
                }
              ]
            },
            "description": "Returns the remote issue links for the issue. This may be links to other Jira instances, web applications or web pages. "
          },
          "response": []
        },
        {
          "_postman_id": "dcf4ed4b-2281-48ab-bb70-75e6b24d00fd",
          "name": "Create or update remote issue link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"globalId\":\"system=http://www.mycompany.com/support&id=1\",\"application\":{\"type\":\"com.acme.tracker\",\"name\":\"My Acme Tracker\"},\"relationship\":\"causes\",\"object\":{\"url\":\"http://www.mycompany.com/support?id=1\",\"title\":\"TSTSUP-111\",\"summary\":\"Crazy customer support issue\",\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/ticket.png\",\"title\":\"Support Ticket\"},\"status\":{\"resolved\":true,\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/resolved.png\",\"title\":\"Case Closed\",\"link\":\"http://www.mycompany.com/support?id=1&details=closed\"}}}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to create/update the remote issue link for."
                }
              ]
            },
            "description": "Creates or updates a remote issue link from a JSON representation. If a <code>globalId</code> is provided and a remote issue link\n exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created. "
          },
          "response": []
        },
        {
          "_postman_id": "7ba3d4fe-cda7-490b-8787-c69736db5872",
          "name": "Delete remote issue link by global id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink"
              ],
              "query": [
                {
                  "description": "Global ID of a remote issue link to delete.",
                  "key": "globalId",
                  "value": "{{globalId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to delete a remote issue link for."
                }
              ]
            },
            "description": "Deletes the issue's remote link with the given global ID. "
          },
          "response": []
        },
        {
          "_postman_id": "94292aa5-3f75-4b50-a1f7-4e04ecc5c331",
          "name": "Get remote issue link by id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink",
                ":linkId"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to retrieve the remote issue links for."
                },
                {
                  "key": "linkId",
                  "value": "{{linkId}}",
                  "description": "ID of the remote issue link."
                }
              ]
            },
            "description": "Returns the remote issue link by the given ID. "
          },
          "response": []
        },
        {
          "_postman_id": "90dcb4ba-c34a-4a74-b2bb-edcd32bbc360",
          "name": "Update remote issue link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"globalId\":\"system=http://www.mycompany.com/support&id=1\",\"application\":{\"type\":\"com.acme.tracker\",\"name\":\"My Acme Tracker\"},\"relationship\":\"causes\",\"object\":{\"url\":\"http://www.mycompany.com/support?id=1\",\"title\":\"TSTSUP-111\",\"summary\":\"Crazy customer support issue\",\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/ticket.png\",\"title\":\"Support Ticket\"},\"status\":{\"resolved\":true,\"icon\":{\"url16x16\":\"http://www.mycompany.com/support/resolved.png\",\"title\":\"Case Closed\",\"link\":\"http://www.mycompany.com/support?id=1&details=closed\"}}}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink",
                ":linkId"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to update the remote issue link for."
                },
                {
                  "key": "linkId",
                  "value": "{{linkId}}"
                }
              ]
            },
            "description": "Updates a remote issue link from a JSON representation. Sets all fields without values provided to null. "
          },
          "response": []
        },
        {
          "_postman_id": "1436ef83-8962-4e1f-8eea-b119d976c19c",
          "name": "Delete remote issue link by id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "remotelink",
                ":linkId"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to delete a remote issue link for."
                },
                {
                  "key": "linkId",
                  "value": "{{linkId}}",
                  "description": "ID of a remote issue link to delete."
                }
              ]
            },
            "description": "Deletes the issue's remote link with the given ID. "
          },
          "response": []
        },
        {
          "_postman_id": "dcee752a-b9dd-4d8a-af07-205b6c01c4e4",
          "name": "Get transitions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/transitions?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "transitions"
              ],
              "query": [
                {
                  "key": "transitionId",
                  "value": "{{transitionId}}",
                  "disabled": true
                },
                {
                  "description": "Flag to skip evaluation of {@link RemoteOnlyCondition}. Can only be used by add-on users.",
                  "key": "skipRemoteOnlyCondition",
                  "value": "{{skipRemoteOnlyCondition}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to return transitions for."
                }
              ]
            },
            "description": "Returns a list of transitions available for this issue for the current user.\n <p/>\n Specify <code>expand=transitions.fields</code> parameter to retrieve the fields required for a transition together with their types.\n <p/>\n Fields metadata corresponds to the fields available in a transition screen for a particular transition.\n Fields hidden from the screen will not be returned in the metadata. "
          },
          "response": []
        },
        {
          "_postman_id": "69c6dffe-b8dd-4044-888b-a2b57642e481",
          "name": "Do transition",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"update\":{\"comment\":[{\"add\":{\"body\":\"Bug has been fixed.\"}}]},\"fields\":{\"assignee\":{\"name\":\"bob\"},\"resolution\":{\"name\":\"Fixed\"}},\"transition\":{\"id\":\"5\"},\"historyMetadata\":{\"type\":\"myplugin:type\",\"description\":\"text description\",\"descriptionKey\":\"plugin.changereason.i18.key\",\"activityDescription\":\"text description\",\"activityDescriptionKey\":\"plugin.activity.i18.key\",\"actor\":{\"id\":\"tony\",\"displayName\":\"Tony\",\"type\":\"mysystem-user\",\"avatarUrl\":\"http://mysystem/avatar/tony.jpg\",\"url\":\"http://mysystem/users/tony\"},\"generator\":{\"id\":\"mysystem-1\",\"type\":\"mysystem-application\"},\"cause\":{\"id\":\"myevent\",\"type\":\"mysystem-event\"},\"extraData\":{\"keyvalue\":\"extra data\",\"goes\":\"here\"}}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/transitions",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "transitions"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to transition."
                }
              ]
            },
            "description": "Performs the issue transition.\n While performing the transition you can modify other issue fields.\n <p/>\n The fields that can be set on transition, in either <code>fields</code> or <code>update</code> parameter can be determined\n using the <b>/rest/api/3/issue/{issueIdOrKey}/transitions?expand=transitions.fields</b> resource.\n If a field is not configured to appear on the transition screen, it will not be returned in the transition metadata. A field\n validation error will occur if such field is submitted in issue transition request. "
          },
          "response": []
        },
        {
          "_postman_id": "9b65e8df-37da-4565-b16a-ded7fc2bb471",
          "name": "Get votes",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/votes",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "votes"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to retrieve voting information for."
                }
              ]
            },
            "description": "Returns voting data for an issue - whether the issue was voted for, total number of votes and users who voted for the issue. "
          },
          "response": []
        },
        {
          "_postman_id": "67f18c2a-7270-48dc-b251-b99575dbc5b7",
          "name": "Add vote",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/votes",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "votes"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to vote for."
                }
              ]
            },
            "description": "Adds a vote on the issue for a current user. "
          },
          "response": []
        },
        {
          "_postman_id": "5834b141-5198-45ba-8e8d-5710b63a715c",
          "name": "Remove vote",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/votes",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "votes"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue that current user \"unvotes\"."
                }
              ]
            },
            "description": "Removes a current user's vote from an issue (aka \"unvote\"). "
          },
          "response": []
        },
        {
          "_postman_id": "5cdd4e0d-2a60-4abb-b3d9-669c06789df8",
          "name": "Get issue watchers",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/watchers",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "watchers"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to retrieve watchers for."
                }
              ]
            },
            "description": "Returns the list of watchers for the issue with the given key. "
          },
          "response": []
        },
        {
          "_postman_id": "8c1c9273-4414-4cfe-8f19-cce9265a294a",
          "name": "Add watcher",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "e2a16dd9-2ffb-4a4b-a9bd-bd1145a020ee"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/watchers",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "watchers"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to be updated."
                }
              ]
            },
            "description": "Adds the user to the issue's watcher list. "
          },
          "response": []
        },
        {
          "_postman_id": "1bd41a34-9dac-465e-8263-7340904ca095",
          "name": "Remove watcher",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/watchers?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "watchers"
              ],
              "query": [
                {
                  "description": "Name of the user to be removed from the watcher list. Must be not null. Cannot be used with accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "Account ID of the user to be removed from the watcher list. Must be not null. Cannot be used with username.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "ID or key of the issue to be updated."
                }
              ]
            },
            "description": "Removes the user from the issue's watcher list. "
          },
          "response": []
        },
        {
          "_postman_id": "2ee9520f-6ec1-4dae-87e3-4a4056c2e6d5",
          "name": "Get issue worklog",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog"
              ],
              "query": [
                {
                  "description": "Page offset, ie. index of the first item returned in the page of results. Base index: 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "Maximum number of items to return per page. See Pagination section for more details. Max value: 1 048 576.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Optional comma separated list of parameters to expand: properties (provides worklog properties).",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "The worklogs belongs to"
                }
              ]
            },
            "description": "Returns all work logs for an issue. The response is <a href=\"#pagination\">paginated</a><br/>\n <strong>Note:</strong> Work logs won't be returned if the Log work field is hidden for the project. "
          },
          "response": []
        },
        {
          "_postman_id": "63c69058-32ad-47ee-a352-b49621a4a385",
          "name": "Add worklog",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-10-21T23:41:21.131+0000\",\"timeSpentSeconds\":12000}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog"
              ],
              "query": [
                {
                  "description": "(optional) whether or not users should be notified by email, true by default",
                  "key": "notifyUsers",
                  "value": "{{notifyUsers}}",
                  "disabled": true
                },
                {
                  "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are\n                             \n                             \"new\" - sets the estimate to a specific value\n                             \"leave\"- leaves the estimate as is\n                             \"manual\" - specify a specific amount to increase remaining estimate by\n                             \"auto\"- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog ",
                  "key": "adjustEstimate",
                  "value": "{{adjustEstimate}}",
                  "disabled": true
                },
                {
                  "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field. e.g. \"2d\"",
                  "key": "newEstimate",
                  "value": "{{newEstimate}}",
                  "disabled": true
                },
                {
                  "description": "(required when \"manual\" is selected for adjustEstimate) the amount to reduce the remaining estimate by e.g. \"2d\"",
                  "key": "reduceBy",
                  "value": "{{reduceBy}}",
                  "disabled": true
                },
                {
                  "description": "optional comma separated list of parameters to expand: properties (provides worklog properties).",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "Updates the issue even if the issue is not editable due to being in a status with jira.issue.editable set to false or missing. Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideEditableFlag",
                  "value": "{{overrideEditableFlag}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the worklog will be added to"
                }
              ]
            },
            "description": "Adds a new worklog entry to an issue. "
          },
          "response": []
        },
        {
          "_postman_id": "c9449158-02c0-468a-a558-c4dd79814174",
          "name": "Get worklog",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":id"
              ],
              "query": [
                {
                  "description": "optional comma separated list of parameters to expand: properties (provides worklog properties).",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the worklog belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "a String containing the work log id"
                }
              ]
            },
            "description": "Returns a specific worklog. <br/>\n <strong>Note:</strong> The work log won't be returned if the Log work field is hidden for the project. "
          },
          "response": []
        },
        {
          "_postman_id": "0053998b-1482-418f-84f5-b2fa440d4c80",
          "name": "Update worklog",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2018-10-21T23:41:21.131+0000\",\"timeSpentSeconds\":12000}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":id"
              ],
              "query": [
                {
                  "description": "(optional) whether or not users should be notified by email, true by default",
                  "key": "notifyUsers",
                  "value": "{{notifyUsers}}",
                  "disabled": true
                },
                {
                  "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are\n                             \n                             \"new\" - sets the estimate to a specific value\n                             \"leave\"- leaves the estimate as is\n                             \"auto\"- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog ",
                  "key": "adjustEstimate",
                  "value": "{{adjustEstimate}}",
                  "disabled": true
                },
                {
                  "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field.",
                  "key": "newEstimate",
                  "value": "{{newEstimate}}",
                  "disabled": true
                },
                {
                  "description": "optional comma separated list of parameters to expand: properties (provides worklog properties).",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "Updates the issue even if the issue is not editable due to being in a status with jira.issue.editable set to false or missing. Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideEditableFlag",
                  "value": "{{overrideEditableFlag}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the worklog belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "id of the worklog to be updated"
                }
              ]
            },
            "description": "Updates an existing worklog entry.\n <p>Note that:</p>\n <ul>\n <li>Fields possible for editing are: comment, visibility, started, timeSpent and timeSpentSeconds.</li>\n <li>Either timeSpent or timeSpentSeconds can be set.</li>\n <li>Fields which are not set will not be updated.</li>\n <li>For a request to be valid, it has to have at least one field change.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "43b1566d-1f91-42b8-904c-65c46c299d18",
          "name": "Delete worklog",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":id"
              ],
              "query": [
                {
                  "description": "(optional) whether or not users should be notified by email, true by default",
                  "key": "notifyUsers",
                  "value": "{{notifyUsers}}",
                  "disabled": true
                },
                {
                  "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are\n                             \n                             \"new\" - sets the estimate to a specific value\n                             \"leave\"- leaves the estimate as is\n                             \"manual\" - specify a specific amount to increase remaining estimate by\n                             \"auto\"- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog ",
                  "key": "adjustEstimate",
                  "value": "{{adjustEstimate}}",
                  "disabled": true
                },
                {
                  "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field. e.g. \"2d\"",
                  "key": "newEstimate",
                  "value": "{{newEstimate}}",
                  "disabled": true
                },
                {
                  "description": "(required when \"manual\" is selected for adjustEstimate) the amount to increase the remaining estimate by e.g. \"2d\"",
                  "key": "increaseBy",
                  "value": "{{increaseBy}}",
                  "disabled": true
                },
                {
                  "description": "Updates the issue even if the issue is not editable due to being in a status with jira.issue.editable set to false or missing. Only connect add-on users with admin scope permission are allowed to use this flag.",
                  "key": "overrideEditableFlag",
                  "value": "{{overrideEditableFlag}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}",
                  "description": "a string containing the issue id or key the worklog belongs to"
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "id of the worklog to be deleted"
                }
              ]
            },
            "description": "Deletes an existing worklog entry. "
          },
          "response": []
        },
        {
          "_postman_id": "8699ba6c-23c3-4a08-9384-15c9443afecf",
          "name": "Get worklog property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":worklogId",
                "properties"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}"
                },
                {
                  "key": "worklogId",
                  "value": "{{worklogId}}",
                  "description": "the worklog from which keys will be returned."
                }
              ]
            },
            "description": "Returns the keys of all properties for the worklog identified by the key or by the id. "
          },
          "response": []
        },
        {
          "_postman_id": "24bed5e0-67f7-421b-8971-8f3c4baa4795",
          "name": "Get worklog property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":worklogId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}"
                },
                {
                  "key": "worklogId",
                  "value": "{{worklogId}}",
                  "description": "the worklog from which the property will be returned."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the property to return."
                }
              ]
            },
            "description": "Returns the value of the property with a given key from the worklog identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the worklog. "
          },
          "response": []
        },
        {
          "_postman_id": "558af540-baea-4b59-be46-53521473a3c2",
          "name": "Set worklog property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":worklogId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}"
                },
                {
                  "key": "worklogId",
                  "value": "{{worklogId}}",
                  "description": "the worklog on which the property will be set."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the worklog's property. The maximum length of the key is 255 bytes."
                }
              ]
            },
            "description": "Sets the value of the specified worklog's property.\n <p>\n You can use this resource to store a custom data against the worklog identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the worklog.\n </p> "
          },
          "response": []
        },
        {
          "_postman_id": "450e6c9f-8aa5-4771-bc5e-3e34c39de045",
          "name": "Delete worklog property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issue",
                ":issueIdOrKey",
                "worklog",
                ":worklogId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueIdOrKey",
                  "value": "{{issueIdOrKey}}"
                },
                {
                  "key": "worklogId",
                  "value": "{{worklogId}}",
                  "description": "the worklog from which the property will be removed."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "the key of the property to remove."
                }
              ]
            },
            "description": "Removes the property from the worklog identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the worklog. "
          },
          "response": []
        },
        {
          "_postman_id": "63f92757-6f79-41cb-b5e4-6339fb9a1e38",
          "name": "Create issue link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"type\":{\"name\":\"Duplicate\"},\"inwardIssue\":{\"key\":\"HSP-1\"},\"outwardIssue\":{\"key\":\"MKY-1\"},\"comment\":{\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Linked related issue!\"}]}]},\"visibility\":{\"type\":\"group\",\"value\":\"jira-software-users\"}}}"
            },
            "url": "https://{{host}}/rest/api/3/issueLink",
            "description": "Creates a link between two issues. Use this operation to indicate a relationship between two issues and optionally\n add a comment to the from (outward) issue. To use this resource the site must have\n <a href=\"https://confluence.atlassian.com/x/yoXKM\">Issue Linking</a> enabled.\n <br><br>\n This resource returns nothing on the creation of an issue link. To obtain the ID of the issue link, use\n <code>https://your-domain.atlassian.net/rest/api/3/issue/[linked issue key]?fields=issuelinks</code>.\n <br><br>\n If the link request duplicates an existing link, the response indicates that the issue link was created. If the\n request included a comment, the comment is added.\n <br><br>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse project</em> and <em>Link issues</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.\n <em>Browse project</em> permission is required for all the projects containing the issues to be linked. <em>Link issues</em>\n permission is required on the project containing the from (outward) issue.\n Also, when the visibility of a comment is restricted to a role or group the user creating the link must be\n a member of the role or group. "
          },
          "response": []
        },
        {
          "_postman_id": "e975120a-8b35-4adc-b656-ba0329ceb597",
          "name": "Get issue link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issueLink/:linkId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issueLink",
                ":linkId"
              ],
              "variable": [
                {
                  "key": "linkId",
                  "value": "{{linkId}}",
                  "description": "The ID of the issue link."
                }
              ]
            },
            "description": "Returns an issue link.\n <br><br>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse project</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for all the projects\n containing the linked issues. "
          },
          "response": []
        },
        {
          "_postman_id": "da04267a-b1ba-4f9e-be61-03b542c3a2a2",
          "name": "Delete issue link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issueLink/:linkId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issueLink",
                ":linkId"
              ],
              "variable": [
                {
                  "key": "linkId",
                  "value": "{{linkId}}",
                  "description": "The ID of the issue link."
                }
              ]
            },
            "description": "Deletes an issue link.\n <br><br>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse project</em> and <em>Link issues</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.\n <em>Browse project</em> permission is required for all the projects containing the issues in the link. <em>Link issues</em>\n permission is required on at least one of the projects containing issues in the link. "
          },
          "response": []
        },
        {
          "_postman_id": "878c20ed-1be1-45bb-9be2-1d8ef79bb8dd",
          "name": "Get issue link types",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/issueLinkType",
            "description": "Returns a list of all issue link types.\n <p>\n To use this operation, the site must have <a href=\"https://confluence.atlassian.com/x/yoXKM\">issue linking</a> enabled.\n <p>\n <b></a><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. Users with permission\n to access Jira can call this method, but an empty list is returned. "
          },
          "response": []
        },
        {
          "_postman_id": "8faf0c32-dcee-4a40-ac9c-18ff3d323002",
          "name": "Create issue link type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\"}"
            },
            "url": "https://{{host}}/rest/api/3/issueLinkType",
            "description": "Creates an issue link type. Use this operation to create descriptions of the reasons why issues are linked. The\n issue link type consists of a name and descriptions for a link's inward and outward relationships.\n <p>\n To use this operation, the site must have <a href=\"https://confluence.atlassian.com/x/yoXKM\">issue linking</a> enabled.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "4a97f3f6-2102-4032-b2d4-244529a593ad",
          "name": "Get issue link type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issueLinkType/:issueLinkTypeId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issueLinkType",
                ":issueLinkTypeId"
              ],
              "variable": [
                {
                  "key": "issueLinkTypeId",
                  "value": "{{issueLinkTypeId}}",
                  "description": "The ID of the issue link type."
                }
              ]
            },
            "description": "Returns an issue link type.\n <p>\n To use this operation, the site must have <a href=\"https://confluence.atlassian.com/x/yoXKM\">issue linking</a> enabled.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "211bfebd-bfa8-4754-9c90-a2f170b5579a",
          "name": "Update issue link type",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Duplicate\",\"inward\":\"Duplicated by\",\"outward\":\"Duplicates\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issueLinkType/:issueLinkTypeId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issueLinkType",
                ":issueLinkTypeId"
              ],
              "variable": [
                {
                  "key": "issueLinkTypeId",
                  "value": "{{issueLinkTypeId}}",
                  "description": "The ID of the issue link type."
                }
              ]
            },
            "description": "Updates an issue link type.\n <p>\n To use this operation, the site must have <a href=\"https://confluence.atlassian.com/x/yoXKM\">issue linking</a> enabled.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "133bdba5-8c98-4306-8e30-86bd67a7e53d",
          "name": "Delete issue link type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issueLinkType/:issueLinkTypeId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issueLinkType",
                ":issueLinkTypeId"
              ],
              "variable": [
                {
                  "key": "issueLinkTypeId",
                  "value": "{{issueLinkTypeId}}",
                  "description": "The ID of the issue link type."
                }
              ]
            },
            "description": "Deletes an issue link type.\n <p>\n To use this operation, the site must have <a href=\"https://confluence.atlassian.com/x/yoXKM\">issue linking</a> enabled.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "e378039c-aa63-4495-b6aa-99f10affbc8b",
          "name": "Get issue security schemes",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/issuesecurityschemes",
            "description": "Returns all <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue security schemes</a>.\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission>/a>. "
          },
          "response": []
        },
        {
          "_postman_id": "b1d95e3f-6970-4f2f-bc7f-f0d405fef009",
          "name": "Get issue security scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuesecurityschemes/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuesecurityschemes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue security scheme. Use the Get issue security schemes operation to get a list of issue security scheme IDs."
                }
              ]
            },
            "description": "Returns an issue security scheme along with its security levels.\n\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:\n\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission>/a></li>\n     <li><em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> for a project that uses the requested issue security scheme</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "4c4f1284-01bf-4c9d-9e17-059ac4719692",
          "name": "Get all issue types for user",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/issuetype",
            "description": "Returns all issue types.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira,\n however, only issue types that are visible to the user are returned. "
          },
          "response": []
        },
        {
          "_postman_id": "04da8785-8bf0-447c-8b4f-66d2ff3e58d0",
          "name": "Create issue type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"name\",\"description\":\"description\",\"type\":\"standard\"}"
            },
            "url": "https://{{host}}/rest/api/3/issuetype",
            "description": "Creates an issue type and adds it to the default issue type scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "a7c6e2fd-c897-4917-a60a-7ed1ea36733f",
          "name": "Get issue type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Returns an issue type.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n to get the details of any issue type.</li>\n <li><em>Browse projects</em> <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> to get the\n details of any issue type associated with the projects the user has permission to browse.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "1bd57b35-9d36-4669-a6b9-8c3cb526d93b",
          "name": "Update issue type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"name\",\"description\":\"description\",\"avatarId\":1}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Updates the issue type.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "edbc9a9e-3677-49b7-af1d-4bb2a2b4ac51",
          "name": "Delete issue type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":id"
              ],
              "query": [
                {
                  "description": "The ID of the replacement issue type.",
                  "key": "alternativeIssueTypeId",
                  "value": "{{alternativeIssueTypeId}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Deletes the issue type. If the issue type is in use, all uses are updated with the alternative issue type\n (<code>alternativeIssueTypeId</code>). A list of alternative issue types can be obtained from the\n <a href=\"#api-api-3-issuetype-id-alternatives-get\">\n Get alternative issue types</a> resource.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "0a65c96e-09f3-4206-831f-697d210d77c2",
          "name": "Get alternative issue types",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:id/alternatives",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":id",
                "alternatives"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Returns a list of issue types that can be used to replace the issue type. The alternative issue types are those\n assigned to the same workflow scheme, field configuration scheme, and screen scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "103065a0-47d9-4c3c-ac3a-538219989f5c",
          "name": "Create issue type avatar",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:id/avatar2?size={{size}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":id",
                "avatar2"
              ],
              "query": [
                {
                  "description": "The X coordinate of the top-left corner of the crop region.",
                  "key": "x",
                  "value": "{{x}}",
                  "disabled": true
                },
                {
                  "description": "The Y coordinate of the top-left corner of the crop region.",
                  "key": "y",
                  "value": "{{y}}",
                  "disabled": true
                },
                {
                  "description": "The length of each side of the crop region.",
                  "key": "size",
                  "value": "{{size}}"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Creates an avatar for the issue type.\n <p>\n Specify the avatar's local file location as binary data in the body of the request. Also, include the following headers:\n <ul>\n <li><code>X-Atlassian-Token: no-check</code></li>\n <li><code>Content-Type: image/<em>image type</em></code> Valid image types are JPEG, GIF, or PNG.</li>\n </ul>\n <p>\n For example:\n\n <code>curl --request POST \\\n --user email@example.com:&lt;api_token&gt; \\\n --header 'X-Atlassian-Token: no-check' \\\n --header 'Content-Type: image/&lt; image_type&gt;' \\\n --data-binary \"&lt;@/path/to/file/with/your/avatar&gt;\" \\\n --url 'https://your-domain.atlassian.net/rest/api/3/issuetype/{issueTypeId}'This</code>\n <p>\n The avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of\n the image. The length of the square's sides is set to the smaller of the height or width of the image.\n <p>\n The cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.\n <p>\n After creating the avatar, use <a href=\"#api-api-3-issuetype-id-put\">\n Update issue type</a> to set it as the issue type's active avatar.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "3039da7c-2a99-4f28-a54a-0424185e6638",
          "name": "Get issue type property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:issueTypeId/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":issueTypeId",
                "properties"
              ],
              "variable": [
                {
                  "key": "issueTypeId",
                  "value": "{{issueTypeId}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Returns all the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">issue type property</a>\n keys of the issue type.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n     to get the property keys of any issue type.</li>\n     <li><em>Browse projects</em> <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> to get the\n     property keys of any issue types associated with the projects the user has permission to browse.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "24400905-4c2a-480f-819b-84f414ebf105",
          "name": "Get issue type property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":issueTypeId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueTypeId",
                  "value": "{{issueTypeId}}",
                  "description": "The ID of the issue type."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property. Use\n                    Get issue type property keys\n                    to get a list of all issue type property keys."
                }
              ]
            },
            "description": "Returns the key and value of the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">issue type property</a>.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n     to get the details of any issue type.</li>\n     <li><em>Browse projects</em> <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> to get the\n     details of any issue types associated with the projects the user has permission to browse.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "69db531a-66ef-41f0-af04-90db781121b9",
          "name": "Set issue type property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"string\":\"string-value\",\"number\":5}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":issueTypeId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueTypeId",
                  "value": "{{issueTypeId}}",
                  "description": "The ID of the issue type."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the issue type property. The maximum length of the key is 255 bytes."
                }
              ]
            },
            "description": "Creates or updates the value of the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">issue type property</a>.\n Use this resource to store and update data against an issue type.\n\n The value of the request body must be a <a href=\"http://tools.ietf.org/html/rfc4627\">valid</a>, non-empty JSON\n blob. The maximum length of the property value is 32768 bytes.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "41b1dbd6-cd6f-405b-8487-2810aeac45d7",
          "name": "Delete issue type property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "issuetype",
                ":issueTypeId",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "issueTypeId",
                  "value": "{{issueTypeId}}",
                  "description": "The ID of the issue type."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the property. Use\n                     Get issue type property keys\n                     to get a list of all issue type property keys."
                }
              ]
            },
            "description": "Deletes the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">issue type property</a>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "0c051b4f-9df6-4741-afa7-0987e32b3145",
          "name": "Get field reference data",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/jql/autocompletedata",
            "description": "Returns reference data for JQL searches. This is a downloadable version of the documentation provided in\n <a href=\"https://confluence.atlassian.com/x/gwORLQ\">Advanced searching - fields reference</a> and\n <a href=\"https://confluence.atlassian.com/x/hgORLQ\">Advanced searching - functions reference</a>, along with a\n list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the\n validation of queries built in a custom query builder.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "b1d4f11a-6047-430a-89ac-d058a84cd816",
          "name": "Get field auto complete suggestions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/jql/autocompletedata/suggestions?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "jql",
                "autocompletedata",
                "suggestions"
              ],
              "query": [
                {
                  "description": "The name of the field.",
                  "key": "fieldName",
                  "value": "{{fieldName}}",
                  "disabled": true
                },
                {
                  "description": "The partial field item name entered by the user.",
                  "key": "fieldValue",
                  "value": "{{fieldValue}}",
                  "disabled": true
                },
                {
                  "description": "The name of the  CHANGED operator predicate for which the suggestions are generated. The valid predicate\n                       operators are by, from, and to.",
                  "key": "predicateName",
                  "value": "{{predicateName}}",
                  "disabled": true
                },
                {
                  "description": "The partial predicate item name entered by the user.",
                  "key": "predicateValue",
                  "value": "{{predicateValue}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the JQL search auto complete suggestions for a field.\n <p>\n Suggestions can be obtained by providing:\n <ul>\n     <li><code>fieldName</code> to get a list of all values for the field.</li>\n     <li><code>fieldName</code> and <code>fieldValue</code> to get a list of values containing the text in\n     <code>fieldValue</code>.</li>\n     <li><code>fieldName</code> and <code>predicateName</code> to get a list of all predicate values for the field.</li>\n     <li><code>fieldName</code>, <code>predicateName</code>, and <code>predicateValue</code> to get a list of\n     predicate values containing the text in <code>predicateValue</code>.</li>\n </ul>\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "a80240b6-3ec8-4eaf-a8f8-a97355df35e8",
          "name": "Get my permissions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": ""
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/mypermissions?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "mypermissions"
              ],
              "query": [
                {
                  "description": "\nThe key of project. Ignored if projectId is provided.",
                  "key": "projectKey",
                  "value": "{{projectKey}}",
                  "disabled": true
                },
                {
                  "description": "The ID of project.",
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                },
                {
                  "description": "\nThe key of the issue. Ignored if issueId is provided.",
                  "key": "issueKey",
                  "value": "{{issueKey}}",
                  "disabled": true
                },
                {
                  "description": "The ID of the issue.",
                  "key": "issueId",
                  "value": "{{issueId}}",
                  "disabled": true
                },
                {
                  "description": "A comma separated list of permission keys. \n                      Omitting this parameter is deprecated. To get\n                      the list of available permissions, use Get all\n                      permissions. Note that deprecated keys cannot be used. Deprecated keys are not returned\n                      by Get all permissions but are returned by\n                      this operation if permissions is omitted.",
                  "key": "permissions",
                  "value": "{{permissions}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of permissions indicating which permissions the user has. Details of the user's permissions can be\n obtained in a global, project, or issue context.\n <p>\n The user is reported as having a project permission:\n  <ul>\n       <li>in the global context, if the user has the project permission in any project.</li>\n       <li>for a project, where the project permission is determined using issue data, if the user meets the permission's\n       criteria for any issue in the project. Otherwise, if the user has the project permission in the project.</li>\n       <li>for an issue, where a project permission is determined using issue data, if the user has the permission\n       in the issue. Otherwise, if the user has the project permission in the project containing the issue.</li>\n  </ul>\n <p>\n This means that users may be shown as having an issue permission (such as EDIT_ISSUE) in the\n global context or a project context but may not have the permission for any or all issues. For example,\n if Reporters have the EDIT_ISSUE permission a user would be shown as having this permission in the global\n context or the context of a project, because any user can be a reporter. However, if they are not the\n user who reported the issue queried they would not have EDIT_ISSUE permission for that issue.\n <p>\n Global permissions are unaffected by context.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "fc48e60a-80c5-4534-b655-760dd7a82a47",
          "name": "Get preference",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain"
              },
              {
                "key": "Content-Type",
                "value": "application/json, text/plain"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/mypreferences?key={{key}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "mypreferences"
              ],
              "query": [
                {
                  "description": "The key of the preference.",
                  "key": "key",
                  "value": "{{key}}"
                }
              ]
            },
            "description": "Returns the value of a preference of the user.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "ffb45f3c-acdc-4422-945a-83bb8547fb6a",
          "name": "Set preference",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain"
              },
              {
                "key": "Content-Type",
                "value": "application/json, text/plain"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/mypreferences?key={{key}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "mypreferences"
              ],
              "query": [
                {
                  "description": "The key of the preference. Maximum length is 255 characters.",
                  "key": "key",
                  "value": "{{key}}"
                }
              ]
            },
            "description": "Creates a preference for the user or updates its value. An arbitrary preference can be created with the value containing\n up to 255 characters. In addition, the following keys define system preferences that can be set or created:\n  <ul>\n       <li><em>user.notifications.mimetype</em> The mime type used in notifications sent to the user. Defaults to\n       <code>html</code>.</li>\n       <li><em>user.notify.own.changes</em> Indicates whether the user gets notified of their own changes. Defaults\n       to <code>false</code>.</li>\n       <li><em>jira.user.locale</em> The locale of the user. By default, not set: the user takes the instance locale.\n       See also, <a href=\"#api-api-3-mypreferences-locale-put\">Set locale</a>.</li>\n       <li><em>jira.user.timezone</em> The time zone of the user. By default, not set, the user takes the instance\n       time zone.</li>\n       <li><em>user.default.share.private</em> Indicates whether new <a href=\"https://confluence.atlassian.com/x/eQiiLQ\">\n       filters</a> are set to private. Defaults to <code>true</code>.</li>\n       <li><em>user.keyboard.shortcuts.disabled</em> Indicates whether keyboard shortcuts are disabled. Defaults\n       to <code>false</code>.</li>\n       <li><em>user.autowatch.disabled</em> Indicates whether the user automatically watches issues they create or\n       add a comment to. By default, not set: the user takes the instance autowatch setting.</li>\n  </ul>\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "f6d91139-d1e3-46fe-ab3d-46f7b895ab40",
          "name": "Delete preference",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain"
              },
              {
                "key": "Content-Type",
                "value": "application/json, text/plain"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/mypreferences?key={{key}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "mypreferences"
              ],
              "query": [
                {
                  "description": "The key of the preference.",
                  "key": "key",
                  "value": "{{key}}"
                }
              ]
            },
            "description": "Deletes a preference of the user, which restores the default value of system defined settings.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "1a7b9ecb-06f2-4b39-b09b-35ecff8ce13a",
          "name": "Get locale",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json, text/plain"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/mypreferences/locale",
            "description": "Returns the locale for the current user.\n <p>\n If the user has no language preference set (which is the default setting) or this resource is accessed anonymous,\n the browser locale detected by Jira is returned. Jira detects the browser locale using the <em>Accept-Language</em>\n header in the request. However, if this doesn't match a locale available Jira, the site default locale is returned.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "037d16aa-eded-47ea-8487-143c44dabfa1",
          "name": "Set locale",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"locale\":\"en_US\"}"
            },
            "url": "https://{{host}}/rest/api/3/mypreferences/locale",
            "description": "Sets the locale of the current user. The requested locale must be one supported by the instance of Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "44ab4733-9e37-4fd5-8b58-e6adf7ab493f",
          "name": "Delete locale",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain"
              },
              {
                "key": "Content-Type",
                "value": "application/json, text/plain"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/mypreferences/locale",
            "description": "Deletes the locale of the current user, which restores the default setting.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "6e9fc0bc-dc21-4d9a-805d-0ecb80142c1b",
          "name": "Get current user",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/myself?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "myself"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about user in the response. This parameter accepts multiple values separated by a comma:\n \n   groups Returns all groups, including nested groups, the user belongs to.\n   applicationRoles Returns the application roles the user is assigned to.\n ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns details for the authenticated user.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "8cd7379c-8b6f-4fbe-a351-26230c257ea8",
          "name": "Get notification schemes paginated",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/notificationscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "notificationscheme"
              ],
              "query": [
                {
                  "description": "The index of the first item to return in a page of results (page offset). The base index is 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of items to return per page. Max is 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                   \n                      all Returns all expandable information.\n                      field Returns information about any custom fields assigned to receive an event.\n                      group Returns information about any groups assigned to receive an event.\n                      notificationSchemeEvents Returns a list of event associations. This list is returned for all expandable information.\n                      projectRole Returns information about any project roles assigned to receive an event.\n                      user Returns information about any users assigned to receive an event.\n                   ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#pagination\">paginated</a>\n list of <a href=\"https://confluence.atlassian.com/x/8YdKLg\">notification schemes</a> in order by display name.\n\n <h3 id=\"about-notification-schemes\">About notification schemes</h3>\n\n <p>\n A notification scheme is a list of events and recipients who will receive notifications for those events. The\n list is contained within the <code>notificationSchemeEvents</code> object and contains pairs of <code>events</code>\n and <code>notifications</code>:\n\n  <ul>\n      <li><code>event</code> Identifies the type of event. The events can be\n      <a href=\"https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents\">Jira system events</a>\n      or <a href=\"https://confluence.atlassian.com/x/AIlKLg\">custom events</a>.</li>\n      <li><code>notifications</code> Identifies the\n      <a href=\"https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-recipientsRecipients\">recipients</a>\n      of notifications for each event. Recipients can be any of the following types:</li>\n      <ul>\n          <li><code>CurrentAssignee</code></li>\n          <li><code>Reporter</code></li>\n          <li><code>CurrentUser</code></li>\n          <li><code>ProjectLead</code></li>\n          <li><code>ComponentLead</code></li>\n          <li><code>User</code> (the <code>parameter</code> is the user key)</li>\n          <li><code>Group</code> (the <code>parameter</code> is the group name)</li>\n          <li><code>ProjectRole</code> (the <code>parameter</code> is the project role ID)</li>\n          <li><code>EmailAddress</code></li>\n          <li><code>AllWatchers</code></li>\n          <li><code>UserCustomField</code> (the <code>parameter</code> is the ID of the custom field)</li>\n          <li><code>GroupCustomField</code>(the <code>parameter</code> is the ID of the custom field)</li>\n      </ul>\n </ul>\n\n <p><em>Note that you should allow for events without recipients to appear in responses.</em>\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the\n requesting user must have permission to administer at least one project associated with a notification scheme for\n it to be returned. "
          },
          "response": []
        },
        {
          "_postman_id": "232e8d4a-fc57-4443-a888-9fa33d42f533",
          "name": "Get notification scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/notificationscheme/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "notificationscheme",
                ":id"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                              \n                                 all Returns all expandable information.\n                                 field Returns information about any custom fields assigned to receive an event.\n                                 group Returns information about any groups assigned to receive an event.\n                                 notificationSchemeEvents Returns a list of event associations. This list is returned for all expandable information.\n                                 projectRole Returns information about any project roles assigned to receive an event.\n                                 user Returns information about any users assigned to receive an event.\n                              ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the notification scheme. Use\n                              Get notification schemes paginated\n                              to get a list of notification scheme IDs."
                }
              ]
            },
            "description": "Returns a <a href=\"https://confluence.atlassian.com/x/8YdKLg\">notification scheme</a>, including the list of\n events and the recipients who will receive notifications for those events.\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None, however the\n requesting user must have permission to administer at least one project associated with the requested\n notification scheme. "
          },
          "response": []
        },
        {
          "_postman_id": "14444245-b09e-417b-98f9-0b0daf6b70da",
          "name": "Get all permissions",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/permissions",
            "description": "Returns all permissions, including:\n <ul>\n     <li>global permissions.</li>\n     <li>project permissions.</li>\n     <li>global permissions added by plugins.</li>\n </ul>\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "58257aaa-5757-4dab-8b3a-cd80073531e0",
          "name": "Get permitted projects",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": ""
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/permissions/project",
            "description": "Returns all the projects where the user is granted a list of project permissions.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "8f3f6fa8-b1e3-4b37-866b-f65c5ee4908f",
          "name": "Get all permission schemes",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are included when you specify any value:\n               \n                  all Returns all expandable information.\n                  field Returns information about the custom field granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  permissions Returns all permission grants for each permission scheme.\n                  projectRole Returns information about the project role granted the permission.\n                  user Returns information about the user who is granted the permission.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all permission schemes.\n\n <h3 id=\"about-permission-schemes\">About permission schemes and grants</h3>\n\n A permission scheme is a collection of permission grants. A permission grant consists of a <code>holder</code>\n and a <code>permission</code>.\n\n <h4 id=\"holder-object\">Holder</h4>\n\n The <code>holder</code> object contains information about the user or group being granted the permission. For\n example, the <em>Administer projects</em> permission is granted to a group named <em>Teams in space\n administrators</em>. In this case, the type is <code>\"type\": \"group\"</code>, and the parameter is the group name,\n <code>\"parameter\": \"Teams in space administrators\"</code>.\n\n The <code>holder</code> object is defined by the following properties:\n\n <ul>\n     <li><code>type</code> Identifies the user or group (see the list of types below).</li>\n     <li><code>parameter</code> The value of this property depends on the <code>type</code>. For example, if the\n     <code>type</code> is a group, then you need to specify the group name.</li>\n </ul>\n\n The following <code>types</code> are available. The expected values for the <code>parameter</code> are given\n in parenthesis (some <code>types</code> may not have a <code>parameter</code>):\n\n <ul>\n     <li><code>anyone</code> Grant for anonymous users.</li>\n     <li><code>applicationRole</code> Grant for users with access to the specified application (application name). See\n     <a href=\"https://confluence.atlassian.com/cloud/manage-application-access-744721629.html\">Manage application access</a>\n     for more information.</li>\n     <li><code>assignee</code> Grant for the user currently assigned to an issue.</li>\n     <li><code>group</code> Grant for the specified group (group name).</li>\n     <li><code>groupCustomField</code> Grant for a user in the group selected in the specified custom field (custom field ID).</li>\n     <li><code>projectLead</code> Grant for a project lead.</li>\n     <li><code>projectRole</code> Grant for the specified project role (project role ID).</li>\n     <li><code>reporter</code> Grant for the user who reported the issue.</li>\n     <li><code>sd.customer.portal.only</code> Jira Service Desk only. Grants customers permission to access the customer portal but not Jira.\n     See <a href=\"https://confluence.atlassian.com/x/24dKLg\">Customizing Jira Service Desk permissions</a>\n     for more information.</li>\n     <li><code>user</code> Grant for the specified user (user ID - historically this was the userkey but that is deprecated and the account ID should be used).</li>\n     <li><code>userCustomField</code> Grant for a user selected in the specified custom field (custom field ID).</li>\n </ul>\n\n <h4 id=\"built-in-permissions\">Permissions</h4>\n\n <p>\n     The <a href=\"https://confluence.atlassian.com/x/yodKLg\">built-in Jira permissions</a> are listed below. Apps\n     can also define custom permissions. See the\n     <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/\">project permission</a> and\n     <a href=\"https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/\">global permission</a>\n     module documentation for more information.\n </p>\n\n <p><b>Project permissions</b></p>\n\n <ul>\n     <li><code>ADMINISTER_PROJECTS</code></li>\n     <li><code>BROWSE_PROJECTS</code></li>\n     <li><code>MANAGE_SPRINTS_PERMISSION</code> (Jira Software only)</li>\n     <li><code>SERVICEDESK_AGENT</code> (Jira Service Desk only)</li>\n     <li><code>VIEW_DEV_TOOLS</code> (Jira Software only)</li>\n     <li><code>VIEW_READONLY_WORKFLOW</code></li>\n </ul>\n\n <p><b>Issue permissions</b></p>\n\n <ul>\n     <li><code>ASSIGNABLE_USER</code></li>\n     <li><code>ASSIGN_ISSUES</code></li>\n     <li><code>CLOSE_ISSUES</code></li>\n     <li><code>CREATE_ISSUES</code></li>\n     <li><code>DELETE_ISSUES</code></li>\n     <li><code>EDIT_ISSUES</code></li>\n     <li><code>LINK_ISSUES</code></li>\n     <li><code>MODIFY_REPORTER</code></li>\n     <li><code>MOVE_ISSUES</code></li>\n     <li><code>RESOLVE_ISSUES</code></li>\n     <li><code>SCHEDULE_ISSUES</code></li>\n     <li><code>SET_ISSUE_SECURITY</code></li>\n     <li><code>TRANSITION_ISSUES</code></li>\n </ul>\n\n <p><b>Voters and watchers permissions</b></p>\n\n <ul>\n     <li><code>MANAGE_WATCHERS</code></li>\n     <li><code>VIEW_VOTERS_AND_WATCHERS</code></li>\n </ul>\n\n <p><b>Comments permissions</b></p>\n\n <ul>\n     <li><code>ADD_COMMENTS</code></li>\n     <li><code>DELETE_ALL_COMMENTS</code></li>\n     <li><code>DELETE_OWN_COMMENTS</code></li>\n     <li><code>EDIT_ALL_COMMENTS</code></li>\n     <li><code>EDIT_OWN_COMMENTS</code></li>\n </ul>\n\n <p><b>Attachments permissions</b></p>\n\n <ul>\n     <li><code>CREATE_ATTACHMENTS</code></li>\n     <li><code>DELETE_ALL_ATTACHMENTS</code></li>\n     <li><code>DELETE_OWN_ATTACHMENTS</code></li>\n </ul>\n\n <p><b>Time tracking permissions</b></p>\n\n <ul>\n     <li><code>DELETE_ALL_WORKLOGS</code></li>\n     <li><code>DELETE_OWN_WORKLOGS</code></li>\n     <li><code>EDIT_ALL_WORKLOGS</code></li>\n     <li><code>EDIT_OWN_WORKLOGS</code></li>\n     <li><code>WORK_ON_ISSUES</code></li>\n </ul>\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "9408f2a1-2e30-45d8-baf7-46f64697c1ce",
          "name": "Create permission scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Example permission scheme\",\"description\":\"description\",\"permissions\":[{\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\"},\"permission\":\"ADMINISTER_PROJECTS\"}]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are always included when you specify any value:\n               \n                  all Returns all expandable information.\n                  field Returns information about the custom field granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  permissions Returns all permission grants for each permission scheme.\n                  projectRole Returns information about the project role granted the permission.\n                  user Returns information about the user who is granted the permission.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Creates a new permission scheme. You can create a permission scheme with or without defining a set of\n permission grants.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "3968f575-6f79-403b-933d-9075e92f549d",
          "name": "Get permission scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are included when you specify any value:\n               \n                  all Returns all expandable information.\n                  field Returns information about the custom field granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  permissions Returns all permission grants for each permission scheme.\n                  projectRole Returns information about the project role granted the permission.\n                  user Returns information about the user who is granted the permission.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme to return (e.g., 10000)."
                }
              ]
            },
            "description": "Returns a permission scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "7ddb9cdd-716a-41fa-be3f-8b463b09ebc6",
          "name": "Update permission scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Example permission scheme\",\"description\":\"description\",\"permissions\":[{\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\"},\"permission\":\"ADMINISTER_PROJECTS\"}]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are always included when you specify any value:\n               \n                  all Returns all expandable information.\n                  field Returns information about the custom field granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  permissions Returns all permission grants for each permission scheme.\n                  projectRole Returns information about the project role granted the permission.\n                  user Returns information about the user who is granted the permission.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme to update (e.g., 10000)."
                }
              ]
            },
            "description": "Updates a permission scheme. Below are some important things to note when using this resource:\n\n <ul>\n     <li>If a permissions list is present in the request, then it will be set in the permission scheme, overwriting\n     <em>all existing</em> grants.</li>\n     <li>If you want to update only the name and description, then do not send a permissions list in the request.</li>\n     <li>Sending an empty list will remove all permission grants from the permission scheme. </li>\n </ul>\n\n If you want to add or delete a single permission grant instead of updating the whole list, see\n <a href=\"#api-api-3-permissionscheme-schemeId-permission-post\">Create permission grant</a>\n or <a href=\"#api-api-3-permissionscheme-schemeId-permission-permissionId-delete\">Delete permission scheme entity</a>.\n\n See <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#about-permission-schemes\">About permission schemes and grants</a>\n for more details.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "c517ff79-d9ec-457e-93c2-fb4595805114",
          "name": "Delete permission scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId"
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme being deleted (e.g., 10000)."
                }
              ]
            },
            "description": "Deletes a permission scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "77e44b98-43fb-4196-b24e-2d80843306d2",
          "name": "Get permission scheme grants",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId/permission?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId",
                "permission"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are always included when you specify any value:\n               \n                  permissions Returns all permission grants for each permission scheme.\n                  user Returns information about the user who is granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  projectRole Returns information about the project role granted the permission.\n                  field Returns information about the custom field granted the permission.\n                  all Returns all expandable information.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme (e.g., 10010)."
                }
              ]
            },
            "description": "Returns all permission grants for a permission scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "b57b6785-cab0-4e12-8835-e8e41dd665a4",
          "name": "Create permission grant",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"holder\":{\"type\":\"group\",\"parameter\":\"jira-core-users\"},\"permission\":\"ADMINISTER_PROJECTS\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId/permission?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId",
                "permission"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are always included when you specify any value:\n               \n                  permissions Returns all permission grants for each permission scheme.\n                  user Returns information about the user who is granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  projectRole Returns information about the project role granted the permission.\n                  field Returns information about the custom field granted the permission.\n                  all Returns all expandable information.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "The ID of the permission scheme in which to create a new permission grant."
                }
              ]
            },
            "description": "Creates a new permission grant in the given permission scheme.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "306e4ec1-d7af-4fac-83da-3ea3ae45a8be",
          "name": "Get permission scheme grant",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId",
                "permission",
                ":permissionId"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are always included when you specify any value:\n               \n                  all Returns all expandable information.\n                  field Returns information about the custom field granted the permission.\n                  group Returns information about the group that is granted the permission.\n                  permissions Returns all permission grants for each permission scheme.\n                  projectRole Returns information about the project role granted the permission.\n                  user Returns information about the user who is granted the permission.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme (e.g., 10010)."
                },
                {
                  "key": "permissionId",
                  "value": "{{permissionId}}",
                  "description": "\nThe ID of the permission grant (e.g., 10000)."
                }
              ]
            },
            "description": "Returns a permission grant.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "38987447-598d-47da-b858-4190cffc8d41",
          "name": "Delete permission scheme entity",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "permissionscheme",
                ":schemeId",
                "permission",
                ":permissionId"
              ],
              "variable": [
                {
                  "key": "schemeId",
                  "value": "{{schemeId}}",
                  "description": "\nThe ID of the permission scheme to delete the permission grant from (e.g., 10000)."
                },
                {
                  "key": "permissionId",
                  "value": "{{permissionId}}",
                  "description": "\nThe ID of the permission grant to delete (e.g., 10847)."
                }
              ]
            },
            "description": "Deletes a permission grant from a permission scheme. See\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#about-permission-schemes\">About permission schemes and grants</a>\n for more details.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "0a9845fc-30f1-46ad-84bc-871a5591fdd0",
          "name": "Get priorities",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/priority",
            "description": "Returns the list of all issue priorities.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "c40a9912-23d3-403f-bac4-b7c1c5f9a716",
          "name": "Get priority",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/priority/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "priority",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue priority."
                }
              ]
            },
            "description": "Returns an issue priority.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "4f73ca34-8b3d-49b0-9035-ff0003a64d05",
          "name": "Get all projects",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n               \n               description Returns the project description.\n               issueTypes Returns all issue types associated with the project.\n               lead Returns information about the the project lead.\n               projectKeys Returns all project keys associated with the project.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "Returns the most recently accessed projects for the current user. You may specify the number of results to return up to a maximum of 20. If no user is logged in, then the recently accessed projects will be returned based on the current HTTP session.",
                  "key": "recent",
                  "value": "{{recent}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all projects visible to the currently logged in user. Deprecated, use <a href=\"#api-api-3-project-search-get\">\n Get projects paginated</a> that supports search and pagination.\n\n For projects to be visible, the authenticated user\n must be granted either <em>Browse projects</em> or <em>Administer projects</em> permissions. If no user is logged\n in, it returns all projects that are visible for anonymous users.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "07c91e4c-992f-4255-8d08-0dc5a766b5ac",
          "name": "Create project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"key\":\"EX\",\"name\":\"Example\",\"projectTypeKey\":\"business\",\"projectTemplateKey\":\"com.atlassian.jira-core-project-templates:jira-core-simplified-project-management\",\"description\":\"Example Project description\",\"leadAccountId\":\"bd429c95-e27b-4423-a0bd-421cf3d69129\",\"url\":\"http://atlassian.com\",\"assigneeType\":\"PROJECT_LEAD\",\"avatarId\":10200,\"issueSecurityScheme\":10001,\"permissionScheme\":10011,\"notificationScheme\":10021,\"categoryId\":10120}"
            },
            "url": "https://{{host}}/rest/api/3/project",
            "description": "Creates a new project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n global permission. "
          },
          "response": []
        },
        {
          "_postman_id": "6f2193c4-68c1-4dca-8e42-14738c162cb6",
          "name": "Get projects paginated",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                "search"
              ],
              "query": [
                {
                  "description": "The starting index of the first item returned in the page of results (page offset). The base index is 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of items to return per page. Max 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Order the\n                   results by a particular field. If the orderBy field is not set, then projects\n                   are listed in ascending order by project key:\n                   \n                   category Sorts projects in order by project category. A complete list of category IDs can be\n                   found using the Get all project categories\n                   resource.\n                   key Sorts projects in order by project key.\n                   name Sorts projects in alphabetical order by project name.\n                   owner Sorts projects in order by the project lead.\n                   ",
                  "key": "orderBy",
                  "value": "{{orderBy}}",
                  "disabled": true
                },
                {
                  "description": "\nFilter the results using a literal string. Projects with a matching key or\n                   name are returned (case insensitive).",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "Orders results by the project type.\n                   This parameter accepts multiple values separated by a comma. Valid values are business,\n                   service_desk, and software.",
                  "key": "typeKey",
                  "value": "{{typeKey}}",
                  "disabled": true
                },
                {
                  "description": "The ID of the project's category. A complete list of category IDs can be found using the\n                   Get all project categories\n                   resource.",
                  "key": "categoryId",
                  "value": "{{categoryId}}",
                  "disabled": true
                },
                {
                  "description": "Filter results by projects for which the calling user has permission to perform the given action.\n                   The view action corresponds with the Browse projects project permission,\n                   and the edit action corresponds with Administer project permissions.",
                  "key": "action",
                  "value": "{{action}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                   \n                   description Returns the project description.\n                   projectKeys Returns all project keys associated with a project.\n                   lead Returns information about the the project lead.\n                   issueTypes Returns all issue types associated with the project.\n                   url Returns the URL associated with the project.\n                   ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns projects visible to the currently logged in user. For projects to be visible, the authenticated user\n must be granted either <em>Browse projects</em> or <em>Administer projects</em> permissions. If no user is logged\n in, then all projects visible to anonymous users are returned.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None. "
          },
          "response": []
        },
        {
          "_postman_id": "02fffff3-ee79-42ee-a537-0e9f428cd105",
          "name": "Get all project types",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/project/type",
            "description": "Returns all <a href=\"https://confluence.atlassian.com/x/Var1Nw\">project types</a>, whether or not the instance\n has a valid license for each type.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (that is, member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "d1f31450-995d-4be8-824a-db5765d201c8",
          "name": "Get project type by key",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/type/:projectTypeKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                "type",
                ":projectTypeKey"
              ],
              "variable": [
                {
                  "key": "projectTypeKey",
                  "value": "{{projectTypeKey}}",
                  "description": "The key of the project type."
                }
              ]
            },
            "description": "Returns a <a href=\"https://confluence.atlassian.com/x/Var1Nw\">project type</a>.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (that is, member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "9663ea8e-75bb-4f9d-aebb-481d8b029eed",
          "name": "Get accessible project type by key",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/type/:projectTypeKey/accessible",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                "type",
                ":projectTypeKey",
                "accessible"
              ],
              "variable": [
                {
                  "key": "projectTypeKey",
                  "value": "{{projectTypeKey}}",
                  "description": "The key of the project type."
                }
              ]
            },
            "description": "Returns a <a href=\"https://confluence.atlassian.com/x/Var1Nw\">project type</a> if it is accessible\n to the logged in user.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to log in to Jira\n (that is, member of the <em>users</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "524ab3a6-9bf3-45c0-9202-8e9ea97c4612",
          "name": "Get project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that the project description, issue types, and project lead are included in all responses by default:\n                       \n                       description The project description.\n                       issueTypes The issue types associated with the project.\n                       lead The project lead.\n                       projectKeys All project keys associated with the project.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns the <a href=\"https://confluence.atlassian.com/x/ahLpNw\">project details</a> for the specified project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "3d254302-b4ab-4a8e-adcf-aa1df1c2b8bd",
          "name": "Update project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"key\":\"EX\",\"name\":\"Example\",\"projectTypeKey\":\"business\",\"projectTemplateKey\":\"com.atlassian.jira-core-project-templates:jira-core-simplified-project-management\",\"description\":\"Example Project description\",\"leadAccountId\":\"bd429c95-e27b-4423-a0bd-421cf3d69129\",\"url\":\"http://atlassian.com\",\"assigneeType\":\"PROJECT_LEAD\",\"avatarId\":10200,\"issueSecurityScheme\":10001,\"permissionScheme\":10011,\"notificationScheme\":10021,\"categoryId\":10120}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that the project description, issue types, and project lead are included in all responses by default:\n                       \n                       description The project description.\n                       issueTypes The issue types associated with the project.\n                       lead The project lead.\n                       projectKeys All project keys associated with the project.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Updates the <a href=\"https://confluence.atlassian.com/x/ahLpNw\">project details</a> of an existing project.\n\n <p>\n All parameters are optional in the body of the request.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n global permission. "
          },
          "response": []
        },
        {
          "_postman_id": "c2d3d02b-8bbf-4390-aeb4-38537331d3e4",
          "name": "Delete project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Deletes an existing project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n global permission. "
          },
          "response": []
        },
        {
          "_postman_id": "ad93650a-8649-4961-9057-e3feb99d5ce1",
          "name": "Update project avatar",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/avatar",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "avatar"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}"
                }
              ]
            },
            "description": " "
          },
          "response": []
        },
        {
          "_postman_id": "b4cd460e-0238-4eb8-8b04-7d0ff52de37e",
          "name": "Delete project avatar",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "avatar",
                ":id"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the avatar."
                }
              ]
            },
            "description": "Deletes an avatar of a single project. It is only possible to delete custom avatars. "
          },
          "response": []
        },
        {
          "_postman_id": "a642045b-f638-4445-88de-8c3d45f5f29b",
          "name": "Create project avatar",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/avatar2?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "avatar2"
              ],
              "query": [
                {
                  "description": "(optional) X coordinate of the top-left corner of the crop region. Default: 0.",
                  "key": "x",
                  "value": "{{x}}",
                  "disabled": true
                },
                {
                  "description": "(optional) Y coordinate of the top-left corner of the crop region. Default: 0.",
                  "key": "y",
                  "value": "{{y}}",
                  "disabled": true
                },
                {
                  "description": "(optional) Length of each side of the crop region. The crop region can only be a square. If not provided, and the top-left corner is at (0,0), this defaults to either the height or width of the image, whichever is smaller.",
                  "key": "size",
                  "value": "{{size}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Creates an avatar for a single project. Use it to upload an image to be be set as a project's avatar.\n The uploaded image will be cropped according to the crop parameters defined in the request. If no crop parameters are specified, the image will be cropped to a square.\n The square will originate at the top left of the image and the length of each side will be set to the smaller of\n the height or width of the image. "
          },
          "response": []
        },
        {
          "_postman_id": "a3abf3e6-cb24-413e-b216-477567819a79",
          "name": "Get all project avatars",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/avatars",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "avatars"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive). Project keys must start with an uppercase letter followed by one or more uppercase alphanumeric characters."
                }
              ]
            },
            "description": "Returns all project avatars visible for the currently logged in user. The avatars are grouped into\n system avatars and custom avatars. "
          },
          "response": []
        },
        {
          "_postman_id": "cc5c04e2-db68-4cbb-ae60-3901ce99a09c",
          "name": "Get project components paginated",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/component?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "component"
              ],
              "query": [
                {
                  "description": "The starting index of the returned list of components. The base index is 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of components to return per page. Max 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Order the results by a particular field:\n                       \n                       description Sorts components in alphabetical order by description.\n                       issueCount Sorts components by the count of issues associated with the component in ascending order.\n                       lead Sorts by the project lead's user key in alphabetical order.\n                       name Sorts components in alphabetical order by component name.\n                       ",
                  "key": "orderBy",
                  "value": "{{orderBy}}",
                  "disabled": true
                },
                {
                  "description": "\nFilter the results using a literal string. Components with a matching name or\n                       description are returned (case insensitive).",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns a  <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#pagination\">paginated</a>\n representation of all components existing in a single project. See the\n <a href=\"#api-api-3-project-projectIdOrKey-components-get\">Get project components</a>\n resource if you want to get a full list of versions without pagination.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "b964bd19-fda3-45f7-b1d6-013910f50ab4",
          "name": "Get project components",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/components",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "components"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns all components existing in a single project. See the\n <a href=\"#api-api-3-project-projectIdOrKey-component-get\">Get project components paginated</a>\n resource if you want to get a full list of components with pagination.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "1d9db6e1-87df-4e41-9835-2e1d0cc39b7e",
          "name": "Get project property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/properties",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "properties"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns all <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">project property</a>\n keys for the project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "e0478d5a-db6a-4a1d-a950-bfd3063ea30c",
          "name": "Get project property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The project property key. Use\n                       Get project property keys\n                       to get a list of all project property keys."
                }
              ]
            },
            "description": "Returns the value of the <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">project property</a>.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "f9342dd5-f117-4c52-a71d-355a7b16c86d",
          "name": "Set project property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"string\":\"string-value\",\"number\":5}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the project property. The maximum length is 255 bytes."
                }
              ]
            },
            "description": "Sets the value of the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">project property</a>.\n You can use project properties to store custom data against the project.\n\n <p>\n The value of the request body must be a <a href=\"http://tools.ietf.org/html/rfc4627\">valid</a>, non-empty JSON\n blob. The maximum length is 32768 bytes.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> or <em>Administer Projects</em>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "1f3ad02b-9548-4e40-9927-af0364764946",
          "name": "Delete project property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "properties",
                ":propertyKey"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The project property key. Use\n                       Get project property keys\n                       to get a list of all project property keys."
                }
              ]
            },
            "description": "Removes the <a href=\"https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties\">property</a>\n from the project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "206ecff7-da2e-4d6e-b63f-3a65b14a05c1",
          "name": "Get project roles for project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/role",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "role"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns a list of <a href=\"https://confluence.atlassian.com/x/3odKLg\">project roles</a> for the project.\n\n <p>\n Note that all project roles are shared with all projects in Jira Cloud. See the\n <a href=\"#api-api-3-role-get\">Get all project roles</a>\n resource for more information.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "882cd75e-525b-4ff6-9b38-f43442675bdf",
          "name": "Get project role for project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n                       Get all project roles\n                       to get a list of project role IDs."
                }
              ]
            },
            "description": "Returns the project role's details and actors associated with the project. The list of actors is sorted by\n display name.\n\n <p>\n If you would like to check to see whether a user belongs to a role based on their group memberships, use the\n <a href=\"#api-api-3-user-get\">Get user</a> resource\n with the <code>groups</code> expand parameter selected. Then check whether the user keys and groups match with\n the actors returned for the project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "61870f87-3f7d-4bc1-97fa-80758b120593",
          "name": "Add actors to project role",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"group\":[\"jira-developers\"]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n                       Get all project roles\n                       to get a list of project role IDs."
                }
              ]
            },
            "description": "Adds additional actors to a project role for the project.\n\n <p>\n If you want to replace all actors for the project, then use\n <a href=\"#api-api-3-project-projectIdOrKey-role-id-put\">Set actors for project role</a>.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "52510030-f842-4afc-8981-cb2e21a3a79b",
          "name": "Set actors for project role",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"id\":10360,\"categorisedActors\":{\"atlassian-user-role-actor\":[\"12345678-9abc-def1-2345-6789abcdef12\"],\"atlassian-group-role-actor\":[\"jira-developers\"]}}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n                       Get all project roles\n                       to get a list of project role IDs."
                }
              ]
            },
            "description": "Associates actors with the project role for the project, replacing all existing actors.\n\n <p>\n If you want to add actors to the project without overwriting the existing list, then use\n <a href=\"#api-api-3-project-projectIdOrKey-role-id-post\">Add actors to project role</a>.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "c9b3d5e2-0bca-4370-8bb3-36341f207a63",
          "name": "Delete actors from project role",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/role/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "role",
                ":id"
              ],
              "query": [
                {
                  "description": "The user account ID of the user to remove from the project role.",
                  "key": "user",
                  "value": "{{user}}",
                  "disabled": true
                },
                {
                  "description": "The name of the group to remove from the project role.",
                  "key": "group",
                  "value": "{{group}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n                       Get all project roles\n                       to get a list of project role IDs."
                }
              ]
            },
            "description": "Deletes actors from a project role for the project.\n\n <p>\n If you want to remove default actors from the project role, see the\n <a href=\"#api-api-3-role-id-actors-delete\">Delete default actors from project role</a>\n resource.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "bbf6f2db-7e41-4135-862f-b149fe201477",
          "name": "Get project role details",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/roledetails",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "roledetails"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns all <a href=\"https://confluence.atlassian.com/x/3odKLg\">project roles</a> and the details for each role.\n Note that the list of project roles is common to all projects. "
          },
          "response": []
        },
        {
          "_postman_id": "505a5170-703f-4a92-a4ed-d3dc8315a1b3",
          "name": "Get all statuses for project",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/statuses",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "statuses"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns the valid statuses for a project. The statuses are grouped by issue type, as each project has a set of\n valid issue types and each issue type has a set of valid statuses.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "e8460c12-89b5-402a-a32c-a3770ab3dab5",
          "name": "Update project type",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "type",
                ":newProjectTypeKey"
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                },
                {
                  "key": "newProjectTypeKey",
                  "value": "{{newProjectTypeKey}}",
                  "description": "The key of the new project type."
                }
              ]
            },
            "description": "Updates the <a href=\"https://confluence.atlassian.com/x/GwiiLQ\">project type</a>.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n global permission. "
          },
          "response": []
        },
        {
          "_postman_id": "77379330-7a25-4029-9b91-9b6934c81fe5",
          "name": "Get project versions paginated",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/version?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "version"
              ],
              "query": [
                {
                  "description": "The starting index of the returned list of versions (page offset). The base index is 0.",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of versions to return per page. Max 50.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Order the results by a particular field:\n                       \n                       description Sorts versions in alphabetical order by description.\n                       name Sorts versions in alphabetical order by version name.\n                       releaseDate Sorts versions in order by release date, starting with the\n                       oldest date. Versions with no release date are listed last.\n                       sequence Sorts versions by the order of appearance in the user interface.\n                       startDate Sorts versions in order by start date, starting with the\n                       oldest date. Versions with no start date are listed last.\n                       ",
                  "key": "orderBy",
                  "value": "{{orderBy}}",
                  "disabled": true
                },
                {
                  "description": "\nFilter the results using a literal string. Versions with matching name or\n                       description are returned (case insensitive).",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "A comma separated string used to filter the results by version status.",
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                       \n                       issuesstatus Returns the number of issues in each status category for each version.\n                       operations Returns actions that can be performed on the specified version.\n                       remotelinks Returns remote version links.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns a  <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#pagination\">paginated</a>\n representation of all versions existing in a single project. See the\n <a href=\"#api-api-3-project-projectIdOrKey-versions-get\">Get project versions</a>\n resource if you want to get a full list of versions without pagination.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "510ecc93-f0e7-4569-8407-5a8c988cdbfb",
          "name": "Get project versions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectIdOrKey/versions?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectIdOrKey",
                "versions"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                       \n                       operations Returns actions that can be performed on the specified version.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectIdOrKey",
                  "value": "{{projectIdOrKey}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns all versions existing in a single project. The response is not paginated. Use\n <a href=\"#api-api-3-project-projectIdOrKey-version-get\">Get project versions paginated</a>\n if you want to get the versions in a project with pagination.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse Projects</em>\n project permission. "
          },
          "response": []
        },
        {
          "_postman_id": "7ff37e0f-c90a-44fc-8932-ef1f49f42318",
          "name": "Get project issue security scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectKeyOrId",
                "issuesecuritylevelscheme"
              ],
              "variable": [
                {
                  "key": "projectKeyOrId",
                  "value": "{{projectKeyOrId}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns the <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue security scheme</a> associated with the\n project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> or the <em>Administer Projects</em>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "1b5b42fd-0fb7-47a6-a074-4ad59b9c52c6",
          "name": "Get project notification scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectKeyOrId/notificationscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectKeyOrId",
                "notificationscheme"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma:\n                       \n                       all Returns all expandable information.\n                       field Returns information about any custom fields assigned to receive an event.\n                       group Returns information about any groups assigned to receive an event.\n                       notificationSchemeEvents Returns a list of event associations. This list is returned for all expandable information.\n                       projectRole Returns information about any project roles assigned to receive an event.\n                       user Returns information about any users assigned to receive an event.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectKeyOrId",
                  "value": "{{projectKeyOrId}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Gets a <a href=\"https://confluence.atlassian.com/x/8YdKLg\">notification scheme</a> associated with the project.\n See the <a href=\"#api-api-3-notificationscheme-id-get\">Get notification scheme</a>\n resource for more information about notification schemes.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "bb5ff470-8084-4e5a-8c2a-f9b6febc1dcf",
          "name": "Get assigned permission scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectKeyOrId/permissionscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectKeyOrId",
                "permissionscheme"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are included when you specify any value:\n                       \n                       all Returns all expandable information.\n                       field Returns information about the custom field granted the permission.\n                       group Returns information about the group that is granted the permission.\n                       permissions Returns all permission grants for each permission scheme.\n                       projectRole Returns information about the project role granted the permission.\n                       user Returns information about the user who is granted the permission.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectKeyOrId",
                  "value": "{{projectKeyOrId}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Gets the <a href=\"https://confluence.atlassian.com/x/yodKLg\">permission scheme</a> associated with the project.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> or\n <em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "8fb5ad9a-2d45-445f-9e62-9c4e7ef24d05",
          "name": "Assign permission scheme",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"id\":10000}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectKeyOrId/permissionscheme?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectKeyOrId",
                "permissionscheme"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information in the response. This parameter accepts multiple values separated by a comma. Note that permissions are included when you specify any value:\n                       \n                       all Returns all expandable information.\n                       field Returns information about the custom field granted the permission.\n                       group Returns information about the group that is granted the permission.\n                       permissions Returns all permission grants for each permission scheme.\n                       projectRole Returns information about the project role granted the permission.\n                       user Returns information about the user who is granted the permission.\n                       ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "projectKeyOrId",
                  "value": "{{projectKeyOrId}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Associates a permission scheme with a particular project. See\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">Managing project permissions</a>\n for more information about permission schemes.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "a250f1ec-6023-400e-8172-cffffe3b273a",
          "name": "Get project issue security levels",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/project/:projectKeyOrId/securitylevel",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "project",
                ":projectKeyOrId",
                "securitylevel"
              ],
              "variable": [
                {
                  "key": "projectKeyOrId",
                  "value": "{{projectKeyOrId}}",
                  "description": "The project ID or project key (case sensitive)."
                }
              ]
            },
            "description": "Returns all <a href=\"https://confluence.atlassian.com/x/J4lKLg\">issue security</a> levels for the project that\n the currently authenticated user has access to. If the user does not have permission to see an issue security\n level, then that level is not returned. If the user lacks the <em>Set Issue Security</em> permission, then an\n empty list is returned.\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Set Issue Security</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "ee2ee2f2-8497-44bc-8c8e-6ac9f8403052",
          "name": "Get all project categories",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/projectCategory",
            "description": "Returns all project categories.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "f95db1f7-4e76-4e12-a1e5-be39a84aaf40",
          "name": "Create project category",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"CREATED\",\"description\":\"Created Project Category\"}"
            },
            "url": "https://{{host}}/rest/api/3/projectCategory",
            "description": "Creates a project category.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "a848048f-cf19-461e-b314-f5896f2033a0",
          "name": "Get project category by id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectCategory/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectCategory",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project category."
                }
              ]
            },
            "description": "Returns a project category.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "2b1beef1-02b2-4746-8570-9ff61c9ff028",
          "name": "Update project category",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"UPDATED\",\"description\":\"Updated Project Category\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectCategory/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectCategory",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}"
                }
              ]
            },
            "description": "Updates a project category.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "a9b03c69-fef6-414e-b5f9-c59a288e0f42",
          "name": "Delete project category",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectCategory/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectCategory",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "ID of the project category to delete."
                }
              ]
            },
            "description": "Deletes a project category.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "20010637-5c6e-4327-ad2b-f465079fa28b",
          "name": "Validate project key",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectvalidate/key?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectvalidate",
                "key"
              ],
              "query": [
                {
                  "description": "The project key.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                }
              ]
            },
            "description": "Validates a project key by confirming the key is a valid string and not in use.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "2b300607-51ec-4585-96ca-c15aecad1e49",
          "name": "Get valid project key",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectvalidate/validProjectKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectvalidate",
                "validProjectKey"
              ],
              "query": [
                {
                  "description": "The project key.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                }
              ]
            },
            "description": "Validates a project key and, if the key is invalid or in use, generates a valid random string for the project key.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "68665888-e19c-478f-b12b-bbb437bf3fa0",
          "name": "Get valid project name",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/projectvalidate/validProjectName?name={{name}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "projectvalidate",
                "validProjectName"
              ],
              "query": [
                {
                  "description": "The project name.",
                  "key": "name",
                  "value": "{{name}}"
                }
              ]
            },
            "description": "Checks that a project name isn't in use. If the name isn't in use, the passed string is returned. If the name is\n in use, this operation attempts to generate a valid project name based on the one supplied, usually by adding a\n sequence number. If a valid project name cannot be generated, a 404 response is returned.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "b0e1f461-180a-4234-ab61-cd23ddf5923f",
          "name": "Get resolutions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/resolution",
            "description": "Returns a list of all issue resolution values.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "0db6aa3a-63f2-4e85-a1c5-3e837d4c1601",
          "name": "Get resolution",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/resolution/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "resolution",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue resolution value."
                }
              ]
            },
            "description": "Returns an issue resolution value.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "9e5cea06-fdc4-497f-93af-7b410d223be7",
          "name": "Get all project roles",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/role",
            "description": "<p>\n Gets a list of all project roles, complete with project role details and default actors.\n </p>\n\n <h3 id=\"about-permission-schemes\">About project roles</h3>\n\n <p>\n <a href=\"https://confluence.atlassian.com/x/3odKLg\">Project roles</a> are a flexible way to to associate users and\n groups with projects. In Jira Cloud, the list of project roles is shared globally with all projects, but each\n project can have a different set of actors associated with it (unlike groups, which have the same membership\n throughout all Jira applications).\n </p>\n\n <p>\n Project roles can be used in\n <a href=\"#api-api-3-permissionscheme-get\">permission schemes</a>,\n <a href=\"#api-api-3-notificationscheme-get\">email notification schemes</a>,\n <a href=\"#api-api-3-issuesecurityschemes-get\">issue security levels</a>,\n <a href=\"#api-api-3-comment-list-post\">comment visibility</a>, and\n workflow conditions.\n </p>\n\n <h4 id=\"members-and-actors\">Members and actors</h4>\n\n <p>\n In the Jira REST API, a member of a project role is called an <em>actor</em>. An <em>actor</em> is a group or user\n associated with a project role.\n </p>\n\n <p>\n Actors may be set as\n <a href=\"https://confluence.atlassian.com/x/3odKLg#Managingprojectroles-Specifying'defaultmembers'foraprojectrole\">default members</a>\n of the project role or set at the project level:\n </p>\n\n <ul>\n     <li>Default actors: Users and groups that are assigned to the project role for all newly created projects.\n     The default actors can be removed at the project level later if desired.</li>\n     <li>Actors: Users and groups that are associated with a project role for a particular project, which may\n     differ from the default actors. This allows you to assign a particular user to different roles in different\n     projects.</li>\n </ul>\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "abc9521a-f249-4047-89d0-cc06fedc6ca3",
          "name": "Create project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Developers\",\"description\":\"A project role that represents developers in a project\"}"
            },
            "url": "https://{{host}}/rest/api/3/role",
            "description": "Creates a new project role with no <a href=\"#api-api-3-resolution-get\">default actors</a>.\n You can use the <a href=\"#api-api-3-role-id-actors-post\">Add default actors to project role</a>\n the project method to add default actors to the project role after creating it.\n\n\n <p><em>Note that although a new project role is available to all projects upon creation, any default actors that are associated\n with the project role are not added to projects that existed prior to the role being created.</em><\n\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "21df4778-68f2-4e39-a7da-03246d11c0db",
          "name": "Get project role by ID",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "\nThe ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "<p>\n Gets the project role details and the default actors associated with the role. The list of default actors is\n sorted by display name.\n </p>\n\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.\n </p> "
          },
          "response": []
        },
        {
          "_postman_id": "526cf87f-9c11-46b9-a6ac-71bfedde3b26",
          "name": "Partial update project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Developers\",\"description\":\"A project role that represents developers in a project\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "Update either the project role's name or its description.\n\n <p>\n You cannot update both the name and description at the same time using this method. If you send a request\n with both a name and a description, then only the name will be updated, regardless of the order of appearance in\n the body of the request.\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "0e6a23bf-a11a-465e-ac2b-308bdc134dbc",
          "name": "Fully update project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Developers\",\"description\":\"A project role that represents developers in a project\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "Update the project role's name and description. You must include both a name and a description in the request.\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "486a9f03-328a-48cc-9253-dd18481308f8",
          "name": "Delete project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id"
              ],
              "query": [
                {
                  "description": "The ID of the project role that will replace the one being deleted.",
                  "key": "swap",
                  "value": "{{swap}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role to delete. Use\n                     Get all project roles\n                     to get a list of project role IDs."
                }
              ]
            },
            "description": "Deletes a project role. You must specify a replacement project role if you wish to delete a project role that is\n in use.\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "a76ee23f-f18a-49d9-b2d2-ba2982d4cd35",
          "name": "Get default actors for project role",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id/actors",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id",
                "actors"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "Returns the <a href=\"#api-api-3-resolution-get\">default actors</a>\n for the project role.\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "c989ddac-74df-4870-801e-2ceb99838412",
          "name": "Add default actors to project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"user\":[\"admin\"]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id/actors",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id",
                "actors"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "\nThe ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "<p>\n Adds <a href=\"#api-api-3-resolution-get\">default actors</a>\n to the given role. You may add either groups or users, but you cannot add groups and users in the same request.\n </p>\n\n <div class=\"aui-message note\">\n <div class=\"icon\"></div>\n <p>Changing a project role's default actors does not affect project role members for projects already created.</p>\n </div>\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</p> "
          },
          "response": []
        },
        {
          "_postman_id": "28ab1170-8a76-4549-9360-e55b6d0cc436",
          "name": "Delete default actors from project role",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/role/:id/actors?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "role",
                ":id",
                "actors"
              ],
              "query": [
                {
                  "description": "The user account ID of the user to remove as a default actor.",
                  "key": "user",
                  "value": "{{user}}",
                  "disabled": true
                },
                {
                  "description": "The group name of the group to be removed as a default actor.",
                  "key": "group",
                  "value": "{{group}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the project role. Use\n               Get all project roles\n               to get a list of project role IDs."
                }
              ]
            },
            "description": "Removes <a href=\"#api-api-3-resolution-get\">default actors</a>\n from the project role. You may remove either a group or user, but you cannot remove a group and a user in the same\n request.\n\n <div class=\"aui-message note\">\n <div class=\"icon\"></div>\n <p>Changing a project role's default actors does not affect project role members for projects already created.</p>\n </div>\n\n <p><b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "98f55670-9d6e-4933-8549-4c5c2d8d35ba",
          "name": "Get all screens",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens"
              ],
              "query": [
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 100.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all screens.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "f360e6f4-beff-40de-b27f-e4fe9616bc69",
          "name": "Add field to default screen",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/addToDefault/:fieldId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                "addToDefault",
                ":fieldId"
              ],
              "variable": [
                {
                  "key": "fieldId",
                  "value": "{{fieldId}}",
                  "description": "The ID of the field."
                }
              ]
            },
            "description": "Adds a field to the default tab of the default screen.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "df633956-c60b-40fd-a9b9-247e12189be9",
          "name": "Get available screen fields",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/availableFields",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "availableFields"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                }
              ]
            },
            "description": "Returns the fields that can be added to a tab on a screen.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "4efb417b-17c4-47b8-ac60-7f8cc3ccbbc0",
          "name": "Get all screen tabs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs"
              ],
              "query": [
                {
                  "description": "The key of the project.",
                  "key": "projectKey",
                  "value": "{{projectKey}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                }
              ]
            },
            "description": "Returns the list of tabs for a screen.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <ul>\n      <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n      <li><em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> when\n      the project key is specified, providing that the screen is associated with the project through a Screen Scheme\n      and Issue Type Screen Scheme.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "6a6b445d-8361-4f66-9188-ca6c8e4390a2",
          "name": "Create screen tab",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Fields Tab\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                }
              ]
            },
            "description": "Creates a tab for a screen.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "4e6e529c-e22b-40a3-b8fb-7706aaab51e6",
          "name": "Update screen tab",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                }
              ]
            },
            "description": "Updates the name of a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "5527a250-04b0-440b-af37-9795df9ee04c",
          "name": "Delete screen tab",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                }
              ]
            },
            "description": "Deletes a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "b8c37f4f-934a-40d6-99b2-6837f518946d",
          "name": "Get all screen tab fields",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId",
                "fields"
              ],
              "query": [
                {
                  "description": "The key of the project.",
                  "key": "projectKey",
                  "value": "{{projectKey}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                }
              ]
            },
            "description": "Returns all fields for a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <ul>\n      <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n      <li><em>Administer projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a> when\n      the project key is specified, providing that the screen is associated with the project through a Screen Scheme\n      and Issue Type Screen Scheme.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "47952174-90de-4e42-ac81-a7dd5f9b3311",
          "name": "Add screen tab field",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"fieldId\":\"summary\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId",
                "fields"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                }
              ]
            },
            "description": "Adds a field to a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "1d345375-067a-4513-a0df-9431ec441a98",
          "name": "Remove screen tab field",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId",
                "fields",
                ":id"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the field."
                }
              ]
            },
            "description": "Removes a field from a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "aa4d885c-fc5f-4f7e-9f46-a08b711fde57",
          "name": "Move screen tab field",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId",
                "fields",
                ":id",
                "move"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the field."
                }
              ]
            },
            "description": "Moves a screen tab field.\n <p>\n If <code>after</code> and <code>position</code> are provided in the request, <code>position</code> is ignored.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "c9cd808e-e727-4411-b694-201c97c1c6b3",
          "name": "Move screen tab",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "screens",
                ":screenId",
                "tabs",
                ":tabId",
                "move",
                ":pos"
              ],
              "variable": [
                {
                  "key": "screenId",
                  "value": "{{screenId}}",
                  "description": "The ID of the screen."
                },
                {
                  "key": "tabId",
                  "value": "{{tabId}}",
                  "description": "The ID of the screen tab."
                },
                {
                  "key": "pos",
                  "value": "{{pos}}",
                  "description": "The position of tab. The base index is 0."
                }
              ]
            },
            "description": "Moves a screen tab.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "91e07cd3-1bbb-467c-812b-8613895e7c05",
          "name": "Search for issues using JQL (GET)",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "search"
              ],
              "query": [
                {
                  "description": "A JQL expression. If no JQL expression is provided all issues are returned.",
                  "key": "jql",
                  "value": "{{jql}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in the page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 100.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Determines how to validate the JQL query and treat the validation results. Supported values are:\n                      \n                      strict Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).\n                      warn Returns all errors as warnings.\n                      none No validation is performed.\n                      true Deprecated A legacy synonym for strict.\n                      false Deprecated A legacy synonym for warn.\n                      \n                      \n                      Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the validateQuery value.",
                  "key": "validateQuery",
                  "value": "{{validateQuery}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of fields to return for each issue, use it to retrieve a subset of fields. Allowed values:\n                      \n                      *all Returns all fields.\n                      *navigable Returns navigable fields.\n                      Any issue field, prefixed with a minus to exclude.\n                      \n                      Examples:\n                      \n                      summary,comment Returns only the summary and comments fields.\n                      -description Returns all navigable (default) fields except description.\n                      *all,-comment Returns all fields except comments.\n                      \n                      \n                      Multiple fields parameters can be included in a request.\n                      \n                      Note: All navigable fields are returned by default. This differs from\n                      GET issue\n                      where the default is all fields.",
                  "key": "fields",
                  "value": "{{fields}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information about issues in the response. This parameter accepts multiple values separated by a comma:\n                      \n                      renderedFields Returns field values rendered in HTML format.\n                      names Returns the display name of each field.\n                      schema Returns the schema describing a field type.\n                      transitions Returns all possible transitions for the issue.\n                      operations Returns all possible operations for the issue.\n                      editmeta Returns information about how each field can be edited.\n                      changelog Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n                      versionedRepresentations Returns a JSON array for each version of a field's value, with the\n                      highest number representing the most recent version. Note: When included in the request, the fields\n                      parameter is ignored.\n                      ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of up to 5 issue properties to include in the results.",
                  "key": "properties",
                  "value": "{{properties}}",
                  "disabled": true
                },
                {
                  "description": "Reference fields by their key (rather than ID).",
                  "key": "fieldsByKeys",
                  "value": "{{fieldsByKeys}}",
                  "disabled": true
                }
              ]
            },
            "description": "Searches for issues using <a href=\"https://confluence.atlassian.com/x/egORLQ\">JQL</a>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n <p>\n If the JQL query expression is too large to be encoded as a query parameter, use the\n <a href=\"#api-api-3-search-post\">POST</a> version of this resource. "
          },
          "response": []
        },
        {
          "_postman_id": "5e4a42ad-eb03-4922-9d70-c38929e75b31",
          "name": "Search for issues using JQL (POST)",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"jql\":\"project = HSP\",\"startAt\":0,\"maxResults\":15,\"fields\":[\"summary\",\"status\",\"assignee\"],\"fieldsByKeys\":false}"
            },
            "url": "https://{{host}}/rest/api/3/search",
            "description": "Searches for issues using <a href=\"https://confluence.atlassian.com/x/egORLQ\">JQL</a>.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira.\n <p>\n There is a <a href=\"#api-api-3-search-get\">GET</a>\n version of this resource that can be used for smaller JQL query expressions. "
          },
          "response": []
        },
        {
          "_postman_id": "e2d3c825-7f4a-4d05-b690-44dd8e9ccc1f",
          "name": "Get issue security level",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/securitylevel/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "securitylevel",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the issue security level."
                }
              ]
            },
            "description": "Returns details of an issue security level.\n <p>\n Use <a href=\"#api-api-3-issuesecurityschemes-id-get\">Get issue security scheme</a> to obtain the IDs of issue\n security levels associated with the issue security scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "b6999087-7ac3-436d-ae2b-1c1cd1751b38",
          "name": "Get Jira instance info",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": ""
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/serverInfo",
            "description": "Returns information about the Jira instance.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "d3b5cf93-516a-4b1a-938f-4026b5ee5c2f",
          "name": "Get issue navigator default columns",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/settings/columns",
            "description": "Returns the default issue navigator columns.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "44ea992e-02cf-42a8-8ebb-e6a027712454",
          "name": "Set issue navigator default columns",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*, multipart/form-data"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/settings/columns",
            "description": "Sets the default issue navigator columns.\n <p>\n The <code>columns</code> parameter accepts a single navigable field value and is expressed as HTML form data. To\n specify multiple columns, pass multiple <code>columns</code> parameters. For example, in curl:\n <p>\n <code>curl --request PUT \\\\ <p>\n   --data columns=&lt;field value 1&gt; \\\\ <p>\n   --data columns=&lt;field value 2&gt; \\\\ <p>\n   --url 'https://your-domain.atlassian.net/rest/api/2/settings/columns'</code>\n <p>\n If no column details are sent, then all default columns are removed.\n <p>\n A navigable field is one that can be used as a column on the issue navigator. Find details of navigable issue\n columns using <a href=\"#api-api-3-field-get\">Get fields</a>.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "c890929b-80e3-4d27-8aae-c329e8ee276c",
          "name": "Get all statuses",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/status",
            "description": "Returns a list of all statuses associated with workflows.\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. Users with permission\n to access Jira can call this method, but an empty list is returned. "
          },
          "response": []
        },
        {
          "_postman_id": "50be9df7-da0d-4666-899d-9b0f6fb6ab13",
          "name": "Get status",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/status/:idOrName",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "status",
                ":idOrName"
              ],
              "variable": [
                {
                  "key": "idOrName",
                  "value": "{{idOrName}}",
                  "description": "The ID or name of the status."
                }
              ]
            },
            "description": "Returns a status. The status must be associated with a workflow to be returned.\n <p>\n If a name is used on more than one status, only the status found first is returned. Therefore, identifying the\n status by its ID may be preferable.\n <p>\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Browse projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "95727d70-f053-46e1-8b1a-7e5a80e84003",
          "name": "Get all status categories",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/api/3/statuscategory",
            "description": "Returns a list of all status categories.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "bcf7eaa6-3945-482e-b794-acad08a377cb",
          "name": "Get status category",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/statuscategory/:idOrKey",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "statuscategory",
                ":idOrKey"
              ],
              "variable": [
                {
                  "key": "idOrKey",
                  "value": "{{idOrKey}}",
                  "description": "The ID or key of the status category."
                }
              ]
            },
            "description": "Returns a status category. Status categories provided a mechanism for categorizing\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#api-api-2-status-idOrName-get\">statuses</a>.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "8b93b600-740d-4bb4-8353-62935e804de3",
          "name": "Get task",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": ""
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/task/:taskId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "task",
                ":taskId"
              ],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{taskId}}",
                  "description": "The ID of the task."
                }
              ]
            },
            "description": "Returns the status of a <a href=\"#async\">long-running asynchronous task</a>.\n <p>\n When a task has finished, this operation returns the JSON blob applicable to the task. See the documentation\n of the operation that created the task for details. Task details are not permanently retained. As of September 2019,\n details are retained for 14 days although this period may change without notice.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n       <li>Creator of the task.</li>\n  </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "230898c2-3652-4dcc-abd7-858cde5d3ca2",
          "name": "Cancel task",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/task/:taskId/cancel",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "task",
                ":taskId",
                "cancel"
              ],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{taskId}}",
                  "description": "The ID of the task."
                }
              ]
            },
            "description": "Cancels a task.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b> either of:\n  <ul>\n       <li><em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n       <li>Creator of the task.</li>\n  </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "feb3250a-4c4d-41cf-b08d-b7fc5d91e81c",
          "name": "Get avatars",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/universal_avatar/type/:type/owner/:entityId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "universal_avatar",
                "type",
                ":type",
                "owner",
                ":entityId"
              ],
              "variable": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "description": "\nThe type of the entity. Valid values are project and issuetype."
                },
                {
                  "key": "entityId",
                  "value": "{{entityId}}",
                  "description": "The ID of the entity item."
                }
              ]
            },
            "description": "Returns the system and custom avatars for a project or issue type.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n None. "
          },
          "response": []
        },
        {
          "_postman_id": "9d74a981-4a68-493d-b8c6-cb73f7010208",
          "name": "Create avatar",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?size={{size}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "universal_avatar",
                "type",
                ":type",
                "owner",
                ":entityId"
              ],
              "query": [
                {
                  "description": "The X coordinate of the top-left corner of the crop region.",
                  "key": "x",
                  "value": "{{x}}",
                  "disabled": true
                },
                {
                  "description": "The Y coordinate of the top-left corner of the crop region.",
                  "key": "y",
                  "value": "{{y}}",
                  "disabled": true
                },
                {
                  "description": "The length of each side of the crop region.",
                  "key": "size",
                  "value": "{{size}}"
                }
              ],
              "variable": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "description": "\nThe type of the entity. Valid values are project and issuetype."
                },
                {
                  "key": "entityId",
                  "value": "{{entityId}}",
                  "description": "The ID of the entity item."
                }
              ]
            },
            "description": "Creates a custom avatar for a project or issue type.\n <p>\n Specify the avatar's local file location as binary data in the body of the request. Also, include the following headers:\n <ul>\n     <li><code>X-Atlassian-Token: no-check</code></li>\n     <li><code>Content-Type: image/<em>image type</em></code> Valid image types are JPEG, GIF, or PNG.</li>\n </ul>\n <p>\n For example:\n <p>\n  <code>curl --request POST \\ <p>\n   --user email@example.com:&lt;api_token&gt; \\  <p>\n   --header 'X-Atlassian-Token: no-check' \\ <p>\n   --header 'Content-Type: image/&lt; image_type&gt;' \\ <p>\n   --data-binary \"&lt;@/path/to/file/with/your/avatar&gt;\" \\ <p>\n   --url 'https://your-domain.atlassian.net/rest/api/3/issuetype/{issueTypeId}'</code>\n <p>\n The avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of\n the image. The length of the square's sides is set to the smaller of the height or width of the image.\n <p>\n The cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.\n <p>\n After creating the avatar use:\n <ul>\n   <li><a href=\"#api-api-3-issuetype-id-put\">Update issue type</a> to set it as the issue type's active avatar.</li>\n   <li><a href=\"#api-api-3-project-projectIdOrKey-avatar-put\">Update project avatar</a> to set it as the\n   project's active avatar.</li>\n </ul>\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "6a070967-062d-49d7-9f46-d4e7990588a5",
          "name": "Delete avatar",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "universal_avatar",
                "type",
                ":type",
                "owner",
                ":owningObjectId",
                "avatar",
                ":id"
              ],
              "variable": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "description": "\nThe type of the entity. Valid values are project and issuetype."
                },
                {
                  "key": "owningObjectId",
                  "value": "{{owningObjectId}}",
                  "description": "The ID of the entity item."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the avatar."
                }
              ]
            },
            "description": "Deletes an avatar from a project or issue type.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "15f35731-9164-45fc-926f-37af505a062a",
          "name": "Get user",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user. Deprecated in favour of accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to include additional information about users in the response. This parameter accepts multiple values separated by a comma:\n               \n               groups includes all groups and nested groups to which the user belongs.\n               applicationRoles includes details of all the applications to which the user has access.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> None. "
          },
          "response": []
        },
        {
          "_postman_id": "530647d8-fb98-40df-bc34-3e0b9c2f289e",
          "name": "Create user",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"charlie\",\"password\":\"abracadabra\",\"emailAddress\":\"charlie@atlassian.com\",\"displayName\":\"Charlie of Atlassian\"}"
            },
            "url": "https://{{host}}/rest/api/3/user",
            "description": "Creates a user. This resource is retained for legacy compatibility. As soon as a more suitable alternative is\n available this resource will be deprecated.\n\n The option is provided to set or generate a password for the user. When using the option to generate a password,\n by omitting <code>password</code> from the request, include <code>\"notification\": \"true\"</code> to ensure the\n user is sent an email advising them that their account has been created. This email includes a link for the user to\n set their password. If the notification isn't sent for a generated password, the user will need to be sent\n a reset password request from Jira.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "420413b7-8809-4f06-88ff-74716f2edf2d",
          "name": "Delete user",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user"
              ],
              "query": [
                {
                  "description": "the account ID",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "\nThe username of the user. Must be provided if key is not provided. Deprecated in favour of accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "\nThe key of the user. Must be provided if name is not provided.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                }
              ]
            },
            "description": "Deletes a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Site administration (i.e.,\n member of the site-admin <a href=\"https://confluence.atlassian.com/display/Cloud/Manage+groups\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "6aeff05b-4f2d-4ade-9a3a-8906277dba4b",
          "name": "Find users assignable to projects",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/assignable/multiProjectSearch?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "assignable",
                "multiProjectSearch"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "The search string. Deprecated in favour of query.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of project keys (case sensitive).",
                  "key": "projectKeys",
                  "value": "{{projectKeys}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users who fulfill both of these criteria:\n <ul>\n     <li>their user attributes match a string.</li>\n     <li>they can be assigned issues in one or more projects.</li>\n</ul>\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None. "
          },
          "response": []
        },
        {
          "_postman_id": "4b5da00f-1634-4199-a72d-1ff3c3c80184",
          "name": "Find users assignable to issues",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/assignable/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "assignable",
                "search"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user. Deprecated in favour of query parameter.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "\nThe project ID or project key (case sensitive). Must be provided if issueKey is not provided.",
                  "key": "project",
                  "value": "{{project}}",
                  "disabled": true
                },
                {
                  "description": "\nThe key of the issue. Must be provided if project is not provided.",
                  "key": "issueKey",
                  "value": "{{issueKey}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "The ID of the transition.",
                  "key": "actionDescriptorId",
                  "value": "{{actionDescriptorId}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users that can be assigned to an issue. Use this method to find the list of users who can be assigned to:\n <ul>\n <li>a new issue, by providing the <code>projectKeyOrId</code>.</li>\n <li>an updated issue, by providing the <code>issueKey</code>.</li>\n <li>to an issue during a transition (workflow action), by providing the <code>issueKey</code> and the transition id in\n <code>actionDescriptorId</code>. You can obtain the IDs of an issue's valid transitions using the\n <code>transitions</code> option in the <code>expand</code> parameter of\n <a href=\"#api-api-3-issue-issueIdOrKey-get\">\n Get issue</a>.</li>\n </ul>\n In all these cases, you can pass a username to determine if a user can be assigned to an issue. The user is\n returned in the response if they can be assigned to the issue or issue transition.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "42ff75b5-a640-4110-b021-bb8624b44d7d",
          "name": "Bulk get users",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/bulk?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "bulk"
              ],
              "query": [
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 200.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "\nComma-separated list of usernames. Required if key isn't provided.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "\nComma-separated list of user keys. Required if username isn't provided.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns details of users specified in a list of usernames or keys.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. Users with permission to access Jira\n can call this method, but empty search results are returned. "
          },
          "response": []
        },
        {
          "_postman_id": "71edfcf4-bc25-448e-9b9b-7ac70f3a443a",
          "name": "Get user default columns",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/columns?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "columns"
              ],
              "query": [
                {
                  "description": "the account ID",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user. Deprecated in favour of accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the default <a href=\"https://confluence.atlassian.com/x/XYdKLg\"> issue table columns</a> for the user.\n If a username is not passed in the request, the calling user's details are returned.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n <li>To get the column details for any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLgl\">global permission</a>. </li>\n <li>To get the calling user's column details: None</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "56c98bb7-08e4-4b51-9344-9f7153776da8",
          "name": "Set user default columns",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*, multipart/form-data"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/columns?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "columns"
              ],
              "query": [
                {
                  "description": "the account ID",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                }
              ]
            },
            "description": "Sets the default <a href=\"https://confluence.atlassian.com/x/XYdKLg\">\n issue table columns</a> for the user. If a username is not passed, the calling user's default columns are set. If no\n column details are sent, then all default columns are removed.\n\n The parameters for this resource are expressed as HTML form data. For example, in curl:\n <code>curl -X PUT -d username=&#60;username&#62; -d columns=summary -d columns=description &#60;url&#62;</code>\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n <li>To set the columns on any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n <li>To set the calling user's columns: None</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "380964fd-706f-4ab4-b8b9-0b1fbec33323",
          "name": "Reset user default columns",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/columns?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "columns"
              ],
              "query": [
                {
                  "description": "the account ID",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user. Deprecated in favour of accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ]
            },
            "description": "Resets the default <a href=\"https://confluence.atlassian.com/x/XYdKLg\">\n issue table columns</a> for the user to the system default. If a username is not passed, the calling user's\n default columns are reset.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n <li>To set the columns on any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n <li>To set the calling user's columns: None</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "b3d4236c-a74e-4653-b34f-80a67a8f32d8",
          "name": "Get user groups",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/groups?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "groups"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user. Deprecated in favour of accountId.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the groups to which a user belongs.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions required</a>:</b> <i>Browse users and groups</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "c18f7fa6-fe98-44c4-940f-9c38802f3875",
          "name": "Find users with permissions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/permission/search?permissions={{permissions}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "permission",
                "search"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "The search string. Deprecated in favour of query.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of permissions. The valid permissions are:\n \n     ADMINISTER\n     ASSIGNABLE_USER\n     ASSIGN_ISSUE\n     ATTACHMENT_DELETE_ALL\n     ATTACHMENT_DELETE_OWN\n     BROWSE\n     BULK_CHANGE\n     CLOSE_ISSUE\n     COMMENT_DELETE_ALL\n     COMMENT_DELETE_OWN\n     COMMENT_EDIT_ALL\n     COMMENT_EDIT_OWN\n     COMMENT_ISSUE\n     CREATE_ATTACHMENT\n     CREATE_ISSUE\n     CREATE_SHARED_OBJECTS\n     DELETE_ISSUE\n     EDIT_ISSUE\n     LINK_ISSUE\n     MANAGE_GROUP_FILTER_SUBSCRIPTIONS\n     MANAGE_WATCHER_LIST\n     MODIFY_REPORTER\n     MOVE_ISSUE\n     PROJECT_ADMIN\n     RESOLVE_ISSUE\n     SCHEDULE_ISSUE\n     SET_ISSUE_SECURITY\n     SYSTEM_ADMIN\n     TRANSITION_ISSUE\n     USE\n     USER_PICKER\n     VIEW_VERSION_CONTROL\n     VIEW_VOTERS_AND_WATCHERS\n     VIEW_WORKFLOW_READONLY\n     WORKLOG_DELETE_ALL\n     WORKLOG_DELETE_OWN\n     WORKLOG_EDIT_ALL\n     WORKLOG_EDIT_OWN\n     WORK_ISSUE\n",
                  "key": "permissions",
                  "value": "{{permissions}}"
                },
                {
                  "description": "The issue key for the issue.",
                  "key": "issueKey",
                  "value": "{{issueKey}}",
                  "disabled": true
                },
                {
                  "description": "The project key for the project (case sensitive).",
                  "key": "projectKey",
                  "value": "{{projectKey}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users who fulfill both of these criteria:\n <ul>\n     <li>their user attributes match a search string.</li>\n     <li>they have a set of permissions for a project or issue.</li>\n </ul>\n If no search string is provided, a list of all users with the permissions is returned.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n <li>Get users for any project, <i>Administer Jira</i> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.</li>\n <li>Get users for a project, <i>Administer Projects</i>\n <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>\n for the project.</li>\n </ul> "
          },
          "response": []
        },
        {
          "_postman_id": "37d026c3-b252-47ba-ac29-6be8f66f4b15",
          "name": "Find users for picker",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/picker?query={{query}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "picker"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}"
                },
                {
                  "description": "\nThe maximum number of items to return. Maximum is 1000. The total number of matched users\n                     is returned in total.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Include the URI to the user's avatar.",
                  "key": "showAvatar",
                  "value": "{{showAvatar}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of usernames to exclude from the search results. Deprecated in favour of excludeUserAccountIds.",
                  "key": "exclude",
                  "value": "{{exclude}}",
                  "disabled": true
                },
                {
                  "description": "A comma-separated list of user accountIds to exclude from the search results.",
                  "key": "excludeAccountIds",
                  "value": "{{excludeAccountIds}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users whose attributes match the query term. The returned object\n includes the <code>html</code> field where the matched query term is highlighted with the HTML strong tag. A list\n of usernames can be provided to exclude users from the results.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Browse users and groups</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. Users with permission to access Jira\n can call this method, but will only get search results for an exact name match. "
          },
          "response": []
        },
        {
          "_postman_id": "e7542283-0f07-40f3-ad12-b2ec2d19a8f0",
          "name": "Get user property keys",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/properties?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "properties"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "userKey",
                  "value": "{{userKey}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all property keys on a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li>To access the property keys on any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n     <li>To access the calling user's property keys: None</li>\n </ul>\n\n Note: These user properties are unrelated to the\n <a href=\"https://confluence.atlassian.com/cloud/add-data-to-users-for-advanced-functions-jira-applications-only-744721649.html\">Jira properties</a>\n that can be set through the UI. "
          },
          "response": []
        },
        {
          "_postman_id": "c0525bb7-500c-4e13-aaee-eea07b8f399d",
          "name": "Get user property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/properties/:propertyKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "properties",
                ":propertyKey"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "userKey",
                  "value": "{{userKey}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the user's property."
                }
              ]
            },
            "description": "Returns the value of a user's property. If no property key is provided\n <a href=\"#api-api-3-user-properties-get\">Get user property keys</a> is called.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li>To get a property from any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n     <li>To get a property from the calling user's record: None</li>\n </ul>\n\n Note: These user properties are unrelated to the\n <a href=\"https://confluence.atlassian.com/cloud/add-data-to-users-for-advanced-functions-jira-applications-only-744721649.html\">Jira properties</a>\n that can be set through the UI. "
          },
          "response": []
        },
        {
          "_postman_id": "4af33b86-fc0f-4f52-8be5-64ead12fdaab",
          "name": "Set user property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/properties/:propertyKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "properties",
                ":propertyKey"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "userKey",
                  "value": "{{userKey}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the user's property. The maximum length of the key is 255 bytes."
                }
              ]
            },
            "description": "Sets the value of a user's property. Use this resource to store custom data against a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li>To set a property on any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n     <li>To set a property on the calling user's record: None</li>\n </ul>\n\n Note: These user properties are unrelated to the\n <a href=\"https://confluence.atlassian.com/cloud/add-data-to-users-for-advanced-functions-jira-applications-only-744721649.html\">Jira properties</a>\n that can be set through the UI. "
          },
          "response": []
        },
        {
          "_postman_id": "c3d4c4ca-b609-4afe-8616-ea2a2bc99280",
          "name": "Delete user property",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "write:jira-work"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/properties/:propertyKey?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "properties",
                ":propertyKey"
              ],
              "query": [
                {
                  "description": "The account ID of the user.",
                  "key": "accountId",
                  "value": "{{accountId}}",
                  "disabled": true
                },
                {
                  "description": "The key of the user.",
                  "key": "userKey",
                  "value": "{{userKey}}",
                  "disabled": true
                },
                {
                  "description": "The username of the user.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "propertyKey",
                  "value": "{{propertyKey}}",
                  "description": "The key of the user's property."
                }
              ]
            },
            "description": "Deletes a property from a user.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b>\n <ul>\n     <li>To delete a property from any user: <i>Administer Jira</i>\n <a href=\"https://confluence.atlassian.com/adminjiracloud/managing-global-permissions-776636359.html\">global permission</a>. </li>\n     <li>To delete a property from the calling user's record: None</li>\n </ul>\n\n Note: These user properties are unrelated to the\n <a href=\"https://confluence.atlassian.com/cloud/add-data-to-users-for-advanced-functions-jira-applications-only-744721649.html\">Jira properties</a>\n that can be set through the UI. "
          },
          "response": []
        },
        {
          "_postman_id": "4ac3f154-1bcc-4d73-97a3-faa3f86a21f4",
          "name": "Find users",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "search"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "A query string used to search username, display name, and email address. The string is matched to\n                        the starting letters of any word in the searched fields. For example, ar matches to the username archie\n                        but not mark. This field is deprecated in favour of query parameter.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Include active users.",
                  "key": "includeActive",
                  "value": "{{includeActive}}",
                  "disabled": true
                },
                {
                  "description": "Include inactive users.",
                  "key": "includeInactive",
                  "value": "{{includeInactive}}",
                  "disabled": true
                },
                {
                  "description": "A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (=) characters cannot be used. The query string cannot be specified using a JSON object.\n                        Example: To search for the value of nested from {\"something\":{\"nested\":1,\"other\":2}} use\n                        thepropertykey.something.nested=1.",
                  "key": "property",
                  "value": "{{property}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users that match the search string and property.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Browse users and groups</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. Users with permission to access Jira\n can call this method, but empty search results are returned. "
          },
          "response": []
        },
        {
          "_postman_id": "f9a88566-dfb4-47e5-9df2-91ba10d4e3e0",
          "name": "Find users by query",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/search/query?query={{query}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "search",
                "query"
              ],
              "query": [
                {
                  "description": "The search query.",
                  "key": "query",
                  "value": "{{query}}"
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Include inactive users in the results.",
                  "key": "includeInactive",
                  "value": "{{includeInactive}}",
                  "disabled": true
                }
              ]
            },
            "description": "Finds users using a structured query and returns user details.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse users and groups</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.\n\n The available queries statements are:\n <ul\n <li><code>is assignee of PROJ</code> Returns the users that are assignees of at least one issue in project <em>PROJ</em>.</li>\n <li><code>is assignee of (PROJ-1, PROJ-2)</code> Returns users that are assignees on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is reporter of (PROJ-1, PROJ-2)</code> Returns users that are reporters on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is watcher of (PROJ-1, PROJ-2)</code> Returns users that are watchers on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is voter of (PROJ-1, PROJ-2)</code> Returns users that are voters on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is commenter of (PROJ-1, PROJ-2)</code> Returns users that have posted a comment on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is transitioner of (PROJ-1, PROJ-2)</code> Returns users that have performed a transition on issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>[propertyKey].entity.property.path is \"property value\"</code> Returns users with the entity property value.</li>\n </ul>\n\n The list of issues can be extended as needed, as in <em>(PROJ-1, PROJ-2, ... PROJ-n)</em>. Statements can be\n combined using the <code>AND</code> and <code>OR</code> operators to form more complex queries, for example:\n <p>\n <code>is assignee of PROJ AND [propertyKey].entity.property.path is \"property value\"</code> "
          },
          "response": []
        },
        {
          "_postman_id": "e4945662-b561-48fe-903b-b8127db2f046",
          "name": "Find user keys by query",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/search/query/key?query={{query}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "search",
                "query",
                "key"
              ],
              "query": [
                {
                  "description": "The search query.",
                  "key": "query",
                  "value": "{{query}}"
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "The maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                },
                {
                  "description": "Include inactive users in the results.",
                  "key": "includeInactive",
                  "value": "{{includeInactive}}",
                  "disabled": true
                }
              ]
            },
            "description": "Finds users using a structured query and returns a list of user keys.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse users and groups</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.\n\n The available query statements are:\n <ul>\n <li><code>is assignee of PROJ</code> Returns the users that are assignees of at least one issue in project <em>PROJ</em>.</li>\n <li><code>is assignee of (PROJ-1, PROJ-2)</code> Returns users that are assignees on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is reporter of (PROJ-1, PROJ-2)</code> Returns users that are reporters on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is watcher of (PROJ-1, PROJ-2)</code> Returns users that are watchers on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is voter of (PROJ-1, PROJ-2)</code> Returns users that are voters on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is commenter of (PROJ-1, PROJ-2)</code> Returns users that have posted a comment on the issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>is transitioner of (PROJ-1, PROJ-2)</code> Returns users that have performed a transition on issues <em>PROJ-1</em> or <em>PROJ-2</em>.</li>\n <li><code>[propertyKey].entity.property.path is \"property value\"</code> Returns users with the entity property value.</li>\n </ul>\n <p>\n The list of issues can be extended as needed, as in <em>(PROJ-1, PROJ-2, ... PROJ-n)</em>. Statements can be\n combined using the <code>AND</code> and <code>OR</code> operators to form more complex queries, for example:\n <p>\n <code>is assignee of PROJ AND [propertyKey].entity.property.path is \"property value\"</code> "
          },
          "response": []
        },
        {
          "_postman_id": "9670ec7a-acb2-4d23-a910-4ac973a74088",
          "name": "Find users with browse permission",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-user"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/user/viewissue/search?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "user",
                "viewissue",
                "search"
              ],
              "query": [
                {
                  "description": "A search input that is matched against appropriate user attributes to find relevant users.",
                  "key": "query",
                  "value": "{{query}}",
                  "disabled": true
                },
                {
                  "description": "The search string. Deprecated in favour of query.",
                  "key": "username",
                  "value": "{{username}}",
                  "disabled": true
                },
                {
                  "description": "The issue key for the issue.",
                  "key": "issueKey",
                  "value": "{{issueKey}}",
                  "disabled": true
                },
                {
                  "description": "The project key for the project (case sensitive).",
                  "key": "projectKey",
                  "value": "{{projectKey}}",
                  "disabled": true
                },
                {
                  "description": "The index of the first item to return in a page of results (page offset).",
                  "key": "startAt",
                  "value": "{{startAt}}",
                  "disabled": true
                },
                {
                  "description": "\nThe maximum number of items to return per page. Maximum is 1000.",
                  "key": "maxResults",
                  "value": "{{maxResults}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of users who fulfill both of these criteria:\n <ul>\n     <li>their user attributes match a search string.</li>\n     <li>they have permission to browse issues.</li>\n </ul>\n\n Use this resource to find users who can browse:\n <ul>\n <li>an issue, by providing the <code>issueKey</code>.</li>\n <li>any issue in a project, by providing the <code>projectKey</code>.</li>\n </ul>\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Browse users and groups</i>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. Users with permission to access Jira\n can call this method, but empty search results are returned. "
          },
          "response": []
        },
        {
          "_postman_id": "44b4adfd-5dd0-41a2-9ff4-90f5a4d9c626",
          "name": "Create version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"userReleaseDate\":\"6/Jul/2010\",\"project\":\"PXA\",\"projectId\":10000}"
            },
            "url": "https://{{host}}/rest/api/3/version",
            "description": "Creates a project version.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "4a21f92c-9dee-4f09-a5e9-ae4282e36ecc",
          "name": "Get remote version links",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/remotelink?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                "remotelink"
              ],
              "query": [
                {
                  "description": "the global ID of the remote resource that is linked to the versions",
                  "key": "globalId",
                  "value": "{{globalId}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns the remote version links for a given global ID. "
          },
          "response": []
        },
        {
          "_postman_id": "792ea07b-60d4-40f0-8679-697d11aba4ca",
          "name": "Get version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id"
              ],
              "query": [
                {
                  "description": "Use expand to include additional information about version in the response. This parameter accepts multiple values separated by a comma:\n               \n               operations Returns the list of operations available for this version.\n               remotelinks Returns the list of remote links stored against this version.\n               issuesstatus Returns the count of issues in this version for each of the status categories to do,\n               in progress, done, and unmapped. The unmapped\n               property represents the number of issues with a status other than to do, in progress, and done.\n               ",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Returns a project version.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse projects</em>\n <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "e3953899-39f0-40b6-84b7-3c6082fbb7e3",
          "name": "Update version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"self\":\"http://your-domain.atlassian.net/rest/api/~ver~/version/10000\",\"id\":\"10000\",\"description\":\"An excellent version\",\"name\":\"New Version 1\",\"archived\":false,\"released\":true,\"releaseDate\":\"2010-07-06\",\"overdue\":true,\"userReleaseDate\":\"6/Jul/2010\",\"projectId\":10000}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Modifies a project version.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "16a7200c-969d-4d54-b8db-55c385dc1377",
          "name": "Delete version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id"
              ],
              "query": [
                {
                  "description": "\nThe ID of the version to update fixVersion to when the field\n                             contains the deleted version. The replacement version must be in the same project\n                             as the version being deleted and cannot be the version being deleted.",
                  "key": "moveFixIssuesTo",
                  "value": "{{moveFixIssuesTo}}",
                  "disabled": true
                },
                {
                  "description": "\nThe ID of the version to update affectedVersion to when the\n                             field contains the deleted version. The replacement version must be in the same project\n                             as the version being deleted and cannot be the version being deleted.",
                  "key": "moveAffectedIssuesTo",
                  "value": "{{moveAffectedIssuesTo}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Deletes a project version.\n\n Deprecated, use <a href=\"#api-api-3-version-id-removeAndSwap-post\">\n Delete and replace version</a> that supports swapping version values in custom fields, in addition to the swapping for\n <code>fixVersion</code> and <code>affectedVersion</code> provided in this resource.\n\n Alternative versions can be provided to update issues that use the deleted version in\n <code>fixVersion</code> or <code>affectedVersion</code>. If alternatives are not provided,\n occurrences of <code>fixVersion</code> and <code>affectedVersion</code> that contain the deleted version are cleared.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "5d3ae492-6e5a-4df8-adf4-d806eaf324ed",
          "name": "Merge versions",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id",
                "mergeto",
                ":moveIssuesTo"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version to delete."
                },
                {
                  "key": "moveIssuesTo",
                  "value": "{{moveIssuesTo}}",
                  "description": "The ID of the version to merge into."
                }
              ]
            },
            "description": "Merges two project versions. The merge is completed by deleting the version specified in <code>id</code> and\n replacing any occurrences of its ID in <code>fixVersion</code> with the version ID specified in\n <code>moveIssuesTo</code>.\n\n Consider using <a href=\"#api-api-3-version-id-removeAndSwap-post\">\n Delete and replace version</a> instead. This resource supports swapping version values in <code>fixVersion</code>,\n <code>affectedVersion</code>, and custom fields.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "9bee6cf0-f988-4261-bf1d-93215ae0481b",
          "name": "Move version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"after\":\"http://your-domain.atlassian.net/rest/api/~ver~/version/10000\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id/move",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id",
                "move"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version to be moved."
                }
              ]
            },
            "description": "Modifies the version's sequence within the project, which affects the display order of the versions in Jira.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "1d902e06-6814-4b91-bd6a-aeed61ef8631",
          "name": "Get version's related issues count",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id/relatedIssueCounts",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id",
                "relatedIssueCounts"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Returns the following counts for a version:\n <ul>\n     <li>Number of issues where the <code>fixVersion</code> is set to the version.</li>\n     <li>Number of issues where the <code>affectedVersion</code> is set to the version.</li>\n     <li>Number of issues where a version custom field is set to the version.</li>\n</ul>\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse projects</em>\n <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "900a1429-dbfe-4890-86fc-6b69174873c6",
          "name": "Delete and replace version",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id/removeAndSwap",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id",
                "removeAndSwap"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Deletes a project version.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>\n or <em>Administer Projects</em> <a href=\"https://confluence.atlassian.com/x/yodKLg\">project permission</a>.\n\n Alternative versions can be provided to update issues that use the deleted version in <code>fixVersion</code>,\n <code>affectedVersion</code>, or any version picker custom fields. If alternatives are not provided,\n occurrences of <code>fixVersion</code>, <code>affectedVersion</code>, and any version picker custom field,\n that contain the deleted version, are cleared. Any replacement version must be in the same project as the version\n being deleted and cannot be the version being deleted. "
          },
          "response": []
        },
        {
          "_postman_id": "a15fd796-0995-45ee-954c-141ed14faf24",
          "name": "Get version's unresolved issues count",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:id/unresolvedIssueCount",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":id",
                "unresolvedIssueCount"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the version."
                }
              ]
            },
            "description": "Returns counts of the issues and unresolved issues for the project version.\n\n <a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Browse projects</em>\n <a https://confluence.atlassian.com/x/yodKLg\">project permission</a> "
          },
          "response": []
        },
        {
          "_postman_id": "2cbbdbfb-6737-4d20-abfd-46037274a963",
          "name": "Get remote version links by version id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}",
                  "description": "a String containing the version ID"
                }
              ]
            },
            "description": "Returns the remote version links associated with the given version ID. "
          },
          "response": []
        },
        {
          "_postman_id": "9f95b573-e0fe-4dc2-b8fb-ab0dd1ab4f5e",
          "name": "Create or update remote version link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"globalId\":\"SomeGlobalId\",\"myCustomLinkProperty\":true,\"colors\":[\"red\",\"green\",\"blue\"],\"notes\":[\"Remote version links may take any well-formed JSON shape that is desired,\",\"provided that they fit within the maximum buffer size allowed,\",\"which is currently 32,768 characters.\"]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}"
                }
              ]
            },
            "description": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated. "
          },
          "response": []
        },
        {
          "_postman_id": "8e150241-590e-4f5a-b0c5-6e8ec5d1ab21",
          "name": "Delete remote version links by version id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}",
                  "description": "The version for which to delete ALL existing remote version links"
                }
              ]
            },
            "description": "Delete all remote version links for a given version ID. "
          },
          "response": []
        },
        {
          "_postman_id": "7d6b0e3f-dd7f-4ba1-8e33-22c2f6ff20d0",
          "name": "Get remote version link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink/:globalId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink",
                ":globalId"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}",
                  "description": "a String containing the version id"
                },
                {
                  "key": "globalId",
                  "value": "{{globalId}}",
                  "description": "The id of the remote issue link to be returned. If {@code null} (not provided) all remote links for the issue are returned.\n                  \n                  Remote version links follow the same general rules that Issue Links do, except that they are permitted to\n                  use any arbitrary well-formed JSON data format with no restrictions imposed.  It is recommended, but not\n                  required, that they follow the same format used for Remote Issue Links, as described at\n                  https://developer.atlassian.com/display/JIRADEV/Fields+in+Remote+Issue+Links.\n                  "
                }
              ]
            },
            "description": "A REST sub-resource representing a remote version link "
          },
          "response": []
        },
        {
          "_postman_id": "5beb7bbe-74b6-42a8-89ab-06529360deb9",
          "name": "Create or update remote version link with global id",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"globalId\":\"SomeGlobalId\",\"myCustomLinkProperty\":true,\"colors\":[\"red\",\"green\",\"blue\"],\"notes\":[\"Remote version links may take any well-formed JSON shape that is desired,\",\"provided that they fit within the maximum buffer size allowed,\",\"which is currently 32,768 characters.\"]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink/:globalId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink",
                ":globalId"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}"
                },
                {
                  "key": "globalId",
                  "value": "{{globalId}}"
                }
              ]
            },
            "description": "Create a remote version link via POST using the provided global ID. "
          },
          "response": []
        },
        {
          "_postman_id": "5267d82c-22b5-4ace-a675-62a4bd457b2a",
          "name": "Delete remote version link",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-project"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/version/:versionId/remotelink/:globalId",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "version",
                ":versionId",
                "remotelink",
                ":globalId"
              ],
              "variable": [
                {
                  "key": "versionId",
                  "value": "{{versionId}}",
                  "description": "The version ID of the remote link"
                },
                {
                  "key": "globalId",
                  "value": "{{globalId}}",
                  "description": "The global ID of the remote link"
                }
              ]
            },
            "description": "Delete a specific remote version link with the given version ID and global ID. "
          },
          "response": []
        },
        {
          "_postman_id": "74c85e2c-4a20-4ce7-a0e9-8172c315ad8e",
          "name": "Get all workflows",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflow?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of the workflow to be returned. Only one workflow can be specified.",
                  "key": "workflowName",
                  "value": "{{workflowName}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns all workflows in Jira or a single workflow.\n <p>\n If the <code>workflowName</code> parameter is specified, a workflow will be returned as an object (not in an array).\n Otherwise, an array of workflow objects will be returned.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "ecd4733b-1176-45f4-9d69-4f33ef3d2a13",
          "name": "Get workflow transition properties",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "manage:jira-configuration"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflow/transitions/:transitionId/properties?workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflow",
                "transitions",
                ":transitionId",
                "properties"
              ],
              "query": [
                {
                  "description": "\nSome properties with keys that have the jira. prefix are reserved, i.e., not\n                            editable. To include these properties in the results, set this parameter to true.",
                  "key": "includeReservedKeys",
                  "value": "{{includeReservedKeys}}",
                  "disabled": true
                },
                {
                  "description": "The key of the property being returned, also known as the name of the property. If this parameter is not specified, all properties on the transition are returned.",
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true
                },
                {
                  "description": "The name of the workflow that the transition belongs to.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                },
                {
                  "description": "\nThe workflow status. Set to live for active and inactive workflows, or\n                            draft for draft workflows.",
                  "key": "workflowMode",
                  "value": "{{workflowMode}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "transitionId",
                  "value": "{{transitionId}}",
                  "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira administration console. The ID is shown next to the transition."
                }
              ]
            },
            "description": "Returns the properties on a workflow transition.\n Transition properties are used to change the behavior of a transition. For more information, see\n <a href=\"https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties\">Transition properties</a>\n and <a href=\"https://confluence.atlassian.com/x/JYlKLg\">Workflow properties</a>.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "5e4d95c7-4040-4156-8eba-9e6529d01457",
          "name": "Create workflow transition property",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":\"createissue\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflow/transitions/:transitionId/properties?key={{key}}&workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflow",
                "transitions",
                ":transitionId",
                "properties"
              ],
              "query": [
                {
                  "description": "The key of the property being added, also known as the name of the property. Set this to the\n                     same value as the key defined in the request body.",
                  "key": "key",
                  "value": "{{key}}"
                },
                {
                  "description": "The name of the workflow that the transition belongs to.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                },
                {
                  "description": "\nThe workflow status. Set to live for inactive workflows or draft for draft\n                     workflows. Active workflows cannot be edited.",
                  "key": "workflowMode",
                  "value": "{{workflowMode}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "transitionId",
                  "value": "{{transitionId}}",
                  "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
                }
              ]
            },
            "description": "Adds a property to a workflow transition.\n Transition properties are used to change the behavior of a transition. For more information, see\n <a href=\"https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties\">Transition properties</a>\n and <a href=\"https://confluence.atlassian.com/x/JYlKLg\">Workflow properties</a>.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "c0601824-3141-443f-876b-3abbb8298323",
          "name": "Update workflow transition property",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"value\":\"createissue\"}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflow/transitions/:transitionId/properties?key={{key}}&workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflow",
                "transitions",
                ":transitionId",
                "properties"
              ],
              "query": [
                {
                  "description": "The key of the property being updated, also known as the name of the property. Set this to the\n                     same value as the key defined in the request body.",
                  "key": "key",
                  "value": "{{key}}"
                },
                {
                  "description": "The name of the workflow that the transition belongs to.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                },
                {
                  "description": "\nThe workflow status. Set to live for inactive workflows or draft\n                     for draft workflows. Active workflows cannot be edited.",
                  "key": "workflowMode",
                  "value": "{{workflowMode}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "transitionId",
                  "value": "{{transitionId}}",
                  "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
                }
              ]
            },
            "description": "Updates a workflow transition by changing the property value. Trying to update a property that does not\n exist results in a new property being added to the transition.\n Transition properties are used to change the behavior of a transition. For more information, see\n <a href=\"https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties\">Transition properties</a>\n and <a href=\"https://confluence.atlassian.com/x/JYlKLg\">Workflow properties</a>.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "6c2a488f-40ea-4b9a-a234-895dadf2b46d",
          "name": "Delete workflow transition property",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflow/transitions/:transitionId/properties?key={{key}}&workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflow",
                "transitions",
                ":transitionId",
                "properties"
              ],
              "query": [
                {
                  "description": "The name of the transition property to delete, also known as the name of the property.",
                  "key": "key",
                  "value": "{{key}}"
                },
                {
                  "description": "The name of the workflow that the transition belongs to.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                },
                {
                  "description": "\nThe workflow status. Set to live for inactive workflows or draft\n                     for draft workflows. Active workflows cannot be edited.",
                  "key": "workflowMode",
                  "value": "{{workflowMode}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "transitionId",
                  "value": "{{transitionId}}",
                  "description": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
                }
              ]
            },
            "description": "Deletes a property from a workflow transition.\n Transition properties are used to change the behavior of a transition. For more information, see\n <a href=\"https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties\">Transition properties</a>\n and <a href=\"https://confluence.atlassian.com/x/JYlKLg\">Workflow properties</a>.\n <p>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <i>Administer Jira</i> global\n permission. "
          },
          "response": []
        },
        {
          "_postman_id": "38b99a9f-a1a1-4787-b68d-9fe168b9c77f",
          "name": "Create workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\",\"10001\":\"builds workflow\"}}"
            },
            "url": "https://{{host}}/rest/api/3/workflowscheme",
            "description": "Creates a workflow scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "4d8df18d-292b-4197-a660-713e07e94318",
          "name": "Get workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id"
              ],
              "query": [
                {
                  "description": "Returns the workflow scheme's draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned.",
                  "key": "returnDraftIfExists",
                  "value": "{{returnDraftIfExists}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in\n                            Jira. The ID will be shown in the URL as schemeId (for example,\n                            schemeId=10301)."
                }
              ]
            },
            "description": "Returns a workflow scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "1f7efd38-cae5-4013-ad33-3b63a73a2fd2",
          "name": "Update workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\"},\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in\n                            Jira. The ID will be shown in the URL as schemeId (for example,\n                            schemeId=10301)."
                }
              ]
            },
            "description": "Updates a workflow scheme, including the name, default workflow, issue type to project mappings, and more.\n If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is\n created or updated instead, provided that <code>updateDraftIfNeeded</code> is set to <code>true</code>.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "3e6c40dd-7b72-4218-a908-b627382032e5",
          "name": "Delete workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in\n                            Jira. The ID will be shown in the URL as schemeId (for example,\n                            schemeId=10301)."
                }
              ]
            },
            "description": "Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used\n by at least one project).\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "78d4dd6d-738c-4d34-b5a1-7ee86542268d",
          "name": "Create draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/createdraft",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "createdraft"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the active workflow scheme that the draft is created from."
                }
              ]
            },
            "description": "Create a draft workflow scheme from an active workflow scheme, by copying the active workflow scheme.\n Note that an active workflow scheme can only have one draft workflow scheme at any given time.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "aec02904-6e4d-430a-9238-63cbdc2f8233",
          "name": "Get default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/default?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "default"
              ],
              "query": [
                {
                  "description": "\nSet to true to return the default workflow for the workflow scheme's draft\n                            rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow\n                            for the workflow scheme is returned.",
                  "key": "returnDraftIfExists",
                  "value": "{{returnDraftIfExists}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned\n any issue types that have not been mapped to any other workflow. The default workflow has <em>All Unassigned Issue Types</em>\n listed in its issue types for the workflow scheme in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "34161523-d699-44f6-96c1-061a01e5d3a1",
          "name": "Update default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"workflow\":\"jira\",\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/default",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "default"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Sets the default workflow for a workflow scheme.\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> in the request object and a draft workflow scheme will be created or updated with the new default workflow.\n The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "7a4df9a8-224d-4f13-9e0b-ccb26359086f",
          "name": "Delete default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/default?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "default"
              ],
              "query": [
                {
                  "description": "Set to true to create or update the draft of a workflow scheme and delete the mapping\n                            from the draft, when the workflow scheme cannot be edited. Defaults to false.",
                  "key": "updateDraftIfNeeded",
                  "value": "{{updateDraftIfNeeded}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira's system workflow\n (the <em>jira</em> workflow).\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> and a draft workflow scheme will be created or updated with the default workflow reset.\n The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "3602bbb4-5fae-4615-aba3-959a76ecdb65",
          "name": "Get draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the active workflow scheme that the draft was originally created from."
                }
              ]
            },
            "description": "Returns the draft workflow scheme for an active workflow scheme. Draft workflow schemes allow changes to be made\n to the active workflow schemes: When an active workflow scheme is updated, a draft copy is created. The draft is modified,\n then the changes in the draft are copied back to the active workflow scheme.\n See <a href=\"https://confluence.atlassian.com/x/tohKLg\">Configuring workflow schemes</a> for more information.\n <br>\n Note that:\n <ul>\n     <li>Only active workflow schemes can have draft workflow schemes.</li>\n     <li>An active workflow scheme can only have one draft workflow scheme at any given time.</li>\n </ul>\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "6512a71d-bafb-4b14-997d-a69fecaa5bb0",
          "name": "Update draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Example workflow scheme\",\"description\":\"The description of the example workflow scheme.\",\"defaultWorkflow\":\"jira\",\"issueTypeMappings\":{\"10000\":\"scrum workflow\"},\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the active workflow scheme that the draft was originally created from."
                }
              ]
            },
            "description": "Updates a draft workflow scheme. If a draft workflow scheme does not exist for the active workflow scheme, then\n a draft is created. Note that an active workflow scheme can only have one draft workflow scheme at any given time.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "4721a012-4b7f-41b9-9959-65691c883024",
          "name": "Delete draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the active workflow scheme that the draft was originally created from."
                }
              ]
            },
            "description": "Deletes a draft workflow scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n Jira administration (that is, member of the <em>administrators</em> <a href=\"https://confluence.atlassian.com/x/24xjL\">group</a>). "
          },
          "response": []
        },
        {
          "_postman_id": "74386f92-3210-47b4-8bc1-aa4a9798bc59",
          "name": "Get draft default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/default",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "default"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Returns the default workflow for a workflow scheme's draft. The default workflow is the workflow that is assigned\n any issue types that have not been mapped to any other workflow. The default workflow has <em>All Unassigned Issue Types</em>\n listed in its issue types for the workflow scheme in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "ed47a9ad-1e41-4135-a493-9dacdfedded0",
          "name": "Update draft default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"workflow\":\"jira\",\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/default",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "default"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Sets the default workflow for a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "9bef973b-5134-408b-b4e0-ac9b854f0b14",
          "name": "Delete draft default workflow",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/default",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "default"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Resets the default workflow for a workflow scheme's draft. That is, the default workflow is set to Jira's system workflow\n (the <em>jira</em> workflow).\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "5789ddbe-7e64-42ed-a74f-bb64f370afda",
          "name": "Get workflow for issue type in draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "issuetype",
                ":issueType"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Returns the issue type-workflow mapping for an issue type in a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "4fc5fe11-78af-4d20-b85c-8c509a948289",
          "name": "Set workflow for issue type in draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"issueType\":\"10000\",\"workflow\":\"jira\",\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "issuetype",
                ":issueType"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Sets the workflow for an issue type in a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "b2482403-5ae9-4e2c-b6c7-2197c6725b04",
          "name": "Delete workflow for issue type in draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "issuetype",
                ":issueType"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Deletes the issue type-workflow mapping for an issue type in a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "83d0ba6f-92c1-4b9c-915e-ec6e29594266",
          "name": "Get issue types for workflows in draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/workflow?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Returns the workflow-issue type mappings for a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "e727b9c0-f691-4722-adbd-eead34da71d8",
          "name": "Set issue types for workflow in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"workflow\":\"jira\",\"issueTypes\":[\"10000\"],\"updateDraftIfNeeded\":true}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of the workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Sets the issue types for a workflow in a workflow scheme's draft. The workflow can also be set as the default workflow for\n the draft workflow scheme. Unmapped issues types are mapped to the default workflow.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "ac9c5300-1a8b-4f2a-bacd-bf088611de25",
          "name": "Delete issue types for workflow in draft workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "draft",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of the workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme that the draft belongs to."
                }
              ]
            },
            "description": "Deletes the workflow-issue type mapping for a workflow in a workflow scheme's draft.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "92bcb511-3e99-4ffa-9add-73b76a1947be",
          "name": "Get workflow for issue type in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "issuetype",
                ":issueType"
              ],
              "query": [
                {
                  "description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
                  "key": "returnDraftIfExists",
                  "value": "{{returnDraftIfExists}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Returns the issue type-workflow mapping for an issue type in a workflow scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "fe2c5f2c-2cd1-4b1d-abec-402a6d455cd4",
          "name": "Set workflow for issue type in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"issueType\":\"10000\",\"workflow\":\"jira\",\"updateDraftIfNeeded\":false}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "issuetype",
                ":issueType"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Sets the workflow for an issue type in a workflow scheme.\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> in the request body and a draft workflow scheme will be created or updated with the new issue type-workflow mapping.\n The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "1307f76f-27ca-4a3a-be8d-d5f4eb096314",
          "name": "Delete workflow for issue type in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "issuetype",
                ":issueType"
              ],
              "query": [
                {
                  "description": "Set to true to create or update the draft of a workflow scheme and update the mapping\n                            in the draft, when the workflow scheme cannot be edited. Defaults to false.",
                  "key": "updateDraftIfNeeded",
                  "value": "{{updateDraftIfNeeded}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                },
                {
                  "key": "issueType",
                  "value": "{{issueType}}",
                  "description": "The ID of the issue type."
                }
              ]
            },
            "description": "Deletes the issue type-workflow mapping for an issue type in a workflow scheme.\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> and a draft workflow scheme will be created or updated with the issue type-workflow mapping deleted.\n The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "98283c80-5640-48ee-bf48-6937cda0f108",
          "name": "Get issue types for workflows in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/workflow?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}",
                  "disabled": true
                },
                {
                  "description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
                  "key": "returnDraftIfExists",
                  "value": "{{returnDraftIfExists}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Returns the workflow-issue type mappings for a workflow scheme.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "743ed739-37c3-414f-a321-395325b7971e",
          "name": "Set issue types for workflow in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "PUT",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"workflow\":\"jira\",\"issueTypes\":[\"10000\"],\"updateDraftIfNeeded\":true}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/workflow?workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of the workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Sets the issue types for a workflow in a workflow scheme. The workflow can also be set as the default workflow for\n the workflow scheme. Unmapped issues types are mapped to the default workflow.\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> in the request body and a draft workflow scheme will be created or updated with the new workflow-issue\n types mappings. The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "87961492-d096-4756-a8ae-be8a7ad1b281",
          "name": "Delete issue types for workflow in workflow scheme",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/workflowscheme/:id/workflow?workflowName={{workflowName}}",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "workflowscheme",
                ":id",
                "workflow"
              ],
              "query": [
                {
                  "description": "The name of the workflow.",
                  "key": "workflowName",
                  "value": "{{workflowName}}"
                },
                {
                  "description": "Set to true to create or update the draft of a workflow scheme and delete the mapping\n                            from the draft, when the workflow scheme cannot be edited. Defaults to false.",
                  "key": "updateDraftIfNeeded",
                  "value": "{{updateDraftIfNeeded}}",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the workflow scheme."
                }
              ]
            },
            "description": "Deletes the workflow-issue type mapping for a workflow in a workflow scheme.\n <p>\n Note that active workflow schemes cannot be edited. If the workflow scheme is active, set <code>updateDraftIfNeeded</code>\n to <code>true</code> and a draft workflow scheme will be created or updated with the workflow-issue type mapping deleted.\n The draft workflow scheme can be published in Jira.\n <p>\n <b><a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/#permissions\">Permissions</a> required:</b>\n <em>Administer Jira</em> <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>. "
          },
          "response": []
        },
        {
          "_postman_id": "d819fa62-335c-40a9-9fbe-f3c301e4226f",
          "name": "Get IDs of deleted worklogs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/worklog/deleted?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "worklog",
                "deleted"
              ],
              "query": [
                {
                  "description": "The date and time, in UNIX timestamp format, after which deleted worklogs are returned.",
                  "key": "since",
                  "value": "{{since}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.\n\n <br><br>\n This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to\n youngest. If the number of items in the date range exceeds 1000, <code>until</code> indicates the timestamp\n of the youngest item on the page. Also, <code>nextPage</code> provides the URL for the next page of worklogs.\n The <code>lastPage</code> parameter is set to true on the last page of worklogs.\n <br><br>\n This resource does not return worklogs deleted during the minute preceding the request.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "d794d463-ea44-4fb3-aab6-a87c745e3354",
          "name": "Get worklogs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"ids\":[1,2,5,10]}"
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/worklog/list?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "worklog",
                "list"
              ],
              "query": [
                {
                  "description": "Use expand to\n               include additional information about worklogs in the response. This parameter accepts properties\n               that returns the properties of each worklog.",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns worklog details for a list of worklog IDs.\n <br><br>\n Worklogs can be set as viewable by:\n <ul>\n     <li>all users</li>\n     <li>members of a project role or group</li>\n </ul>\n For a worklog to be returned, it must be set as <em>Viewable by All Users</em> or the calling user must be a\n member of the project role or group with permission to view the worklog.\n <br><br>\n The returned list of worklogs is limited to 1000 items.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "5b8b424a-f4ef-4b93-af4a-6fd1793846e9",
          "name": "Get IDs of updated worklogs",
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessTokenUrl": "https://accounts.atlassian.com/authorize",
                "addTokenTo": "header",
                "clientAuth": "body",
                "clientId": "{{clientId}}",
                "clientSecret": "{{clientSecret}}",
                "grantType": "client_credentials",
                "scope": "read:jira-work"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://{{host}}/rest/api/3/worklog/updated?",
              "protocol": "https",
              "host": [
                "{{host}}"
              ],
              "path": [
                "rest",
                "api",
                "3",
                "worklog",
                "updated"
              ],
              "query": [
                {
                  "description": "The date and time, in UNIX timestamp format, after which updated worklogs are returned.",
                  "key": "since",
                  "value": "{{since}}",
                  "disabled": true
                },
                {
                  "description": "Use expand to\n               include additional information about worklogs in the response. This parameter accepts properties\n               that returns the properties of each worklog.",
                  "key": "expand",
                  "value": "{{expand}}",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a list of IDs and update timestamps for worklogs updated after a date and time.\n <br><br>\n This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to\n youngest. If the number of items in the date range exceeds 1000, <code>until</code> indicates the timestamp\n of the youngest item on the page. Also, <code>nextPage</code> provides the URL for the next page of worklogs.\n The <code>lastPage</code> parameter is set to true on the last page of worklogs.\n <br><br>\n This resource does not return worklogs updated during the minute preceding the request.\n <br><br>\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6be9f510-5796-48e1-ade3-f5610e5991ba",
      "name": "auth",
      "description": "Folder for auth",
      "item": [
        {
          "_postman_id": "f18aa2b0-5520-4747-9736-1d9bdd69d512",
          "name": "Get session",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/auth/1/session",
            "description": "This resource is deprecated and will be removed December 1, 2018. For more information, see\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/\">\n Deprecation notice - Basic authentication with passwords and cookie-based authentication</a>.\n\n Returns information about the session. If there is no session, the calling users details are returned.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> Permission to access Jira. "
          },
          "response": []
        },
        {
          "_postman_id": "bd6597a6-6542-42aa-9c48-7f9cc0e521e5",
          "name": "Create session",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"username\":\"mia\",\"password\":\"mias_password\"}"
            },
            "url": "https://{{host}}/rest/auth/1/session",
            "description": "This resource is deprecated and will be removed December 1, 2018. For more information, see\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/\">\n Deprecation notice - Basic authentication with passwords and cookie-based authentication</a>.\n\n Creates a session for the user in Jira. Use the session to access Jira's remote APIs and web UI by passing\n the <code>cloud.session.token</code> HTTP cookie.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> <em>Administer Jira</em>\n <a href=\"https://confluence.atlassian.com/x/x4dKLg\">global permission</a>.\n\n The response contains the <code>Set-Cookie</code> HTTP headers that <b>must</b> be honored by the\n caller. If you're using a cookie-aware HTTP client it will handle the <code>Set-Cookie</code> headers\n automatically. Setting up the <code>cloud.session.token</code> cookie is important because setting the token from\n the response body alone may not be sufficient for the authentication to work.\n\n <b>Note:</b> Use of this resource isn't recommended, use HTTP BASIC authentication with the REST API instead.\n However, this resource may be used to mimic the behavior of Jira's log-in page so that you can, for example,\n display log-in errors to the user. "
          },
          "response": []
        },
        {
          "_postman_id": "799f6a77-2f99-4a8f-bdb2-ecc2c7237f73",
          "name": "Delete session",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "password": "{{apiToken}}",
                "username": "{{username}}"
              }
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{host}}/rest/auth/1/session",
            "description": "This resource is deprecated and will be removed December 1, 2018. For more information, see\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/\">\n Deprecation notice - Basic authentication with passwords and cookie-based authentication</a>.\n\n Destroys the user's Jira session.\n\n <b><a href=\"https://confluence.atlassian.com/x/FQiiLQ\">Permissions</a> required:</b> None. "
          },
          "response": []
        }
      ]
    }
  ]
}